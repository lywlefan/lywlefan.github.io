<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>share猿</title>
  
  <subtitle>https://lywlefan.github.io/</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lywlefan.github.io/"/>
  <updated>2019-11-27T08:10:41.334Z</updated>
  <id>https://lywlefan.github.io/</id>
  
  <author>
    <name>share猿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初始Knative</title>
    <link href="https://lywlefan.github.io/2019/11/27/%E5%90%8E%E7%AB%AF/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86/Knative/%E5%88%9D%E5%A7%8BKnative/"/>
    <id>https://lywlefan.github.io/2019/11/27/后端/容器管理/Knative/初始Knative/</id>
    <published>2019-11-26T16:00:00.000Z</published>
    <updated>2019-11-27T08:10:41.334Z</updated>
    
    <content type="html"><![CDATA[<ul><li>函数即服务（FaaS） </li><li>平台即服务（PaaS） </li><li>无服务器架构（serverless） </li><li>路由（routing） </li><li>事件（eventing） </li><li><em>build（构建）</em> </li></ul><hr><h2 id="什么是Knative"><a href="#什么是Knative" class="headerlink" title="什么是Knative??"></a>什么是Knative??</h2><h3 id="Knative的目标"><a href="#Knative的目标" class="headerlink" title="Knative的目标"></a>Knative的目标</h3><p> Knative 的目标是在基于 Kubernetes 之上为整个开发生命周期提供帮助 。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><ul><li>作为开发人员能够以你<strong>想要的语言和以你想要的方式来编写代码</strong></li><li>其次帮助你<strong>构建和打包</strong>应用程序</li><li>最后帮助你<strong>运行和伸缩</strong>应用程序 </li></ul><h3 id="关键组件"><a href="#关键组件" class="headerlink" title="关键组件"></a>关键组件</h3><ul><li><em>build（构建）</em>你的应用程序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过灵活的插件化的构建系统将用户源代码构建成容器。目前已经支持多个构建系统，比如 Google 的 Kaniko，它无需运行 Docker daemon 就可以在 Kubernetes 集群上构建容器镜像。</span><br></pre></td></tr></table></figure><ul><li><em>serving（服务）</em>为其提供流量 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基于负载自动伸缩，包括在没有负载时缩减到零。允许你为多个修订版本（revision）应用创建流量策略，从而能够通过 URL 轻松路由到目标应用程序。</span><br></pre></td></tr></table></figure><ul><li><em>event（事件）</em>确保应用程序能够轻松地生产和消费。 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使得生产和消费事件变得容易。抽象出事件源，并允许操作人员使用自己选择的消息传递层。</span><br></pre></td></tr></table></figure><p><strong>综上所述</strong>:Knative是一个可以让Kubernetes<strong>更好用,扩展性更好的轮子</strong>。</p><h3 id="一些新的概念"><a href="#一些新的概念" class="headerlink" title="一些新的概念"></a>一些新的概念</h3><h4 id="无服务器架构-serverless"><a href="#无服务器架构-serverless" class="headerlink" title="无服务器架构(serverless)"></a>无服务器架构(serverless)</h4><h5 id="划重点"><a href="#划重点" class="headerlink" title="划重点"></a>划重点</h5><ul><li>以前需要编写大型/单一应用程序,现在<strong>只需要编写通过事件来调用小型/单一用途的函数即可</strong>。</li><li>对于托管服务来说,<strong>意味着只需要为活跃期间的计算付费</strong>,而不是一台7×24小时运行的虚拟机付费。</li><li>代码在需要时就运行,不需要时就停止。</li></ul><h5 id="Kubernetes遇到的问题"><a href="#Kubernetes遇到的问题" class="headerlink" title="Kubernetes遇到的问题"></a>Kubernetes遇到的问题</h5><ul><li>如何保证一致性</li><li>谁负责给所有东西打补丁</li><li>如何根据需求伸缩</li><li>如何实现零停机部署</li><li>如何管理多个事件类型一致性</li><li><p>如何定义事件源和目标</p><p>Knative 构建在 Kubernetes 的基础上，并<strong>为构建和部署无服务器架构（serverless）和基于事件驱动的应用程序提供了一致的标准模式</strong>。Knative 减少了这种新的软件开发方法所产生的开销，同时还<strong>把路由（routing）和事件（eventing）的复杂性抽象出来</strong>。 </p></li></ul><h2 id="Knative组件学习"><a href="#Knative组件学习" class="headerlink" title="Knative组件学习"></a>Knative组件学习</h2><h3 id="Serving（服务）"><a href="#Serving（服务）" class="headerlink" title="Serving（服务）"></a>Serving（服务）</h3><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a>﻿<br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a>﻿﻿</p><p><a href="https://www.servicemesher.com/getting-started-with-knative/" target="_blank" rel="noopener">【3】Knative入门——构建基于 Kubernetes 的现代化Serverless应用</a>﻿﻿</p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong>﻿</p><p><img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt>﻿﻿</p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;函数即服务（FaaS） &lt;/li&gt;
&lt;li&gt;平台即服务（PaaS） &lt;/li&gt;
&lt;li&gt;无服务器架构（serverless） &lt;/li&gt;
&lt;li&gt;路由（routing） &lt;/li&gt;
&lt;li&gt;事件（eventing） &lt;/li&gt;
&lt;li&gt;&lt;em&gt;build（构建）
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="容器管理" scheme="https://lywlefan.github.io/tags/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86/"/>
    
      <category term="Knative" scheme="https://lywlefan.github.io/tags/Knative/"/>
    
  </entry>
  
  <entry>
    <title>jpa参数为空查询报错问题</title>
    <link href="https://lywlefan.github.io/2019/11/25/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/java/hibernate/jpa%E5%8F%82%E6%95%B0%E4%B8%BA%E7%A9%BA%E6%9F%A5%E8%AF%A2%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>https://lywlefan.github.io/2019/11/25/后端/框架/java/hibernate/jpa参数为空查询报错问题/</id>
    <published>2019-11-24T16:00:00.000Z</published>
    <updated>2019-11-25T09:45:33.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>在使用jpa的时候发现,通过@Query自定义的sql,参数不能传空,传空就报错:</p><p>在使用jpa的时候发现,通过@Query自定义的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select  new com.winstar.vo.OilCouponVo(t.oilId,s.phone,s.certNo,t.couponCode,t.orderNumber,t.couponAmt,t.couponName,t.useState,t.gasStationId,t.gasStationName,t.useDate,t.createdAt,t.updatedAt,t.status) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">            <span class="string">"where (t.createdAt between ?1 and ?2) and t.useDate = ?3 and t.couponCode like ?4 and t.orderNumber like ?5 and t.appId = ?6 and s.phone = ?7 and s.certNo = ?8"</span>,</span><br><span class="line">            countQuery = <span class="string">"select count(t.id) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">                    <span class="string">"where (t.createdAt between ?1  and ?2) and t.useDate = ?3 and t.couponCode like ?4 and t.orderNumber like ?5 and t.appId = ?6 and s.phone = ?7 and s.certNo = ?8"</span>)</span><br><span class="line">    <span class="function">Page&lt;OilCouponVo&gt; <span class="title">getOilPage</span><span class="params">(Date startTime,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 Date endTime,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String useState,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String couponCode,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String orderNumber,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String appId,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String phone,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String certNo,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 Pageable pageable)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h4 id="原生sql解决办法如下"><a href="#原生sql解决办法如下" class="headerlink" title="原生sql解决办法如下:"></a>原生sql解决办法如下:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select * from xxx where if(?1 !='',x1=?1,1=1) and if(?2 !='',x2=?2,1=1)"</span> +</span><br><span class="line">            <span class="string">"and if(?3 !='',x3=?3,1=1)  "</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">     <span class="function">List&lt;XXX&gt; <span class="title">find</span><span class="params">(String X1,String X2,String X3)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="非原生sql解决办法如下"><a href="#非原生sql解决办法如下" class="headerlink" title="非原生sql解决办法如下"></a>非原生sql解决办法如下</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select  new com.winstar.vo.OilCouponVo(t.oilId,s.phone,s.certNo,t.couponCode,t.orderNumber,t.couponAmt,t.couponName,t.useState,t.gasStationId,t.gasStationName,t.useDate,t.createdAt,t.updatedAt,t.status) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">           <span class="string">"where (t.createdAt between ?1 and ?2) and (?3 is null or ?3 = '' or t.useState = ?3) and (?4 is null or ?4 = '' or t.couponCode like ?4)"</span> +</span><br><span class="line">           <span class="string">" and (?5 is null or ?5 = '' or t.orderNumber = ?5) and (?6 is null or ?6 = '' or t.appId = ?6)"</span> +</span><br><span class="line">           <span class="string">" and (?7 is null or ?7 = '' or s.phone = ?7)  and (?8 is null or ?8 = '' or s.certNo like ?8)"</span>,</span><br><span class="line">           countQuery = <span class="string">"select count(t.id) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">           <span class="string">"where (t.createdAt between ?1 and ?2) and (?3 is null or ?3 = '' or t.useState = ?3) and (?4 is null or ?4 = '' or t.couponCode like ?4)"</span> +</span><br><span class="line">            <span class="string">" and (?5 is null or ?5 = '' or t.orderNumber = ?5) and (?6 is null or ?6 = '' or t.appId = ?6)"</span> +</span><br><span class="line">            <span class="string">" and (?7 is null or ?7 = '' or s.phone = ?7)  and (?8 is null or ?8 = '' or s.certNo like ?8)"</span>)</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;遇到问题&quot;&gt;&lt;a href=&quot;#遇到问题&quot; class=&quot;headerlink&quot; title=&quot;遇到问题&quot;&gt;&lt;/a&gt;遇到问题&lt;/h2&gt;&lt;p&gt;在使用jpa的时候发现,通过@Query自定义的sql,参数不能传空,传空就报错:&lt;/p&gt;
&lt;p&gt;在使用jpa的时候发现,通
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="框架" scheme="https://lywlefan.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="hibernate" scheme="https://lywlefan.github.io/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>自定义枚举类型校验</title>
    <link href="https://lywlefan.github.io/2019/11/18/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/java/hibernate/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E6%A0%A1%E9%AA%8C/"/>
    <id>https://lywlefan.github.io/2019/11/18/后端/框架/java/hibernate/自定义枚举类型校验/</id>
    <published>2019-11-17T16:00:00.000Z</published>
    <updated>2019-11-25T09:13:51.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>自定义了如下枚举类型,需要对其vo进行校验:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ValidateEnum</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 证件类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="keyword">enum</span> CertTypeEnum implements ValidateEnum &#123;</span><br><span class="line">        CERT_TYPE(<span class="string">"身份证"</span>,<span class="string">"0"</span>),</span><br><span class="line">        PROTECTION_TYPE(<span class="string">"护照"</span>,<span class="string">"1"</span>),</span><br><span class="line">        OFFICER_TYPE(<span class="string">"军官证"</span>,<span class="string">"2"</span>),</span><br><span class="line">        SOLDIERS_TYPE(<span class="string">"士兵证"</span>,<span class="string">"3"</span>),</span><br><span class="line">        REENTRY_PERMIT_TYPE(<span class="string">"回乡证"</span>,<span class="string">"4"</span>),</span><br><span class="line">        INTERIM_IDENTITY_CARD_TYPE(<span class="string">"临时身份证"</span>,<span class="string">"5"</span>),</span><br><span class="line">        RESIDENCE_BOOKLET_TYPE(<span class="string">"户口簿"</span>,<span class="string">"6"</span>),</span><br><span class="line">        POLICE_OFFICER_TYPE(<span class="string">"警官证"</span>,<span class="string">"7"</span>),</span><br><span class="line">        TAIWAN_COMPATRIOTS_TYPE(<span class="string">"台胞证"</span>,<span class="string">"8"</span>),</span><br><span class="line">        BUSINESS_LICENSE_TYPE(<span class="string">"营业执照"</span>,<span class="string">"9"</span>),</span><br><span class="line">        OTHERS_TYPE(<span class="string">"其他证件"</span>,<span class="string">"10"</span>),</span><br><span class="line">        HONG_KONG_TYPE(<span class="string">"港澳台居民来往内地通行证"</span>,<span class="string">"11"</span>),</span><br><span class="line">        TAIWAN_TYPE(<span class="string">"台湾居民来往大陆通行证"</span>,<span class="string">"12"</span>);</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> String value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h4 id="自定义枚举校验注解"><a href="#自定义枚举校验注解" class="headerlink" title="自定义枚举校验注解"></a>自定义枚举校验注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.FIELD, ElementType.METHOD&#125;)</span><br><span class="line"><span class="meta">@Constraint</span>(validatedBy = EnumValidatorClass.class)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnumValidator &#123;</span><br><span class="line">    Class&lt;?&gt; value();</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> "入参值不在正确枚举中"</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? extends Payload&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="枚举注解处理类"><a href="#枚举注解处理类" class="headerlink" title="枚举注解处理类"></a>枚举注解处理类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnumValidatorClass</span> <span class="keyword">implements</span> <span class="title">ConstraintValidator</span>&lt;<span class="title">EnumValidator</span>, <span class="title">Object</span>&gt;, <span class="title">Annotation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; values = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(EnumValidator enumValidator)</span> </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clz = enumValidator.value();</span><br><span class="line">        Object[] ojects = clz.getEnumConstants();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Method method = clz.getMethod(<span class="string">"getValue"</span>);</span><br><span class="line">            <span class="keyword">if</span> (Objects.isNull(method)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(String.format(<span class="string">"枚举对象&#123;&#125;缺少字段名为value的字段"</span>,</span><br><span class="line">                        clz.getName()));</span><br><span class="line">            &#125;</span><br><span class="line">            Object value = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (Object obj : ojects) &#123;</span><br><span class="line">                value = method.invoke(obj);</span><br><span class="line">                values.add(value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"[处理枚举校验异常]"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;? extends Annotation&gt; annotationType() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(Object value, ConstraintValidatorContext constraintValidatorContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.isNull(value) || values.contains(value) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义枚举类型接口"><a href="#定义枚举类型接口" class="headerlink" title="定义枚举类型接口"></a>定义枚举类型接口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public interface ValidateEnum &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 证件类型</span><br><span class="line">     */</span><br><span class="line">    @Getter</span><br><span class="line">    @AllArgsConstructor</span><br><span class="line">    enum CertTypeEnum implements ValidateEnum &#123;</span><br><span class="line">        CERT_TYPE(&quot;身份证&quot;,&quot;0&quot;),</span><br><span class="line">        PROTECTION_TYPE(&quot;护照&quot;,&quot;1&quot;),</span><br><span class="line">        OFFICER_TYPE(&quot;军官证&quot;,&quot;2&quot;),</span><br><span class="line">        SOLDIERS_TYPE(&quot;士兵证&quot;,&quot;3&quot;),</span><br><span class="line">        REENTRY_PERMIT_TYPE(&quot;回乡证&quot;,&quot;4&quot;),</span><br><span class="line">        INTERIM_IDENTITY_CARD_TYPE(&quot;临时身份证&quot;,&quot;5&quot;),</span><br><span class="line">        RESIDENCE_BOOKLET_TYPE(&quot;户口簿&quot;,&quot;6&quot;),</span><br><span class="line">        POLICE_OFFICER_TYPE(&quot;警官证&quot;,&quot;7&quot;),</span><br><span class="line">        TAIWAN_COMPATRIOTS_TYPE(&quot;台胞证&quot;,&quot;8&quot;),</span><br><span class="line">        BUSINESS_LICENSE_TYPE(&quot;营业执照&quot;,&quot;9&quot;),</span><br><span class="line">        OTHERS_TYPE(&quot;其他证件&quot;,&quot;10&quot;),</span><br><span class="line">        HONG_KONG_TYPE(&quot;港澳台居民来往内地通行证&quot;,&quot;11&quot;),</span><br><span class="line">        TAIWAN_TYPE(&quot;台湾居民来往大陆通行证&quot;,&quot;12&quot;);</span><br><span class="line">        private String name;</span><br><span class="line">        private String value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用枚举校验注解"><a href="#使用枚举校验注解" class="headerlink" title="使用枚举校验注解"></a>使用枚举校验注解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 证件类型(0:身份证, 1:护照, 2:军官证, 3:士兵证, 4:回乡证, 5:临时身份证, 6:户口簿, 7:警官证, 8:台胞证, 9:营业执照, 10:其他证件, 11:港澳台居民来往内地通行证, 12:台湾居民来往大陆通行证)</span><br><span class="line"> */</span><br><span class="line">@EnumValidator(message = &quot;证件类型不在指定类型中&quot;, value = ValidateEnum.CertTypeEnum.class)</span><br><span class="line">private String certType;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;自定义了如下枚举类型,需要对其vo进行校验:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="框架" scheme="https://lywlefan.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="hibernate" scheme="https://lywlefan.github.io/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>如何和别人进行合作协调</title>
    <link href="https://lywlefan.github.io/2019/11/05/%E7%AE%A1%E7%90%86/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%A8%AA%E5%90%91%E9%A2%86%E5%AF%BC%E5%8A%9B/%E5%A6%82%E4%BD%95%E5%92%8C%E5%88%AB%E4%BA%BA%E8%BF%9B%E8%A1%8C%E5%90%88%E4%BD%9C%E5%8D%8F%E8%B0%83/"/>
    <id>https://lywlefan.github.io/2019/11/05/管理/读书笔记/横向领导力/如何和别人进行合作协调/</id>
    <published>2019-11-04T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.108Z</updated>
    
    <content type="html"><![CDATA[<h2 id="合作中常见的问题"><a href="#合作中常见的问题" class="headerlink" title="合作中常见的问题"></a>合作中常见的问题</h2><h3 id="合作不佳"><a href="#合作不佳" class="headerlink" title="合作不佳"></a>合作不佳</h3><h3 id="找不到一个人解决问题"><a href="#找不到一个人解决问题" class="headerlink" title="找不到一个人解决问题"></a>找不到一个人解决问题</h3><h2 id="改善团队表现需要解决的三个问题"><a href="#改善团队表现需要解决的三个问题" class="headerlink" title="改善团队表现需要解决的三个问题"></a>改善团队表现需要解决的三个问题</h2><h3 id="个人技能有限的问题"><a href="#个人技能有限的问题" class="headerlink" title="个人技能有限的问题"></a>个人技能有限的问题</h3><p>打铁还得自身硬，要想领导团队自身能力要硬，要有好的德行。要有解决解决复杂问题的能力和思维，要有带领团队克服困难的勇气，要积极向上，做好团队的能量石，也做好团队的敲打棒。</p><h3 id="对一个好的合作缺乏清晰的认识"><a href="#对一个好的合作缺乏清晰的认识" class="headerlink" title="对一个好的合作缺乏清晰的认识"></a>对一个好的合作缺乏清晰的认识</h3><p>要对好的团队有清晰的认识，团队要有清晰的目标，领导人要划分清晰的职责，及时处理团队的矛盾，团队成员共同成长，相互提升，把相互teview当做团队的一种文化，团队协作形成一些标准的规范。领导人要为团队争取更多的福利。</p><h3 id="大多数人都不知道怎么影响别人"><a href="#大多数人都不知道怎么影响别人" class="headerlink" title="大多数人都不知道怎么影响别人"></a>大多数人都不知道怎么影响别人</h3><ul><li>自我成长</li><li>德行</li><li>清晰目标</li><li>职责分配清晰</li><li>及时沟通，当面表扬，私下批评</li><li>积极争取福利</li></ul><h2 id="团队协作的方法"><a href="#团队协作的方法" class="headerlink" title="团队协作的方法"></a>团队协作的方法</h2><h3 id="培养、锻炼自己独立工作的"><a href="#培养、锻炼自己独立工作的" class="headerlink" title="培养、锻炼自己独立工作的"></a>培养、锻炼自己独立工作的</h3><p>自己独立工作的能力，有计划，有目标，有方向，有解决问题思维方式，有处理问题的策略。</p><h3 id="对共同工作的战略目标有清晰的认识"><a href="#对共同工作的战略目标有清晰的认识" class="headerlink" title="对共同工作的战略目标有清晰的认识"></a>对共同工作的战略目标有清晰的认识</h3><p>深刻理解目标，对目标有清晰的认识。</p><h3 id="学习一些领导方法"><a href="#学习一些领导方法" class="headerlink" title="学习一些领导方法"></a>学习一些领导方法</h3><h4 id="参与式领导方法"><a href="#参与式领导方法" class="headerlink" title="参与式领导方法"></a>参与式领导方法</h4><ul><li>提问</li><li>说出自己的想法邀请别人接受、运用或者修改想法</li><li>想法付诸实践，然后改进</li></ul><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;合作中常见的问题&quot;&gt;&lt;a href=&quot;#合作中常见的问题&quot; class=&quot;headerlink&quot; title=&quot;合作中常见的问题&quot;&gt;&lt;/a&gt;合作中常见的问题&lt;/h2&gt;&lt;h3 id=&quot;合作不佳&quot;&gt;&lt;a href=&quot;#合作不佳&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="管理" scheme="https://lywlefan.github.io/categories/%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="读书笔记" scheme="https://lywlefan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="横向领导力" scheme="https://lywlefan.github.io/tags/%E6%A8%AA%E5%90%91%E9%A2%86%E5%AF%BC%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>去中心化应用</title>
    <link href="https://lywlefan.github.io/2019/11/05/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%BA%94%E7%94%A8/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/"/>
    <id>https://lywlefan.github.io/2019/11/05/前沿技术/区块链/应用/去中心化应用/</id>
    <published>2019-11-04T16:00:00.000Z</published>
    <updated>2019-11-05T05:54:58.638Z</updated>
    
    <content type="html"><![CDATA[<h2 id="去中心化应用"><a href="#去中心化应用" class="headerlink" title="去中心化应用"></a>去中心化应用</h2><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;去中心化应用&quot;&gt;&lt;a href=&quot;#去中心化应用&quot; class=&quot;headerlink&quot; title=&quot;去中心化应用&quot;&gt;&lt;/a&gt;去中心化应用&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure c
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="应用" scheme="https://lywlefan.github.io/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>fabric架构</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/fabric/fabric%E6%9E%B6%E6%9E%84/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/fabric/fabric架构/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-04T01:41:11.198Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="fabric" scheme="https://lywlefan.github.io/tags/fabric/"/>
    
  </entry>
  
  <entry>
    <title>企业在落地区块链时要考虑的点</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/fabric/Hyperledger%20Composer%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/fabric/Hyperledger Composer学习总结/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.026Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="fabric" scheme="https://lywlefan.github.io/tags/fabric/"/>
    
  </entry>
  
  <entry>
    <title>初始corda</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/corda/%E5%88%9D%E5%A7%8Bcorda/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/corda/初始corda/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是corda"><a href="#什么是corda" class="headerlink" title="什么是corda??"></a>什么是corda??</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么?"></a>是什么?</h3><p>corda是一个分布式账本平台。</p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="corda网络"><a href="#corda网络" class="headerlink" title="corda网络"></a>corda网络</h4><h4 id="账本"><a href="#账本" class="headerlink" title="账本"></a>账本</h4><p>每个节点验证过交易的集合,账本是各个节点自有的。</p><p>每个节点维护一个已知事实的分离数据库。</p><p>没有一个节点知道整个账本。</p><h4 id="身份"><a href="#身份" class="headerlink" title="身份"></a>身份</h4><p>身份有两种:组织的法律身份、网络服务身份。</p><p>法律身份用于交易的当事人,如:现金拥有者。</p><p>网络服务身份用于提供与交易相关的服务,如公证服务或oracle服务。服务身份基于混合KEY。</p><p>身份证明的X.509证书由看门人或其他众所周知的身份签发。身份是众所周知的还是机密的,取决于X.509证书是否公开。</p><h4 id="应用节点"><a href="#应用节点" class="headerlink" title="应用节点"></a>应用节点</h4><h4 id="看门人"><a href="#看门人" class="headerlink" title="看门人"></a>看门人</h4><p>看门人服务可以理解为一个身份准入管理服务加上一个业务许可管理服务,它要求节点提供必要的信息,以及在接受进入网络前必须进行的了解客户的过程。</p><p>要想加入corda网络,节点必须联系看门人并提供必要的信息。看门人许可通过,会颁发TLS许可证书。</p><h4 id="cordaDapps"><a href="#cordaDapps" class="headerlink" title="cordaDapps"></a>cordaDapps</h4><h4 id="AMPQ-1-0协议"><a href="#AMPQ-1-0协议" class="headerlink" title="AMPQ/1.0协议"></a>AMPQ/1.0协议</h4><h4 id="公证节点"><a href="#公证节点" class="headerlink" title="公证节点"></a>公证节点</h4><p>公证节点保证账本更新的唯一性、可行性、正确性。</p><p>每个公证服务可以运行在一个节点或一组节点上。</p><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><p>状态是表示账本上的事实,是一个不可变的对象,表示在特定时刻由一个或多个Corda节点所知的事实。</p><h4 id="状态序列"><a href="#状态序列" class="headerlink" title="状态序列"></a>状态序列</h4><p>状态的生命周期</p><h4 id="合约"><a href="#合约" class="headerlink" title="合约"></a>合约</h4><p>每个状态指向一个合约。</p><p>合约以交易作为输入,并根据合约的规则说明交易是否被认为有效。</p><p>交易只有在合约的每个输入和输出状态被确认为有效的情况下才有效。</p><p>合约代码可以用任意的JVM语言进行编写。</p><p>一个不被合约认可的交易不会作为更新账本的有效提案。</p><h4 id="合约沙箱"><a href="#合约沙箱" class="headerlink" title="合约沙箱"></a>合约沙箱</h4><h4 id="预言机"><a href="#预言机" class="headerlink" title="预言机"></a>预言机</h4><h4 id="女巫攻击"><a href="#女巫攻击" class="headerlink" title="女巫攻击"></a>女巫攻击</h4><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是corda&quot;&gt;&lt;a href=&quot;#什么是corda&quot; class=&quot;headerlink&quot; title=&quot;什么是corda??&quot;&gt;&lt;/a&gt;什么是corda??&lt;/h2&gt;&lt;h3 id=&quot;是什么&quot;&gt;&lt;a href=&quot;#是什么&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="corda" scheme="https://lywlefan.github.io/tags/corda/"/>
    
  </entry>
  
  <entry>
    <title>初始corda</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/corda/cord%E4%B8%AD%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/corda/cord中的基本概念总结/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.002Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是corda"><a href="#什么是corda" class="headerlink" title="什么是corda??"></a>什么是corda??</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么?"></a>是什么?</h3><p>corda是一个分布式账本平台。</p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="corda网络"><a href="#corda网络" class="headerlink" title="corda网络"></a>corda网络</h4><h4 id="账本"><a href="#账本" class="headerlink" title="账本"></a>账本</h4><p>每个节点验证过交易的集合,账本是各个节点自有的。</p><p>每个节点维护一个已知事实的分离数据库。</p><p>没有一个节点知道整个账本。</p><h4 id="身份"><a href="#身份" class="headerlink" title="身份"></a>身份</h4><p>身份有两种:组织的法律身份、网络服务身份。</p><p>法律身份用于交易的当事人,如:现金拥有者。</p><p>网络服务身份用于提供与交易相关的服务,如公证服务或oracle服务。服务身份基于混合KEY。</p><p>身份证明的X.509证书由看门人或其他众所周知的身份签发。身份是众所周知的还是机密的,取决于X.509证书是否公开。</p><h4 id="应用节点"><a href="#应用节点" class="headerlink" title="应用节点"></a>应用节点</h4><h4 id="看门人"><a href="#看门人" class="headerlink" title="看门人"></a>看门人</h4><p>看门人服务可以理解为一个身份准入管理服务加上一个业务许可管理服务,它要求节点提供必要的信息,以及在接受进入网络前必须进行的了解客户的过程。</p><p>要想加入corda网络,节点必须联系看门人并提供必要的信息。看门人许可通过,会颁发TLS许可证书。</p><h4 id="cordaDapps"><a href="#cordaDapps" class="headerlink" title="cordaDapps"></a>cordaDapps</h4><h4 id="AMPQ-1-0协议"><a href="#AMPQ-1-0协议" class="headerlink" title="AMPQ/1.0协议"></a>AMPQ/1.0协议</h4><h4 id="公证节点"><a href="#公证节点" class="headerlink" title="公证节点"></a>公证节点</h4><p>公证节点保证账本更新的唯一性、可行性、正确性。</p><p>每个公证服务可以运行在一个节点或一组节点上。</p><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><p>状态是表示账本上的事实,是一个不可变的对象,表示在特定时刻由一个或多个Corda节点所知的事实。</p><h4 id="状态序列"><a href="#状态序列" class="headerlink" title="状态序列"></a>状态序列</h4><p>状态的生命周期</p><h4 id="合约"><a href="#合约" class="headerlink" title="合约"></a>合约</h4><p>每个状态指向一个合约。</p><p>合约以交易作为输入,并根据合约的规则说明交易是否被认为有效。</p><p>交易只有在合约的每个输入和输出状态被确认为有效的情况下才有效。</p><p>合约代码可以用任意的JVM语言进行编写。</p><p>一个不被合约认可的交易不会作为更新账本的有效提案。</p><h4 id="合约沙箱"><a href="#合约沙箱" class="headerlink" title="合约沙箱"></a>合约沙箱</h4><h4 id="预言机"><a href="#预言机" class="headerlink" title="预言机"></a>预言机</h4><h4 id="女巫攻击"><a href="#女巫攻击" class="headerlink" title="女巫攻击"></a>女巫攻击</h4><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是corda&quot;&gt;&lt;a href=&quot;#什么是corda&quot; class=&quot;headerlink&quot; title=&quot;什么是corda??&quot;&gt;&lt;/a&gt;什么是corda??&lt;/h2&gt;&lt;h3 id=&quot;是什么&quot;&gt;&lt;a href=&quot;#是什么&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="corda" scheme="https://lywlefan.github.io/tags/corda/"/>
    
  </entry>
  
  <entry>
    <title>corda基础架构</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/corda/corda%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/corda/corda基础架构/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:32.994Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="corda" scheme="https://lywlefan.github.io/tags/corda/"/>
    
  </entry>
  
  <entry>
    <title>企业在落地区块链时要考虑的点</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%BA%94%E7%94%A8/%E4%BC%81%E4%B8%9A%E5%9C%A8%E8%90%BD%E5%9C%B0%E5%8C%BA%E5%9D%97%E9%93%BE%E6%97%B6%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E7%82%B9/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/应用/企业在落地区块链时要考虑的点/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:32.105Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务"><a href="#业务" class="headerlink" title="业务"></a>业务</h2><h3 id="人才团队建设"><a href="#人才团队建设" class="headerlink" title="人才团队建设"></a>人才团队建设</h3><h3 id="业务场景选择"><a href="#业务场景选择" class="headerlink" title="业务场景选择"></a>业务场景选择</h3><h3 id="业务流程化"><a href="#业务流程化" class="headerlink" title="业务流程化"></a>业务流程化</h3><h3 id="应用开发模式"><a href="#应用开发模式" class="headerlink" title="应用开发模式"></a>应用开发模式</h3><h3 id="可视化与分析"><a href="#可视化与分析" class="headerlink" title="可视化与分析"></a>可视化与分析</h3><h3 id="数据模块管理"><a href="#数据模块管理" class="headerlink" title="数据模块管理"></a>数据模块管理</h3><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><h3 id="技术方案选型"><a href="#技术方案选型" class="headerlink" title="技术方案选型"></a>技术方案选型</h3><h3 id="平台设计实施"><a href="#平台设计实施" class="headerlink" title="平台设计实施"></a>平台设计实施</h3><h3 id="高可用与灾备"><a href="#高可用与灾备" class="headerlink" title="高可用与灾备"></a>高可用与灾备</h3><h3 id="安全合规治理"><a href="#安全合规治理" class="headerlink" title="安全合规治理"></a>安全合规治理</h3><h3 id="平台应用运维"><a href="#平台应用运维" class="headerlink" title="平台应用运维"></a>平台应用运维</h3><h2 id="运营"><a href="#运营" class="headerlink" title="运营"></a>运营</h2><h3 id="市场营销宣传"><a href="#市场营销宣传" class="headerlink" title="市场营销宣传"></a>市场营销宣传</h3><h3 id="生态系统参与"><a href="#生态系统参与" class="headerlink" title="生态系统参与"></a>生态系统参与</h3><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;业务&quot;&gt;&lt;a href=&quot;#业务&quot; class=&quot;headerlink&quot; title=&quot;业务&quot;&gt;&lt;/a&gt;业务&lt;/h2&gt;&lt;h3 id=&quot;人才团队建设&quot;&gt;&lt;a href=&quot;#人才团队建设&quot; class=&quot;headerlink&quot; title=&quot;人才团队建设&quot;&gt;&lt;/a&gt;人
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="应用" scheme="https://lywlefan.github.io/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>redis基础总结</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%90%8E%E7%AB%AF/%E7%BC%93%E5%AD%98/redis/redis%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/10/30/后端/缓存/redis/redis基础总结/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-25T11:23:40.994Z</updated>
    
    <content type="html"><![CDATA[<p>redis附加功能</p><p>“附加功能”部分介绍了Redis在数据结构的基础上为用户提供的额外功能，包括管理数据结构的数据库管理功能和自动过期功能，将数据结构持久化至硬盘从而避免数据丢失的持久化功能，提高多条命令执行效率的流水线功能，保证命令安全性的事务和Lua脚本功能，以及扩展服务器特性的模块功能等。</p><p>Redis的PING命令接受一条可选的消息作为参数，这个命令通常用于测试客户端和服务器之间的连接是否正常:</p><ul><li>连接正常的情况下，将向客户端返回PONG</li><li>如果服务器与客户端的连接不正常，那么客户端将返回一个错误</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 客户端未能连接服务器，返回一个连接错误</span><br><span class="line">        127.0.0.1:6379&gt; PING</span><br><span class="line">        Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br></pre></td></tr></table></figure><p>更换端口号:</p><p>Redis服务器默认使用6379作为端口号，但如果你想使用10086而不是6379作为端口号，那么可以在启动Redis服务器时通过设定port可选项来指定想要的端口号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server --port 10086</span><br></pre></td></tr></table></figure><p>第二种方法是在启动Redis服务器的时候为其提供配置文件，并将想要修改的配置选项写在配置文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server /path/to/your/file</span><br></pre></td></tr></table></figure><p>例如，为了将Redis服务器的端口号改为12345，我们可以在当前文件夹中创建配置文件myredis.conf，并在文件中包含以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port 12345</span><br></pre></td></tr></table></figure><p>然后在启动Redis服务器时向其提供该配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server myredis.conf</span><br></pre></td></tr></table></figure><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;redis附加功能&lt;/p&gt;
&lt;p&gt;“附加功能”部分介绍了Redis在数据结构的基础上为用户提供的额外功能，包括管理数据结构的数据库管理功能和自动过期功能，将数据结构持久化至硬盘从而避免数据丢失的持久化功能，提高多条命令执行效率的流水线功能，保证命令安全性的事务和Lua脚本功
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="redis" scheme="https://lywlefan.github.io/tags/redis/"/>
    
      <category term="缓存" scheme="https://lywlefan.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>抓包工具学习</title>
    <link href="https://lywlefan.github.io/2019/10/24/%E5%89%8D%E7%AB%AF/idea/fiddler/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/"/>
    <id>https://lywlefan.github.io/2019/10/24/前端/idea/fiddler/抓包工具学习/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:32.058Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="idea" scheme="https://lywlefan.github.io/tags/idea/"/>
    
      <category term="fiddler" scheme="https://lywlefan.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu下安装webstorm</title>
    <link href="https://lywlefan.github.io/2019/10/24/%E5%89%8D%E7%AB%AF/idea/webstorm/%E5%9C%A8Ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85webstorm/"/>
    <id>https://lywlefan.github.io/2019/10/24/前端/idea/webstorm/在Ubuntu下安装webstorm/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:38.161Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="idea" scheme="https://lywlefan.github.io/tags/idea/"/>
    
      <category term="webstorm" scheme="https://lywlefan.github.io/tags/webstorm/"/>
    
  </entry>
  
  <entry>
    <title>Vue基础</title>
    <link href="https://lywlefan.github.io/2019/10/24/%E5%89%8D%E7%AB%AF/vue/vue%E5%9F%BA%E7%A1%80/"/>
    <id>https://lywlefan.github.io/2019/10/24/前端/vue/vue基础/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-10-24T10:31:25.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><h4 id="什么是Vue？？"><a href="#什么是Vue？？" class="headerlink" title="什么是Vue？？"></a>什么是Vue？？</h4><p>开发web界面的前端库</p><h4 id="vue特性"><a href="#vue特性" class="headerlink" title="vue特性"></a>vue特性</h4><ul><li>具有<strong>响应式编程</strong>（保持状态和视图同步）</li><li>组件化</li><li>轻量级</li><li>易上手</li></ul><p><strong>MVC</strong>：MVC 模式代表 Model-View-Controller（模型-视图-控制器） 模式。</p><p><strong>MVP</strong>：MVP是Model-View-Presenter的简称，即模型-视图-表现层的缩写。MVP是由MVC模式进化而来的，MVP改进了MVC中的控制器过于臃肿的问题。</p><table><thead><tr><th></th><th>MVC</th><th></th><th>MVP</th></tr></thead><tbody><tr><td>Model</td><td>业务逻辑和实体模型</td><td>Model</td><td>业务逻辑和实体模型</td></tr><tr><td>View</td><td>对应布局文件</td><td>View</td><td>对应Activity，负责view的绘制与用户交互</td></tr><tr><td>Controller</td><td>对应Activity等</td><td>Presenter</td><td>负责完成view与model的交互，处理程序逻辑</td></tr></tbody></table><p><strong>MVVM</strong>：</p><p><strong>MVM</strong>：</p><h4 id="理念"><a href="#理念" class="headerlink" title="理念"></a>理念</h4><p>一切都是组件！</p><h4 id="为什么用vue"><a href="#为什么用vue" class="headerlink" title="为什么用vue"></a>为什么用vue</h4><ul><li>轻量，易上手</li><li>阿里支持，开源weex</li><li>抛弃IE8支持</li><li>Android支持到4.2+</li><li>ios支持到7+</li><li>适用前后端分离项目</li><li>压缩后仅有18KB，不依赖其他</li></ul><h3 id="前端框架基本逻辑"><a href="#前端框架基本逻辑" class="headerlink" title="前端框架基本逻辑"></a>前端框架基本逻辑</h3><ul><li>模板渲染</li><li>事件绑定</li><li>用户交互处理</li></ul><h3 id="实例及选项"><a href="#实例及选项" class="headerlink" title="实例及选项"></a>实例及选项</h3><p>一个Vue实例相当于一个MVVM模式中的ViewModel，实例化的时候传入一个<strong>选项对象</strong>（包括数据、模板、挂载元素、方法、生命周期钩子等）</p><h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><h5 id="el"><a href="#el" class="headerlink" title="el"></a>el</h5><p><strong>为实例提供挂载元素</strong>，类型为字符串。在初始化指定el，实例将立即进入编译过程。</p><h5 id="template"><a href="#template" class="headerlink" title="template"></a>template</h5><p>配置挂载 </p><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;h4 id
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://lywlefan.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>jpa原生sql分页</title>
    <link href="https://lywlefan.github.io/2019/10/18/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/java/hibernate/jpa%E5%8E%9F%E7%94%9Fsql%E5%88%86%E9%A1%B5/"/>
    <id>https://lywlefan.github.io/2019/10/18/后端/框架/java/hibernate/jpa原生sql分页/</id>
    <published>2019-10-17T16:00:00.000Z</published>
    <updated>2019-11-18T02:15:39.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>其实需求很简单,就是通过查询一个表得到数据列表,然后再对这个数据列表进行分页,自定义sql如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">t.order_number <span class="keyword">AS</span> orderNumber,</span><br><span class="line"><span class="keyword">sum</span>(t.coupon_amt) <span class="keyword">AS</span> <span class="keyword">sum</span>,</span><br><span class="line"><span class="keyword">sum</span>(</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> t.use_state = <span class="string">'NOT_USE'</span> <span class="keyword">THEN</span></span><br><span class="line">t.coupon_amt</span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">) <span class="keyword">AS</span> balance</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">open_oil_coupon t</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">t.user_id = ? <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> t.app_id = ? <span class="number">2</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">t.order_id</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">balance = <span class="number">0</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">t.created_at <span class="keyword">DESC</span>,</span><br><span class="line">balance <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="方法一-通过jpa的原生sql分页查询"><a href="#方法一-通过jpa的原生sql分页查询" class="headerlink" title="方法一:通过jpa的原生sql分页查询"></a>方法一:通过jpa的原生sql分页查询</h3><h4 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OilCouponRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">OilCoupon</span>,<span class="title">Long</span>&gt;,<span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">OilCoupon</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Query</span>(value = <span class="string">"SELECT t.order_number AS orderNumber, sum(t.coupon_amt) AS sum, sum(CASE WHEN t.use_state = 'NOT_USE' THEN t.coupon_amt ELSE 0 END ) AS balance FROM open_oil_coupon t WHERE t.user_id = ?1 AND t.app_id = ?2 GROUP BY t.order_number HAVING balance &gt; 0"</span>,nativeQuery = <span class="keyword">true</span>,</span><br><span class="line">            countQuery = <span class="string">"SELECT count(*) FROM (SELECT t.order_number AS orderNumber, sum(t.coupon_amt) AS sum, sum(CASE WHEN t.use_state = 'NOT_USE' THEN t.coupon_amt ELSE 0 END ) AS balance FROM open_oil_coupon t WHERE t.user_id = ?1 AND t.app_id = ?2 GROUP BY t.order_number HAVING balance = 0) T"</span>)</span><br><span class="line"><span class="function">Page&lt;Map&gt; <span class="title">getAllCouponsUsed</span><span class="params">(Long userId, String appId, Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>:countQuery如果带有having等语句最好的办法是把@Query的sql复制一份把他查出来的结果当成表,然后对其进行count(*)查询。</p><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> OpenPage&lt;CouponsVo&gt; <span class="title">getCouponsByOrderId</span><span class="params">(String appId, Long userId, CouponPageVo couponPageVo)</span></span>&#123;</span><br><span class="line">       Pageable pageable = <span class="keyword">new</span> PageRequest(couponPageVo.getPageNum(), couponPageVo.getPageSize(), Sort.Direction.DESC, <span class="string">"order_number"</span>);</span><br><span class="line">       OpenPage&lt;CouponsVo&gt; pages = <span class="keyword">new</span> OpenPage();</span><br><span class="line">       Page page2 = oilCouponRepository.getAllCouponsUsed(userId,appId,pageable);</span><br><span class="line">       List&lt;CouponsVo&gt; couponsVos = JSON.parseArray(JSON.toJSONString(page2.getContent()),CouponsVo.class);</span><br><span class="line">       pages.setContent(couponsVos);</span><br><span class="line">       pages.setPageNum(page2.getNumber());</span><br><span class="line">       pages.setPageSize(page2.getSize());</span><br><span class="line">       pages.setTotalElements(page2.getTotalElements());</span><br><span class="line">       pages.setTotalPages(page2.getTotalPages());</span><br><span class="line">       <span class="keyword">return</span> pages;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>:排序的字段要用跟数据库里面一样的字段名称</p><h3 id="方法二-通过jdbc原生sql拼接的方法进行分页"><a href="#方法二-通过jdbc原生sql拼接的方法进行分页" class="headerlink" title="方法二:通过jdbc原生sql拼接的方法进行分页"></a>方法二:通过jdbc原生sql拼接的方法进行分页</h3><h4 id="抽象的jdbc分页类型"><a href="#抽象的jdbc分页类型" class="headerlink" title="抽象的jdbc分页类型"></a>抽象的jdbc分页类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.winstar.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.winstar.util.OpenPage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 包:com.winstar.manager.repository</span></span><br><span class="line"><span class="comment"> * 类描述: jdbc父Dao封装</span></span><br><span class="line"><span class="comment"> * 创建人:shareyuan</span></span><br><span class="line"><span class="comment"> * 创建时间:2018/12/26 11:52</span></span><br><span class="line"><span class="comment"> * 版本:v1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractServerRepository</span>&lt;<span class="title">T</span>, <span class="title">PK</span> <span class="keyword">extends</span> <span class="title">Serializable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EntityManager entityManager;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;T&gt; entityClass;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EMPYT_STR = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; fieldClassNames = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AbstractServerRepository</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.entityClass = (Class&lt;T&gt;) ((ParameterizedType) getClass()</span><br><span class="line">                .getGenericSuperclass()).getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">this</span>.initEntityFieldsClassNames();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initEntityFieldsClassNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Field[] fields = <span class="keyword">this</span>.entityClass.getDeclaredFields();</span><br><span class="line">        <span class="keyword">this</span>.fieldClassNames = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            fieldClassNames.put(field.getName(), field.getType().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 根据SQL查询数据并返回一个List&lt;Map&lt;String,Object&gt;&gt;,将其封装为 Page</span></span><br><span class="line"><span class="comment">    * Param: sql,pageNo,pageSize,values</span></span><br><span class="line"><span class="comment">    * return: Page</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OpenPage <span class="title">findPageBySqlForListMap</span><span class="params">(<span class="keyword">final</span> String sql, <span class="keyword">final</span> <span class="keyword">int</span> pageNo,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">final</span> <span class="keyword">int</span> pageSize, <span class="keyword">final</span> Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String countSql = <span class="string">"SELECT count(1) FROM ("</span>+ removeOrders(sql) + <span class="string">") T"</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">long</span> totalCount = <span class="keyword">this</span>.getCountBySql(countSql, values);</span><br><span class="line">        <span class="keyword">if</span> (totalCount &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> OpenPage();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> startIndex = OpenPage.getStartOfPage(pageNo, pageSize);</span><br><span class="line">            <span class="keyword">final</span> String querySql =getString( sql,<span class="string">" limit "</span>, startIndex,<span class="string">","</span>, pageSize);</span><br><span class="line">            List&lt;Map&lt;String,Object&gt;&gt; list = <span class="keyword">this</span>.jdbcTemplate.queryForList(querySql,values);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> OpenPage(pageNo,pageSize, list,Integer.parseInt(String.valueOf(totalCount)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 根据id获取唯一对象</span></span><br><span class="line"><span class="comment">    * Param: id</span></span><br><span class="line"><span class="comment">    * return: T</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">findOne</span><span class="params">(<span class="keyword">final</span> PK id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> entityManager.find(entityClass,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 根据sql查询数据总数</span></span><br><span class="line"><span class="comment">     * Param:  sql,values</span></span><br><span class="line"><span class="comment">     * return:  Long</span></span><br><span class="line"><span class="comment">     * Author: shareyuan</span></span><br><span class="line"><span class="comment">     * Date: 2018/12/26</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Long <span class="title">getCountBySql</span><span class="params">(<span class="keyword">final</span> String sql, <span class="keyword">final</span> Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForObject(sql, Long.class, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 组合传入字符串数组</span></span><br><span class="line"><span class="comment">    * Param: objs</span></span><br><span class="line"><span class="comment">    * return: String</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/26</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span>  String <span class="title">getString</span><span class="params">(Object... objs)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(objs != <span class="keyword">null</span> &amp;&amp; objs.length &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; objs.length; i++) &#123;</span><br><span class="line">                sb.append(objs[i] == <span class="keyword">null</span> ? EMPYT_STR : objs[i].toString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> EMPYT_STR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 去除sql的orderby 子句，用于分页查询</span></span><br><span class="line"><span class="comment">    * Param: sql</span></span><br><span class="line"><span class="comment">    * return: String</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">removeOrders</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        Pattern p = Pattern.compile(<span class="string">"order\\s*by[\\w|\\W|\\s|\\S]*"</span>,</span><br><span class="line">                Pattern.CASE_INSENSITIVE);</span><br><span class="line">        Matcher m = p.matcher(sql);</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">while</span> (m.find()) &#123;</span><br><span class="line">            m.appendReplacement(sb, <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        m.appendTail(sb);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 去除sql的select 子句，未考虑union的情况</span></span><br><span class="line"><span class="comment">    * Param: sql</span></span><br><span class="line"><span class="comment">    * return: String</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">removeSelect</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> beginPos = sql.toLowerCase().indexOf(<span class="string">"from "</span>);</span><br><span class="line">        Assert.isTrue(beginPos != -<span class="number">1</span>, <span class="string">" hql : "</span> + sql</span><br><span class="line">                + <span class="string">" must has a keyword 'from'"</span>);</span><br><span class="line">        <span class="keyword">return</span> sql.substring(beginPos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Repository-1"><a href="#Repository-1" class="headerlink" title="Repository"></a>Repository</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span>(<span class="string">"oilCouponJdbcRepository"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OilCouponJdbcRepository</span> <span class="keyword">extends</span> <span class="title">AbstractServerRepository</span>&lt;<span class="title">OilCoupon</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> OpenPage&lt;Map&gt; <span class="title">getPage</span><span class="params">(String appId, Long userId, CouponPageVo couponPageVo)</span> </span>&#123;</span><br><span class="line">        StringBuffer sql = <span class="keyword">new</span> StringBuffer(<span class="string">"SELECT t.order_number AS orderNumber, sum(t.coupon_amt) AS sum, sum(CASE WHEN t.use_state = 'NOT_USE' THEN t.coupon_amt ELSE 0 END ) AS balance FROM open_oil_coupon t"</span>);</span><br><span class="line">        List params = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(appId))&#123;</span><br><span class="line">            sql.append(<span class="string">" WHERE t.user_id = ?  "</span>);</span><br><span class="line">            params.add(userId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(appId))&#123;</span><br><span class="line">            sql.append(<span class="string">" AND t.app_id = ? "</span>);</span><br><span class="line">            params.add(appId);</span><br><span class="line">        &#125;</span><br><span class="line">        sql.append(<span class="string">" GROUP BY t.order_number"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.equals(couponPageVo.getUseState(),CommonEnum.USED.getValue()))&#123;</span><br><span class="line">            sql.append(<span class="string">" HAVING balance = 0"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.equals(couponPageVo.getUseState(),CommonEnum.NOT_USE.getValue()))&#123;</span><br><span class="line">            sql.append(<span class="string">" HAVING balance &gt; 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sql.append(<span class="string">" ORDER BY t.created_at DESC,balance "</span>);</span><br><span class="line">        log.info(<span class="string">"分页sql为:&#123;&#125;,分页请求参数为:&#123;&#125;"</span>,sql,params.toArray());</span><br><span class="line">        <span class="keyword">return</span> oilCouponJdbcRepository.findPageBySqlForListMap(sql.toString(),couponPageVo.getPageNum(),couponPageVo.getPageSize(),params.toArray());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>说明</strong>:jdbc分页的好处就是可以多表进行联查自定义sql,相对来说比较灵活,对于复杂sql,我个人感觉可读性要比jpa的自定义sql要好一些。</p><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;其实需求很简单,就是通过查询一个表得到数据列表,然后再对这个数据列表进行分页,自定义sql如下:&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="框架" scheme="https://lywlefan.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="hibernate" scheme="https://lywlefan.github.io/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>如何设计一个秒杀系统读书笔记</title>
    <link href="https://lywlefan.github.io/2019/10/17/%E5%90%8E%E7%AB%AF/%E9%AB%98%E5%B9%B6%E5%8F%91/java/%E4%B9%A6%E7%B1%8D/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F-%E8%AE%B8%E4%BB%A4%E6%B3%A2/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://lywlefan.github.io/2019/10/17/后端/高并发/java/书籍/如何设计一个秒杀系统-许令波/如何设计一个秒杀系统读书笔记/</id>
    <published>2019-10-16T16:00:00.000Z</published>
    <updated>2019-10-21T10:29:17.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阅读笔记"><a href="#阅读笔记" class="headerlink" title="阅读笔记"></a>阅读笔记</h2><h3 id="秒杀系统关键点"><a href="#秒杀系统关键点" class="headerlink" title="秒杀系统关键点"></a>秒杀系统关键点</h3><p>①我觉得作为一个程序员,你首先需要从高维度出发,从整体上思考问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G:对整体要有高屋建瓴，要站在最高处俯瞰，在落实的时候要把握好细节，下绣花针功夫。</span><br></pre></td></tr></table></figure><p>②秒杀其实主要解决两个问题,<strong>一个是并发读,一个是并发写</strong>。并发读的核心优化理念是尽量<strong>减少用户到服务来“读”数据</strong>,或者让他们读更少的数据;并发写的处理原则也一样,它<strong>要求我们在数据库层面独立出来一个库,做特殊的处理</strong>。另外,我们还要针对秒杀系统做一些保护,针对意料之外的情况<strong>设计兜底方案</strong>,以防止最坏的情况发生。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G：两个疑问，见疑问区域</span><br></pre></td></tr></table></figure><p>③从浏览器到服务端我们要遵循几个原则：</p><ul><li>请求数据尽量少</li><li>请求数尽量少</li><li>路径尽量短</li><li>依赖尽量少</li><li>不要有单点</li></ul><p><strong>④整体架构概括为几个字：稳、准、快</strong></p><ul><li>稳（高性能）：流量超出预期要保证稳定</li><li>准（一致性）：秒杀多少个商品就是多少个，一台也不能多，一台也不能少</li><li>快（高可用）：支撑大的流量，性能要好</li></ul><h3 id="设计秒杀系统注意的5个架构原则"><a href="#设计秒杀系统注意的5个架构原则" class="headerlink" title="设计秒杀系统注意的5个架构原则"></a>设计秒杀系统注意的5个架构原则</h3><p><strong>①“4要1不要”</strong></p><ul><li><p>数据尽量少：上传的数据和返回的数据</p></li><li><p>请求尽量少：</p><ul><li><p>合并CSS和JavaScript文件，多个合成一个</p><p>在 URL 中用逗号隔开 (<a href="https://g.xxx.com/tm/xx-b/4.0.94/mods/??module-preview/index.xtpl.js,module-jhs/index.xtpl.js,module-focus/index.xtpl.js)。" target="_blank" rel="noopener">https://g.xxx.com/tm/xx-b/4.0.94/mods/??module-preview/index.xtpl.js,module-jhs/index.xtpl.js,module-focus/index.xtpl.js)。</a> 这种方式在服务端仍然是单个文件各自存放,只是服务端会有一个组件解析这个 URL,然后动态把这些文件合并起来一起返回。</p></li></ul></li><li><p>路径尽量短</p><ul><li>缩短请求不仅可以增加可用性而且可以有效提升性能</li><li>要缩短访问路径有一种办法,就是多个相互强依赖的应用合并部署在一起,把远程过程调用<br>(RPC)变成JVM内部之间的调用。</li></ul></li><li><p>依赖尽量少</p><ul><li>系统分级（0级、1级、2级等等）</li></ul></li><li><p>不要单点</p><ul><li>应用无状态化</li><li>服务无状态化</li></ul></li></ul><p><strong>架构是一种平衡的艺术,而最好的架构一旦脱离了它所适应的场景,一切都将是空谈。</strong></p><h3 id="二八原则-有正对性的处理好系统的热点数据"><a href="#二八原则-有正对性的处理好系统的热点数据" class="headerlink" title="二八原则:有正对性的处理好系统的热点数据"></a>二八原则:有正对性的处理好系统的热点数据</h3><p>把少部分访问速度高的数据隔离拆分出来做单独的处理,让大多数的请求正常运行。</p><h3 id="流量削峰"><a href="#流量削峰" class="headerlink" title="流量削峰"></a>流量削峰</h3><p>削峰的存在，一是可以让服务端处理变得更加平稳，二是可以节省服务器的资源成本。</p><p>它遵从“请求数要尽量少”的原则。</p><h3 id="影响性能的因素有哪些？又该如何提高系统的性能？"><a href="#影响性能的因素有哪些？又该如何提高系统的性能？" class="headerlink" title="影响性能的因素有哪些？又该如何提高系统的性能？"></a>影响性能的因素有哪些？又该如何提高系统的性能？</h3><h2 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h2><h3 id="如何减少用户来服务端读数据？？"><a href="#如何减少用户来服务端读数据？？" class="headerlink" title="如何减少用户来服务端读数据？？"></a>如何减少用户来服务端读数据？？</h3><h3 id="什么是兜底方案？？如何设计兜底？？"><a href="#什么是兜底方案？？如何设计兜底？？" class="headerlink" title="什么是兜底方案？？如何设计兜底？？"></a>什么是兜底方案？？如何设计兜底？？</h3><h3 id="什么是无状态化？？？"><a href="#什么是无状态化？？？" class="headerlink" title="什么是无状态化？？？"></a>什么是无状态化？？？</h3><h3 id="什么是”热点数据”"><a href="#什么是”热点数据”" class="headerlink" title="什么是”热点数据”???"></a>什么是”热点数据”???</h3><p>热点数据就是一个系统中,用户<strong>访问量最大的数据</strong>,比如:热点商品。热点数据又分为<strong>:静态热点数据</strong>和<strong>动态热点数据</strong>。</p><h4 id="如何分析发现热点数据"><a href="#如何分析发现热点数据" class="headerlink" title="如何分析发现热点数据??"></a>如何分析发现热点数据??</h4><p><strong>静态热点数据的发现</strong></p><p>提前通过统计这些数据,比如:热卖商品,我们可以通过TOP排行榜进行统计,秒杀商品可以让商家进行报名,提前对这些数据做好缓存和预处理。</p><p><strong>动态数据的发现</strong></p><p>构建热点发现系统,用于在短时间内发现热点商品,从而做出相应的处理策略。</p><ol><li>构建一个<strong>异步的系统</strong>，它可以收集交易链路上各个环节中的中间件产品的热点 Key，如 Nginx、缓存、RPC 服务框架等这些中间件（一些中间件产品本身已经有<strong>热点统计模块</strong>）。</li><li>建立一个<strong>热点上报和可以按照需求订阅的热点服务的下发规范</strong>，主要目的是通过交易链路上各个系统（包括详情、购物车、交易、优惠、库存、物流等）访问的时间差，<strong>把上游已经发现的热点透传给下游系统</strong>，提前做好保护。比如，对于大促高峰期，<strong>详情系统是最早知道的</strong>，在统一<strong>接入层上 Nginx 模块统计的热点 URL</strong>。</li><li>将<strong>上游系统收集的热点数据发送到热点服务台</strong>，然后下游系统（如交易系统）就会知道哪些商品会被频繁调用，然后做热点保护。</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="img/热点分析系统.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G:热点分析平台:它存在的主要作用就是从各个可能收集热点数据的地方(每台机器上的Agen把日志汇总)收集到热点数据,然后对这些数据进行分析(分析集群),把分析到的热点数据进行发布,相关服务订阅到热点数据后,提前对这些热点数据做好处理(填充到 Cache等手段)。</span><br></pre></td></tr></table></figure><p><strong>热点分析系统构建注意事项:</strong></p><ol><li>这个热点服务后台抓取热点数据日志最好采用<strong>异步方式</strong>，因为“异步”一方面便于保证通用性，另一方面又不影响业务系统和中间件产品的主流程。</li><li><strong>热点服务发现和中间件自身的热点保护模块并存</strong>，每个中间件和应用还需要保护自己。热点服务台提供热点数据的收集和订阅服务，便于把各个系统的热点数据透明出来。</li><li>热点发现要做到接近实时（3s 内完成热点数据的发现），因为只有做到<strong>接近实时</strong>，动态发现才有意义，才能<strong>实时地对下游系统提供保护</strong>。</li></ol><p><strong>总结热点数据发现的方法</strong>:</p><ul><li>人工标识</li><li>大数据统计计算</li><li>以及实时热点发现方案</li></ul><h4 id="发现热点数据后如何处理热点数据"><a href="#发现热点数据后如何处理热点数据" class="headerlink" title="发现热点数据后如何处理热点数据?"></a>发现热点数据后如何处理热点数据?</h4><p><strong>优化</strong></p><p><strong>LRU淘汰算法</strong>实时缓存热点数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LRU（Least recently used，最近最少使用）算法根据数据的历史访问记录来进行淘汰数据，其核心思想是“如果数据最近被访问过，那么将来被访问的几率也更高”。</span><br></pre></td></tr></table></figure><p><strong>限制</strong></p><p>限制更多的是一种保护机制，限制的办法也有很多，例如对被访问商品的 ID 做一致性 Hash，然后根据 Hash 做分桶，每个分桶设置一个处理队列，这样可以把热点商品限制在一个请求队列里，防止因某些热点商品占用太多的服务器资源，而使其他请求始终得不到服务器的处理资源。</p><p><strong>隔离</strong></p><p>不要让 1% 的请求影响到另外的 99%，隔离出来后也更方便对这 1% 的请求做针对性的优化。</p><p>具体到“秒杀”业务，我们可以在以下几个层次实现隔离:</p><ol><li><strong>业务隔离</strong>。把秒杀做成一种营销活动，卖家要参加秒杀这种营销活动需要单独报名，从技术上来说，卖家报名后对我们来说就有了已知热点，因此可以<strong>提前做好预热</strong>。</li><li><strong>系统隔离</strong>。系统隔离更多的是运行时的隔离，可以通过<strong>分组部署的方式和另外 99% 分开</strong>。秒杀可以申请单独的域名，目的也是让请求落到不同的集群中。</li><li><strong>数据隔离</strong>。秒杀所调用的数据大部分都是热点数据，比如会启用单独的 Cache 集群或者 MySQL 数据库来放热点数据，目的也是不想 0.01% 的数据有机会影响 99.99% 数据。</li></ol><p>你可以按照用户来区分，给不同的用户分配不同的 Cookie，<strong>在接入层，路由到不同的服务接口</strong>中；</p><p>你还可以在接入层针对 <strong>URL 中的不同 Path 来设置限流</strong>策略。</p><p>服务层调用不同的服务接口，以及数据层通过给数据打标来区分等等这些措施，其目的都是<strong>把已经识别出来的热点请求和普通的请求区分</strong>开。</p><h3 id="流量削峰-1"><a href="#流量削峰-1" class="headerlink" title="流量削峰"></a>流量削峰</h3><h4 id="什么是流量削峰"><a href="#什么是流量削峰" class="headerlink" title="什么是流量削峰???"></a>什么是流量削峰???</h4><p>在秒杀的过程中,就某一个时间来说请求实非常大的,我们的服务监控会看到一根非常直的线,因为所有请求都汇聚在这个时间点,对流量产生瞬时的消耗。</p><p>而流量削峰就是避免这种情况的发生,让并发请延缓,过滤掉无效的请求,让秒杀请求不在瞬时爆发,避免压垮服务器情况的发生。</p><h4 id="为什么要削峰"><a href="#为什么要削峰" class="headerlink" title="为什么要削峰???"></a>为什么要削峰???</h4><p>秒杀就像大家去买早餐,早餐是有限的,买早餐的人可能非常多,大家为了买到早餐都往早餐店冲,这样的结果就是挤爆早餐店,大家谁也买不到早餐。</p><p>把请求当做买早餐的人,把早餐当成秒杀的商品是一样的道理.所以,削峰的意义就在于让服务器正常处理请求,避免服务器资源的浪费,保质保量完成请求任务。</p><h4 id="如何进行流量削峰"><a href="#如何进行流量削峰" class="headerlink" title="如何进行流量削峰???"></a>如何进行流量削峰???</h4><h5 id="无损的解决方案"><a href="#无损的解决方案" class="headerlink" title="无损的解决方案"></a>无损的解决方案</h5><ul><li>答题</li><li>排队</li><li>分层过滤</li></ul><h5 id="有损的解决方案"><a href="#有损的解决方案" class="headerlink" title="有损的解决方案"></a>有损的解决方案</h5><ul><li>限流</li><li>负载保护</li></ul><blockquote><p><strong>参考文档</strong></p></blockquote><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a></p></blockquote><blockquote><p><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;阅读笔记&quot;&gt;&lt;a href=&quot;#阅读笔记&quot; class=&quot;headerlink&quot; title=&quot;阅读笔记&quot;&gt;&lt;/a&gt;阅读笔记&lt;/h2&gt;&lt;h3 id=&quot;秒杀系统关键点&quot;&gt;&lt;a href=&quot;#秒杀系统关键点&quot; class=&quot;headerlink&quot; title=&quot;秒杀系
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="读书笔记" scheme="https://lywlefan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="高并发" scheme="https://lywlefan.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
      <category term="java并发编程实战-王宝令" scheme="https://lywlefan.github.io/tags/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98-%E7%8E%8B%E5%AE%9D%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>后端导航</title>
    <link href="https://lywlefan.github.io/2019/10/15/%E5%90%8E%E7%AB%AF/%E5%90%8E%E7%AB%AF%E5%AF%BC%E8%88%AA/"/>
    <id>https://lywlefan.github.io/2019/10/15/后端/后端导航/</id>
    <published>2019-10-14T16:00:00.000Z</published>
    <updated>2019-11-27T07:30:26.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网导航"><a href="#官网导航" class="headerlink" title="官网导航"></a>官网导航</h1><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><h2 id="前沿技术"><a href="#前沿技术" class="headerlink" title="前沿技术"></a>前沿技术</h2><h4 id="人工智能技术"><a href="#人工智能技术" class="headerlink" title="人工智能技术"></a>人工智能技术</h4><p><a href="https://www.nvidia.com" target="_blank" rel="noopener">人工智能图片补全</a></p><h1 id="博客汇总"><a href="#博客汇总" class="headerlink" title="博客汇总"></a>博客汇总</h1><h2 id="团队博客"><a href="#团队博客" class="headerlink" title="团队博客"></a>团队博客</h2><p><a href="https://tech.meituan.com/" target="_blank" rel="noopener">美团技术团队</a>&emsp;<a href="https://blog.didiyun.com/index.php/category/development/" target="_blank" rel="noopener">滴滴技术团队</a>&emsp;<a href="http://jm.taobao.org/" target="_blank" rel="noopener">阿里中间件团队博客</a> &emsp;<a href="https://www.baidu.com/link?url=jqkSj1_Ki_48KWDAFwel7BJIu8Bmjq8e3F0W_6qg7PjVfpgUKYRia9PNGma1xz7y&amp;wd=&amp;eqid=b52783800040a54d000000035da73d69" target="_blank" rel="noopener"><em>阿里</em>云系统组<em>技术博客</em></a>&emsp; <a href="https://cloud.tencent.com/developer" target="_blank" rel="noopener">腾讯云+社区</a>  <a href="https://qcon.infoq.cn" target="_blank" rel="noopener">Qcon</a>    <a href="https://www.geekbang.org/" target="_blank" rel="noopener">极客邦</a>&emsp;</p><h2 id="个人博客"><a href="#个人博客" class="headerlink" title="个人博客"></a>个人博客</h2><h3 id="必看博主"><a href="#必看博主" class="headerlink" title="必看博主"></a>必看博主</h3><p><a href="https://coolshell.cn/" target="_blank" rel="noopener">酷壳</a>  <a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">阮一峰的网络日志</a>  <a href="https://skyao.io/" target="_blank" rel="noopener">敖小剑的博客</a></p><h3 id="领域博主"><a href="#领域博主" class="headerlink" title="领域博主"></a>领域博主</h3><h4 id="区块链领域"><a href="#区块链领域" class="headerlink" title="区块链领域"></a>区块链领域</h4><p><a href="https://www.wanchain.org/zh/blog/" target="_blank" rel="noopener">万维链博客</a></p><h4 id="其他领域"><a href="#其他领域" class="headerlink" title="其他领域"></a>其他领域</h4><p><a href="http://jijiangshe.com" target="_blank" rel="noopener"> 技匠社</a> &emsp;<a href="https://sspai.com" target="_blank" rel="noopener">少数派</a>&emsp;<a href="https://me.csdn.net/qq_27093465" target="_blank" rel="noopener">李学凯</a>&emsp;<a href="http://blog.didispace.com/" target="_blank" rel="noopener">程序员DD</a> &emsp;<a href="http://itmuch.com/" target="_blank" rel="noopener">周立|Spring Cloud</a> &emsp;<a href="http://www.bysocket.com/" target="_blank" rel="noopener">泥瓦匠BYSocket的博客</a> &emsp;<a href="http://kailing.pub/" target="_blank" rel="noopener">KL博客</a> <a href="http://edisonxu.org/" target="_blank" rel="noopener">Edison Xu’s Blog</a> &emsp;<a href="http://blog.720ui.com/" target="_blank" rel="noopener">梁桂钊的博客</a> &emsp;<a href="http://www.icnws.com/" target="_blank" rel="noopener">城南往事</a> &emsp;<a href="http://www.ictgu.cn/" target="_blank" rel="noopener">Any-Video</a> <a href="http://blog.54im.com/" target="_blank" rel="noopener">钿畑的博客</a>&emsp; <a href="http://cmsblogs.com/" target="_blank" rel="noopener">chenssy</a> &emsp;<a href="https://www.cnkirito.moe/" target="_blank" rel="noopener">徐靖峰|个人博客</a> &emsp;<a href="http://cxytiandi.com/" target="_blank" rel="noopener">猿天地</a> <a href="https://crossoverjie.top/" target="_blank" rel="noopener">crossoverjie</a>&emsp; <a href="http://www.iocoder.cn/" target="_blank" rel="noopener">芋道源码</a> &emsp;<a href="https://purewhite.io/" target="_blank" rel="noopener">Pure White</a> &emsp;<a href="https://blog.52itstyle.vip/" target="_blank" rel="noopener">小柒</a>&emsp; <a href="https://www.cnblogs.com/netfocus/archive/2012/02/12/2347919.html" target="_blank" rel="noopener">汤雪华的博客</a>&emsp; <a href="https://www.cnblogs.com/huxi2b/" target="_blank" rel="noopener">kafka核心技术讲解作者·huxihx</a> &emsp;<a href="https://blog.csdn.net/a724888" target="_blank" rel="noopener">黄小斜</a> <a href="https://github.com/h2pl/" target="_blank" rel="noopener">黄小斜github</a>&emsp;<a href="https://www.cnblogs.com/wayfarer/" target="_blank" rel="noopener">张逸的博客(ThoughtWorks架构师)</a>&emsp;<a href="https://nndl.github.io/" target="_blank" rel="noopener">神经网络与深度学习·邱锡鹏</a>&emsp;</p><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;官网导航&quot;&gt;&lt;a href=&quot;#官网导航&quot; class=&quot;headerlink&quot; title=&quot;官网导航&quot;&gt;&lt;/a&gt;官网导航&lt;/h1&gt;&lt;h2 id=&quot;java&quot;&gt;&lt;a href=&quot;#java&quot; class=&quot;headerlink&quot; title=&quot;java&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="导航" scheme="https://lywlefan.github.io/tags/%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>后端导航</title>
    <link href="https://lywlefan.github.io/2019/10/15/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AF%BC%E8%88%AA/"/>
    <id>https://lywlefan.github.io/2019/10/15/前沿技术/区块链/区块链导航/</id>
    <published>2019-10-14T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:32.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="企业区块链官方"><a href="#企业区块链官方" class="headerlink" title="企业区块链官方"></a>企业区块链官方</h1><h2 id="大企业导航"><a href="#大企业导航" class="headerlink" title="大企业导航"></a>大企业导航</h2><p><a href="[https://baas.yizhangtong.com](https://baas.yizhangtong.com/">壹账链·平安</a> )     <a href="https://www.hyperchain.cn/" target="_blank" rel="noopener">趣链科技</a></p><h1 id="学习资料收集"><a href="#学习资料收集" class="headerlink" title="学习资料收集"></a>学习资料收集</h1><h2 id="CONTENTS"><a href="#CONTENTS" class="headerlink" title="CONTENTS"></a>CONTENTS</h2><ul><li><a href="https://github.com/chaozh/awesome-blockchain-cn#intro-介绍" target="_blank" rel="noopener">INTRO 介绍</a></li><li><a href="https://github.com/chaozh/awesome-blockchain-cn#tutorial-教程" target="_blank" rel="noopener">TUTORIAL 教程</a></li><li><a href="https://github.com/chaozh/awesome-blockchain-cn#project-项目" target="_blank" rel="noopener">PROJECT 项目</a></li><li><a href="https://github.com/chaozh/awesome-blockchain-cn#document-资料" target="_blank" rel="noopener">DOCUMENT 资料</a></li><li><a href="https://github.com/chaozh/awesome-blockchain-cn#application-应用" target="_blank" rel="noopener">APPLICATION 应用</a></li></ul><h2 id="INTRO-介绍"><a href="#INTRO-介绍" class="headerlink" title="INTRO 介绍"></a>INTRO 介绍</h2><h3 id="Started-入门"><a href="#Started-入门" class="headerlink" title="Started 入门"></a>Started 入门</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/22228902" target="_blank" rel="noopener">（一）简单易懂地介绍什么是区块链</a> 比特币区块链关键词讲解</li><li><a href="https://zhuanlan.zhihu.com/p/23243289" target="_blank" rel="noopener">（二）简单易懂地介绍什么是区块链（技术篇）</a> 比特币区块链技术图解</li><li><a href="https://charlesliuyx.github.io/2017/09/24/一文弄懂区块链-以比特币为例/" target="_blank" rel="noopener">一文看懂区块链：一步一步发明比特币</a></li><li><a href="http://blog.csdn.net/jwter87/article/details/53322642" target="_blank" rel="noopener">一步一步学区块链</a> 按步骤的实际操作入门指南</li><li><a href="https://yeasy.gitbooks.io/blockchain_guide" target="_blank" rel="noopener">区块链技术指南</a> 区块链领域比较系统的入门资料</li><li><a href="http://blog.csdn.net/csolo/article/details/52858236" target="_blank" rel="noopener">理解区块链</a> 区块链关键技术要点讲解</li><li><a href="http://www.8btc.com/ebook-blockchain" target="_blank" rel="noopener">一文看懂区块链架构设计</a> 从技术分层解构架构</li><li><a href="https://charlesliuyx.github.io/2018/03/03/【区块链】如何解决拜占庭将军问题/" target="_blank" rel="noopener">共识算法与如何解决拜占庭将军问题</a></li></ul><h3 id="Ethereum-以太坊进阶"><a href="#Ethereum-以太坊进阶" class="headerlink" title="Ethereum 以太坊进阶"></a>Ethereum 以太坊进阶</h3><ul><li><a href="http://ethfans.org/posts/block-chain-technology-smart-contracts-and-ethereum" target="_blank" rel="noopener">区块链技术-智能合约-以太坊</a> 以太坊智能合约入门概念</li><li><a href="http://ethfans.org/wikis/以太坊白皮书" target="_blank" rel="noopener">以太坊白皮书</a></li><li><a href="https://theethereum.wiki/w/index.php/Main_Page" target="_blank" rel="noopener">The Ethereum Wiki</a> <em>(English)</em></li><li><a href="http://ethfans.org/posts/510" target="_blank" rel="noopener">以太坊设计原理</a></li><li><a href="http://me.tryblockchain.org/getting-up-to-speed-on-ethereum.html" target="_blank" rel="noopener">以太坊Dapp开发入门</a></li><li><a href="https://hackernoon.com/ether-purchase-power-df40a38c5a2f" target="_blank" rel="noopener">以太坊Gas使用</a> Calculating Costs in Ethereum Contracts <em>(English)</em></li><li><a href="http://ethfans.org/topics/227" target="_blank" rel="noopener">以太坊代码剖析</a></li><li><a href="http://www.cnblogs.com/baizx/category/1011749.html" target="_blank" rel="noopener">以太坊源码阅读</a></li><li><a href="http://blog.csdn.net/jiange_zh/article/details/53386250" target="_blank" rel="noopener">Merkle Tree学习</a></li><li><a href="https://github.com/laalaguer/ethereum-compass" target="_blank" rel="noopener">以太坊的指南针</a></li></ul><h3 id="Fabric-联盟链进阶"><a href="#Fabric-联盟链进阶" class="headerlink" title="Fabric 联盟链进阶"></a>Fabric 联盟链进阶</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/23356616" target="_blank" rel="noopener">Blockchain区块链架构设计之一：成员管理</a></li><li><a href="https://zhuanlan.zhihu.com/p/23463699" target="_blank" rel="noopener">Blockchain区块链架构设计之二：分布式账本技术对比</a></li><li><a href="https://zhuanlan.zhihu.com/p/23947372" target="_blank" rel="noopener">Blockchain区块链架构设计之三：Hyperledger Fabric介绍</a></li><li><a href="https://zhuanlan.zhihu.com/p/24605987" target="_blank" rel="noopener">Blockchain区块链架构设计之四：Fabric多通道和下一代账本设计</a></li><li><a href="https://zhuanlan.zhihu.com/p/25061575" target="_blank" rel="noopener">Blockchain区块链架构设计之五：让DLT产生协作，对Corda和GSL的思考</a></li><li><a href="https://zhuanlan.zhihu.com/p/25119939" target="_blank" rel="noopener">Blockchain区块链架构设计之六：Fabric 1.0账本设计（1）</a></li><li><a href="https://zhuanlan.zhihu.com/p/25295608" target="_blank" rel="noopener">Blockchain区块链架构设计之七：Fabric 1.0 Endorse背书策略</a></li><li><a href="http://www.wanbizu.com/blockchain/201702078984.html" target="_blank" rel="noopener">Hyperledger架构解读：Hyperledger Fabric1.0架构概览</a></li></ul><h2 id="TUTORIAL-教程"><a href="#TUTORIAL-教程" class="headerlink" title="TUTORIAL 教程"></a>TUTORIAL 教程</h2><h3 id="BitCoin-比特币"><a href="#BitCoin-比特币" class="headerlink" title="BitCoin 比特币"></a>BitCoin 比特币</h3><ul><li><a href="https://www.coursera.org/learn/cryptocurrency" target="_blank" rel="noopener">Bitcoin and Cryptocurrency Technologies</a> Cousera上的比特币教程 <em>(English)</em></li></ul><h3 id="Ethereum-以太坊"><a href="#Ethereum-以太坊" class="headerlink" title="Ethereum 以太坊"></a>Ethereum 以太坊</h3><ul><li><a href="http://www.jianshu.com/p/220130b39e22" target="_blank" rel="noopener">以太坊从零开始入门</a></li><li><a href="http://me.tryblockchain.org/getting-up-to-speed-on-ethereum.html" target="_blank" rel="noopener">以太坊开发入门经验</a></li><li><a href="https://my.oschina.net/wtsoftware/blog/782057" target="_blank" rel="noopener">mac配置以太坊本地开发环境</a></li><li><a href="http://ethfans.org/posts/101-noob-intro" target="_blank" rel="noopener">以太坊智能合约编程之菜鸟教程</a></li><li><a href="http://8btc.com/thread-23195-1-1.html" target="_blank" rel="noopener">以太坊常见问题FAQ</a></li><li><a href="http://www.toutiao.com/i6401418700217385473/?tt_from=weixin&amp;utm_campaign=client_share&amp;from=groupmessage&amp;app=news_article&amp;utm_source=weixin&amp;iid=8932715408&amp;utm_medium=toutiao_ios&amp;wxshare_count=2&amp;pbid=35867484354" target="_blank" rel="noopener">区块链语言Solidity校验椭圆曲线加密数字签名（附实例）</a></li><li><a href="https://www.ethereum.org/token" target="_blank" rel="noopener">Create your own crypto-currency</a> 来自以太坊官方的代币创建教程 <em>(English)</em></li><li><a href="http://truffleframework.com/tutorials/pet-shop" target="_blank" rel="noopener">ETHEREUM PET SHOP</a> Truffle框架逐步案例教程 <em>(English)</em></li><li><a href="http://zeppelin.tryblockchain.org/robust-smart-contracts-with-openzeppelin.html" target="_blank" rel="noopener">ROBUST SMART CONTRACTS WITH OPENZEPPELIN</a> OpenZeppelin集成Truffle编写健壮安全的合约 <em>(English)</em></li><li><a href="http://truffle.tryblockchain.org/truffle3.0-integrate-nodejs.html" target="_blank" rel="noopener">Truffle3.0案例教程</a> 集成NodeJS并完全跑通，附详细实例和可能的错误 <em>(English)</em></li><li><a href="http://blog.csdn.net/wo541075754/article/category/6502432/1" target="_blank" rel="noopener">以太坊开发入门教程</a></li></ul><h3 id="Fabric-联盟链"><a href="#Fabric-联盟链" class="headerlink" title="Fabric 联盟链"></a>Fabric 联盟链</h3><ul><li><a href="https://github.com/angrbrd/hyperledger-fabric-basics" target="_blank" rel="noopener">Fabric Basics</a> 使用Docker Toolbox来搭建Fabric的开发环境 <em>(English)</em></li><li><a href="https://github.com/IBM-Blockchain/learn-chaincode" target="_blank" rel="noopener">Learn Chaincode</a> Fabric Chaincode入门 <em>(English)</em></li><li><a href="https://github.com/IBM-Blockchain/marbles/blob/master/docs/tutorial_part1.md" target="_blank" rel="noopener">Marbles Project Tutorial: Part One</a> 官方Chaincode案例教程第一部分 <em>(English)</em></li><li><a href="https://github.com/IBM-Blockchain/marbles/blob/master/docs/tutorial_part2.md" target="_blank" rel="noopener">Marbles Project Tutorial: Part Two</a> 官方Chaincode案例教程第二部分 <em>(English)</em></li><li><a href="https://zhuanlan.zhihu.com/p/25070745" target="_blank" rel="noopener">Hyperledger Fabric V1.0– 开发者快速入门</a> 这个是基于baseos 0.2.2 的</li><li><a href="http://blog.csdn.net/kojhliang/article/details/66971404" target="_blank" rel="noopener">搭建运行Fabric V1.0-alpha版本</a> 针对Fabric1.0版本的开发环境搭建指引</li><li><a href="http://blog.csdn.net/remote_roamer/article/details/70228662" target="_blank" rel="noopener">Fabric v1.0-alpha 开发镜像编译</a> 使用Fabric源码编译v1.0-alpha版本的Docker镜像指引</li><li><a href="http://www.jianshu.com/p/7bc258810b77" target="_blank" rel="noopener">Hyperledger Composer使用入门</a> 官方Fabric应用开发工具Hyperledger Composer入门</li><li><a href="http://www.jianshu.com/p/ec7d4216c3cf" target="_blank" rel="noopener">Fabric-CA-1.0-Alpha小结</a></li></ul><h3 id="Videos-视频"><a href="#Videos-视频" class="headerlink" title="Videos 视频"></a>Videos 视频</h3><ul><li><a href="https://www.youtube.com/watch?v=9_coM_g7Dbg&amp;list=PLH4m2oS2ratdoHFEkGvwvd7TkeTv4sa7Z" target="_blank" rel="noopener">Building Ethereum DApps using Solidity</a> 视频教程 <em>(English)</em></li><li><a href="https://www.youtube.com/watch?v=_BvvUlKDqp0&amp;list=PLJqWcTqh_zKEjpSej3ddtDOKPRGl_7MhS" target="_blank" rel="noopener">Devcon 0 (Berlin, 2014) talks and videos</a> <em>(English)</em></li><li><a href="https://www.youtube.com/watch?v=BUARih8_f68&amp;list=PLJqWcTqh_zKHQUFX4IaVjWjfT2tbS4NVk" target="_blank" rel="noopener">Devcon 1 (London, 2015) talks and videos</a> <em>(English)</em></li><li><a href="https://www.youtube.com/watch?v=1wayaZ1-iBE&amp;list=PLaM7G4Llrb7xqzgOwbvNv63_KM7VH84Rd" target="_blank" rel="noopener">Devcon 2 (Shanghai, 2016) talks and videos</a> <em>(English)</em></li><li><a href="http://ethereumfoundation.org/devcon3/" target="_blank" rel="noopener"><strong>Devcon 3</strong> (Cancún, 2017) website and registration</a> <em>(English)</em></li></ul><h2 id="PROJECT-项目"><a href="#PROJECT-项目" class="headerlink" title="PROJECT 项目"></a>PROJECT 项目</h2><h3 id="Chain-区块链底层"><a href="#Chain-区块链底层" class="headerlink" title="Chain 区块链底层"></a>Chain 区块链底层</h3><ul><li><a href="https://github.com/mvs-org/metaverse" target="_blank" rel="noopener">Metaverse</a> 原界链源码</li><li><a href="https://github.com/EOSIO/eos" target="_blank" rel="noopener">EOS</a> EOS链源码</li><li><a href="https://github.com/Bytom/bytom" target="_blank" rel="noopener">BYTOM</a> 比原链源码</li><li><a href="https://github.com/neo-project/neo" target="_blank" rel="noopener">NEO</a> NEO链源码</li><li><a href="https://github.com/cryptape/cita" target="_blank" rel="noopener">CITA</a> cita联盟链的底层源码</li><li><a href="https://github.com/nervosnetwork/ckb" target="_blank" rel="noopener">Nervos</a> 公链 Nervos CKB 的底层源码</li><li><a href="https://github.com/fkysly/bitcoin0.1.0" target="_blank" rel="noopener">比特币0.1</a> 最原始的比特币代码</li><li><a href="https://github.com/jpmorganchase/quorum" target="_blank" rel="noopener">Quorum</a> 来自JP Morgan基于Go-Ethereum数据隐私加强的以太坊实现</li><li><a href="https://github.com/FISCO-BCOS/FISCO-BCOS" target="_blank" rel="noopener">FISCO-BCOS</a> 来自金链盟的聚焦金融行业的区块链底层平台</li><li><a href="https://github.com/xiaoyao1991/presto-ethereum" target="_blank" rel="noopener">Presto-Ethereum</a> 以太坊增加Presto的SQL访问能力</li><li><a href="https://github.com/ipfs/go-ipfs" target="_blank" rel="noopener">IPFS</a> IPFS的GO语言实现 <a href="https://github.com/ipfs/ipfs" target="_blank" rel="noopener">原理</a></li></ul><h3 id="SDK-工具包"><a href="#SDK-工具包" class="headerlink" title="SDK 工具包"></a>SDK 工具包</h3><ul><li><a href="https://ethereum.github.io/browser-solidity/" target="_blank" rel="noopener">Remix</a> 在线以太坊编译器</li><li><a href="https://github.com/trufflesuite/truffle" target="_blank" rel="noopener">Truffle</a> 以太坊Dapp开发脚手架</li><li><a href="https://github.com/OpenZeppelin/zeppelin-solidity" target="_blank" rel="noopener">Zeppelin</a> 用于编写安全的以太坊合约框架</li><li><a href="https://github.com/web3j/web3j" target="_blank" rel="noopener">Web3j</a> 以太坊官方Web3轻量级java SDK</li><li><a href="https://github.com/embark-framework/embark" target="_blank" rel="noopener">Embark</a> 以太坊Dapp开发框架，支持IPFS、Whisper及Orbit调用</li><li><a href="https://github.com/BANKEX/web3swift" target="_blank" rel="noopener">Web3Swift</a> 一个Web3的swift SDK</li><li><a href="https://github.com/comaeio/porosity" target="_blank" rel="noopener">Porosity</a> 反编译以太坊智能合约工具</li><li><a href="https://github.com/sc-forks/solidity-coverage" target="_blank" rel="noopener">Solidity-Coverage</a> 检测Solidity代码覆盖</li><li><a href="https://github.com/hyperledger-archives/caliper" target="_blank" rel="noopener">Caliper</a> hyperledger区块链性能测试工具</li><li><a href="https://github.com/hyperledger/composer" target="_blank" rel="noopener">Composer</a> 官方可视化Fabric应用开发框架</li><li><a href="https://github.com/jpmorganchase/cakeshop" target="_blank" rel="noopener">Cakeshop</a> 来自JP Morgan的以太坊可视化管理工具</li></ul><h3 id="Research-最新研究"><a href="#Research-最新研究" class="headerlink" title="Research 最新研究"></a>Research 最新研究</h3><ul><li><a href="https://github.com/ewasm/design" target="_blank" rel="noopener">eWASM</a> 让以太坊支持WebAssembly</li><li><a href="https://cps-vo.org/group/SmartContracts" target="_blank" rel="noopener">FSolidM</a> 可视化智能合约生成工具 <a href="https://github.com/anmavrid/smart-contracts" target="_blank" rel="noopener">源码</a></li><li><a href="https://github.com/MAIAN-tool/MAIAN" target="_blank" rel="noopener">Maian</a> 以太坊智能合约漏洞查找工具</li><li><a href="https://github.com/melonproject/oyente" target="_blank" rel="noopener">Oyente</a> 以太坊智能合约分析工具</li><li><a href="https://github.com/ooibc88/blockbench" target="_blank" rel="noopener">Blockbench</a> 区块链性能测试工具</li><li><a href="https://github.com/JacobEberhardt/ZoKrates" target="_blank" rel="noopener">Zokrates</a> 以太坊使用zkSNARKS工具包(实验用)</li><li><a href="https://github.com/scipr-lab/libsnark" target="_blank" rel="noopener">libsnark</a> zkSNARKS C++库</li></ul><h2 id="DOCUMENT-资料"><a href="#DOCUMENT-资料" class="headerlink" title="DOCUMENT 资料"></a>DOCUMENT 资料</h2><h3 id="BitCoin-比特币-1"><a href="#BitCoin-比特币-1" class="headerlink" title="BitCoin 比特币"></a>BitCoin 比特币</h3><ul><li><a href="https://github.com/bitcoinbook/bitcoinbook" target="_blank" rel="noopener">精通比特币</a> 精通比特币开发Oreilly开源书 <a href="http://zhibimo.com/books/wang-miao/mastering-bitcoin" target="_blank" rel="noopener">中文翻译版</a></li><li><a href="http://blockchaindev.org/" target="_blank" rel="noopener">blockchaindev.org</a> 区块链创业公司维优CTO的专栏</li><li><a href="http://www.jianshu.com/u/30081a05cf95" target="_blank" rel="noopener">区块链研习社</a> 比特币源码解读</li></ul><h3 id="Ethereum-以太坊-1"><a href="#Ethereum-以太坊-1" class="headerlink" title="Ethereum 以太坊"></a>Ethereum 以太坊</h3><ul><li><a href="https://github.com/ethereumbook/ethereumbook" target="_blank" rel="noopener">Mastering Ethereum</a> 精通以太坊开发Oreilly开源书</li><li><a href="http://me.tryblockchain.org/" target="_blank" rel="noopener">区块链技术博客</a> 关注以太坊</li><li><a href="http://gi1.cn/topics/category/solidity" target="_blank" rel="noopener">以太坊系列教程</a> solidity语言学习</li><li><a href="http://www.tryblockchain.org/" target="_blank" rel="noopener">Solidity语言文档</a> 语言中文手册</li><li><a href="http://web3.tryblockchain.org/" target="_blank" rel="noopener">Web3.JS接口文档</a> 接口中文手册</li><li><a href="http://truffle.tryblockchain.org/" target="_blank" rel="noopener">Truffle框架文档</a> 框架中文手册</li><li><a href="http://zeppelin.tryblockchain.org/" target="_blank" rel="noopener">Open Zeppelin框架文档</a> 框架中文手册</li><li><a href="https://github.com/EverexIO/Ethplorer/wiki/Ethplorer-API?from=etop" target="_blank" rel="noopener">Ethplorer接口</a> Ethplorer接口文档</li><li><a href="https://consensys.github.io/smart-contract-best-practices/" target="_blank" rel="noopener">Ethereum Smart Contract Security Best Practices</a> <em>(english)</em></li><li><a href="http://8btc.com/thread-23195-1-1.html" target="_blank" rel="noopener">以太坊常见问题FAQ</a></li><li><a href="https://github.com/Scanate/EthList" target="_blank" rel="noopener">EthList</a> 以太坊开发相关学习资料收集</li></ul><h3 id="Fabric-联盟链-1"><a href="#Fabric-联盟链-1" class="headerlink" title="Fabric 联盟链"></a>Fabric 联盟链</h3><ul><li><a href="https://hyperledger-fabric.readthedocs.io/en/latest/" target="_blank" rel="noopener">Fabric Official Docs</a> Fabric官方最新文档</li><li><a href="http://fubai.tech/" target="_blank" rel="noopener">浮白</a> Fabric开发环境搭建与codechain入门</li><li><a href="http://blog.csdn.net/yeasy" target="_blank" rel="noopener">yeasy的专栏</a> IBM fabric核心开发者yeasy的专栏</li><li><a href="http://blog.csdn.net/xjmtxwd24/" target="_blank" rel="noopener">菜鸟的博客</a> fabric0.6及1.0源码分析</li><li><a href="http://blog.csdn.net/jiang_xinxing/article/category/6642179" target="_blank" rel="noopener">jiang_xinxing的博客</a> fabric0.6源码分析</li></ul><h2 id="APPLICATION-应用"><a href="#APPLICATION-应用" class="headerlink" title="APPLICATION 应用"></a>APPLICATION 应用</h2><h3 id="Explorer-链浏览"><a href="#Explorer-链浏览" class="headerlink" title="Explorer 链浏览"></a>Explorer 链浏览</h3><ul><li><a href="https://blockchain.info/" target="_blank" rel="noopener">Blockchain</a> 比特币区块链浏览器</li><li><a href="https://etherscan.io/" target="_blank" rel="noopener">Etherscan</a> 以太坊区块链浏览器</li><li><a href="https://ethplorer.io/" target="_blank" rel="noopener">Ethplorer</a> 以太坊区块链浏览器，提供API调用</li><li><a href="https://ethgasstation.info/index.php" target="_blank" rel="noopener">Eth Gas Station</a> 以太坊Gas目前定价</li><li><a href="https://etherscope.io/" target="_blank" rel="noopener">Etherscope</a> 以太坊区块链浏览器</li></ul><h3 id="Wallet-钱包"><a href="#Wallet-钱包" class="headerlink" title="Wallet 钱包"></a>Wallet 钱包</h3><ul><li><a href="https://myetherwallet.com/" target="_blank" rel="noopener">My Ether Wallet</a> 网页版以太坊钱包 <a href="https://github.com/kvhnuke/etherwallet" target="_blank" rel="noopener">源码</a></li><li><a href="https://metamask.io/" target="_blank" rel="noopener">MetaMask</a> Chrome Extension浏览器插件版</li><li><a href="https://jaxx.io/" target="_blank" rel="noopener">Multi-platform Jaxx Wallet</a> 同时兼容以太坊和比特币钱包</li><li><a href="https://github.com/ethereum/mist/releases/latest" target="_blank" rel="noopener">Mist Wallet</a> 官方版轻量级钱包</li><li><a href="https://github.com/paritytech/parity/releases/latest" target="_blank" rel="noopener">Parity Wallet</a></li><li><a href="https://github.com/ether-camp/ethereum-harmony/releases/latest" target="_blank" rel="noopener">Harmony Wallet</a></li><li><a href="https://token.im/" target="_blank" rel="noopener">imToken</a> 移动App版钱包</li><li><a href="https://trustwalletapp.com/" target="_blank" rel="noopener">Trust</a> iOS / Android 原生钱包 + DApp 浏览器</li><li><a href="https://www.cipherbrowser.com/" target="_blank" rel="noopener">Cipher</a> iOS / Android 钱包 + DApp 浏览器</li><li><a href="https://theethereum.wiki/w/index.php/Ledger_Nano_S" target="_blank" rel="noopener">Ledger Nano S</a> 硬件钱包</li><li><a href="https://blog.trezor.io/trezor-integration-with-myetherwallet-3e217a652e08" target="_blank" rel="noopener">Trezor</a> 硬件钱包</li></ul><h3 id="Exchange-交易所"><a href="#Exchange-交易所" class="headerlink" title="Exchange 交易所"></a>Exchange 交易所</h3><ul><li><a href="https://www.0xproject.com/otc" target="_blank" rel="noopener">0x</a> 0x交易所平台 <a href="https://github.com/0xProject/contracts" target="_blank" rel="noopener">源码</a></li><li><a href="https://idex.market/" target="_blank" rel="noopener">IDEX</a> IDEX交易所，目前最活跃 <a href="https://github.com/AuroraDAO" target="_blank" rel="noopener">源码</a></li><li><a href="https://etherdelta.github.io/#ZRX-ETH" target="_blank" rel="noopener">ethdelf</a> etherdelta交易所 <a href="https://github.com/etherdelta/smart_contract" target="_blank" rel="noopener">源码</a></li><li><a href="https://forkdelta.github.io/" target="_blank" rel="noopener">forkdelta</a> forkdelta交易所,较活跃 <a href="https://github.com/forkdelta/smart_contract" target="_blank" rel="noopener">源码</a></li><li><a href="https://kyber.network/" target="_blank" rel="noopener">kyber</a> kyber交易所 <a href="https://github.com/kyberNetwork/smart_contract" target="_blank" rel="noopener">源码</a></li><li><a href="https://dmarket.io/" target="_blank" rel="noopener">Dmarket</a> dmarket交易所 <a href="https://github.com/suntechsoft/dmarket-smartcontract" target="_blank" rel="noopener">源码</a></li><li><a href="https://augur.net/" target="_blank" rel="noopener">augur</a> 对赌交易所 <a href="https://github.com/AugurProject" target="_blank" rel="noopener">源码</a></li><li><a href="https://melonport.com/" target="_blank" rel="noopener">melonport</a> 数字资产交易所 <a href="https://github.com/melonproject" target="_blank" rel="noopener">源码</a></li></ul><h3 id="Game-游戏"><a href="#Game-游戏" class="headerlink" title="Game 游戏"></a>Game 游戏</h3><ul><li><a href="https://www.cryptokitties.co/" target="_blank" rel="noopener">CryptoKitties</a> 以太猫</li><li><a href="https://www.etheremon.com/#/" target="_blank" rel="noopener">Etheremon</a> 以太神奇宝贝</li><li><a href="https://www.edgeless.io/" target="_blank" rel="noopener">Edgeless</a> 虚拟币在线赌场 <a href="https://github.com/EdgelessCasino/Smart-Contracts" target="_blank" rel="noopener">源码</a></li></ul><h3 id="IM-通信"><a href="#IM-通信" class="headerlink" title="IM 通信"></a>IM 通信</h3><ul><li><a href="https://github.com/status-im/status-network-token" target="_blank" rel="noopener">status-im</a> status.im项目开源代码</li></ul><h3 id="Social-社会"><a href="#Social-社会" class="headerlink" title="Social 社会"></a>Social 社会</h3><ul><li><a href="http://docs.oraclize.it/#background" target="_blank" rel="noopener">Oraclize</a> 第三方信息提供</li><li><a href="https://aragon.one/" target="_blank" rel="noopener">Aragon</a> 公司业务 <a href="https://github.com/aragon/aragon-core/tree/master/contracts" target="_blank" rel="noopener">源码</a></li><li><a href="https://dharma.io/" target="_blank" rel="noopener">dharma</a> 第三方增信 <a href="https://github.com/dharmaprotocol/dharma-cli" target="_blank" rel="noopener">源码</a></li><li><a href="https://chronobank.io/" target="_blank" rel="noopener">Chronobank</a> 共享机制</li><li><a href="https://slock.it/" target="_blank" rel="noopener">slockit</a> 租借智能设备 <a href="https://github.com/slockit/smart-contract" target="_blank" rel="noopener">源码</a></li><li><a href="https://github.com/slockit/DAO" target="_blank" rel="noopener">DAO</a> DAO提案</li></ul><h3 id="Cross-Chain-跨链"><a href="#Cross-Chain-跨链" class="headerlink" title="Cross Chain 跨链"></a>Cross Chain 跨链</h3><ul><li><a href="https://cosmos.network/" target="_blank" rel="noopener">Cosmos</a> cosmos跨链交易，包括BTC到ETH <a href="https://github.com/cosmos" target="_blank" rel="noopener">源码</a></li><li><a href="https://polkadot.io/" target="_blank" rel="noopener">polkadot</a> polkadot跨链，实现了一个轻量级以太坊客户端 <a href="https://github.com/paritytech/parity" target="_blank" rel="noopener">源码</a></li></ul><h3 id="Token-代币"><a href="#Token-代币" class="headerlink" title="Token 代币"></a>Token 代币</h3><ul><li><a href="https://github.com/ethereum/EIPs/pull/610" target="_blank" rel="noopener">ERC20</a> 以太坊的ICO代币标准</li><li><a href="http://vitalik.ca/general/2017/06/09/sales.html" target="_blank" rel="noopener">Token Sale</a> 代币销售模型</li><li><a href="https://makerdao.com/" target="_blank" rel="noopener">maker</a> Dai代币</li></ul><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;企业区块链官方&quot;&gt;&lt;a href=&quot;#企业区块链官方&quot; class=&quot;headerlink&quot; title=&quot;企业区块链官方&quot;&gt;&lt;/a&gt;企业区块链官方&lt;/h1&gt;&lt;h2 id=&quot;大企业导航&quot;&gt;&lt;a href=&quot;#大企业导航&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="区块链" scheme="https://lywlefan.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="导航" scheme="https://lywlefan.github.io/tags/%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>如何把订单均匀分布到分片表里面</title>
    <link href="https://lywlefan.github.io/2019/09/29/%E5%90%8E%E7%AB%AF/%E4%B8%AD%E9%97%B4%E4%BB%B6/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/sharding-jdbc/%E5%A6%82%E4%BD%95%E6%8A%8A%E8%AE%A2%E5%8D%95%E5%9D%87%E5%8C%80%E5%88%86%E5%B8%83%E5%88%B0%E5%88%86%E7%89%87%E8%A1%A8%E9%87%8C%E9%9D%A2/"/>
    <id>https://lywlefan.github.io/2019/09/29/后端/中间件/分库分表/sharding-jdbc/如何把订单均匀分布到分片表里面/</id>
    <published>2019-09-28T16:00:00.000Z</published>
    <updated>2019-10-15T06:42:25.684Z</updated>
    
    <content type="html"><![CDATA[<p>这几天学习了数据库的中间件—-sharding-jdbc,</p><blockquote><p><strong>参考文档</strong></p></blockquote><blockquote><p><a href="https://shardingsphere.apache.org" target="_blank" rel="noopener">官方文档</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这几天学习了数据库的中间件—-sharding-jdbc,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考文档&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://shardingsphere
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="分库分表" scheme="https://lywlefan.github.io/tags/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    
      <category term="sharding-jdbc" scheme="https://lywlefan.github.io/tags/sharding-jdbc/"/>
    
  </entry>
  
</feed>
