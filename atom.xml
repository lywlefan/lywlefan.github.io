<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>share猿</title>
  
  <subtitle>https://lywlefan.github.io/</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lywlefan.github.io/"/>
  <updated>2019-05-21T11:00:17.106Z</updated>
  <id>https://lywlefan.github.io/</id>
  
  <author>
    <name>share猿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一代商圣范蠡-姜正成</title>
    <link href="https://lywlefan.github.io/2019/05/18/%E8%AF%BB%E4%B9%A6/%E4%B8%80%E4%BB%A3%E5%95%86%E5%9C%A3%E8%8C%83%E8%A0%A1-%E5%A7%9C%E6%AD%A3%E6%88%90/"/>
    <id>https://lywlefan.github.io/2019/05/18/读书/一代商圣范蠡-姜正成/</id>
    <published>2019-05-17T16:00:00.000Z</published>
    <updated>2019-05-21T11:00:17.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>能治国能安民，灭吴霸越，堪称一代名相。知进退懂经营，三致千金，不愧千秋商圣。</p></blockquote><h2 id="名言摘录"><a href="#名言摘录" class="headerlink" title="名言摘录"></a>名言摘录</h2><h3 id="范蠡给文种的临别书信"><a href="#范蠡给文种的临别书信" class="headerlink" title="范蠡给文种的临别书信"></a>范蠡给文种的临别书信</h3><p>&emsp;&emsp;飞鸟尽，良弓藏；狡兔死，走狗烹；敌国灭，谋臣亡。越王为人长颈鸟喙，可与共患难，不可与共乐。子何不去？</p><h3 id="人生三不朽"><a href="#人生三不朽" class="headerlink" title="人生三不朽"></a>人生三不朽</h3><p>&emsp;&emsp;立德、立功、立言，取其一容易，得其三更难，而范蠡三者全取。范蠡有为政之德，为商之德，富而好行其德，有十年声息十年教训兴越之功，有父子戮力治产积居、赀（zi）累巨万经商之功，又有《致富奇书》《范蠡兵法》《养鱼经》《陶朱公商训》著书立说之言，三者兼得，可谓德炳炳，功赫赫，言昭昭，为世人尊为商圣，万古流芳。</p><h3 id="经济循环理论"><a href="#经济循环理论" class="headerlink" title="经济循环理论"></a>经济循环理论</h3><ul><li>六岁穰（rang）六岁旱，十二岁一大饥。</li></ul><h3 id="经商致富十二条"><a href="#经商致富十二条" class="headerlink" title="经商致富十二条"></a>经商致富十二条</h3><p>&emsp;&emsp;人无信不立。</p><p>&emsp;&emsp;勤快节俭，谨慎负责，规矩方正，价格讲明，不负于人，富行其德。</p><p>&emsp;&emsp;能接纳，礼文接待，交关者众，能整顿，货物整齐，夺人心目。能倡率，躬行以律，亲感而生。</p><h3 id="人谋"><a href="#人谋" class="headerlink" title="人谋"></a>人谋</h3><p>用人要正，忠奸定兴废。</p><p>大事要慎，妄托受大害。</p><p>待人忌躁，暴躁交易少。</p><p>处事宜静，浮躁误事多。</p><p>言行宜和，和气能生财。</p><p>做事宜勤，懒惰百事废。</p><h3 id="事谋"><a href="#事谋" class="headerlink" title="事谋"></a>事谋</h3><p>用度宜俭，奢华财源败。</p><p>做工宜精，粗糙出劣品。</p><p>期货要准，马虎失信用。</p><p>交易要速，拖延失良机。</p><p>进货要严，滥入货价减。</p><p>出纳要谨，潦草出差错。</p><h3 id="物谋"><a href="#物谋" class="headerlink" title="物谋"></a>物谋</h3><p>优劣要清，混淆损耗大。</p><p>存物要整，散漫难查点。</p><p>价格要明，含糊多争执。</p><p>赊欠要审，滥出亏血本。</p><p>账目要清，糊涂弊端生。</p><p>查账要勤，懈怠滞本金。</p><h3 id="经商之道"><a href="#经商之道" class="headerlink" title="经商之道"></a>经商之道</h3><p>&emsp;&emsp;一是对百姓只取十一利；遣物如遣兵。</p><h3 id="陶朱公商训"><a href="#陶朱公商训" class="headerlink" title="陶朱公商训"></a>陶朱公商训</h3><p>生意要勤快，切勿懒惰，懒惰则百事废。</p><p>接纳要温和，切勿躁暴，躁暴则交易少。</p><p>价格要订明，切勿含糊，含糊则争执多。</p><p>账目要稽查，切勿懈怠，懈怠则资本滞。</p><p>货物要整理，切勿散漫，散漫则查点难。</p><p>出纳要谨慎，切勿大意，大意则错漏多。</p><p>期限要约定，切勿延迟，延迟则信用失。</p><p>临事要尽责，切勿放任，放任则受害大</p><p>用度要节俭，切勿奢侈，奢侈则钱财竭</p><p>买卖要随时，切勿拖延，拖延则机会失。</p><p>赊欠要识人，切勿滥出，滥出则血本亏。</p><p>优劣要分清，切勿混淆，混淆则耗用大。</p><p>用人要方正，切勿歪斜，歪斜则托付难。</p><p>货物要面验，切勿滥入，滥入则质价低。</p><p>钱账要清楚，切勿糊涂，糊涂则弊端生。</p><p>主心要镇定，切勿妄动，妄动则误事多。</p><p>工作要细心，切勿粗鲁，粗鲁则出劣品。</p><p>说话要规矩，切勿浮躁，浮躁则失事多。</p><p>囤积货物，垄断奇居，把握时机，聚散适宜。</p><p>“天、地、人、神、鬼“。</p><p>天为先天之智，经商之本;</p><p>地为后天修为，靠诚信立身;</p><p>人为仁义，懂取舍，讲究“君子爱财，取之有道；</p><p>神为勇强，遇事果敢，敢闯敢干;</p><p>鬼为心机，手法活络，能“翻手为云，覆手为雨”。</p><h3 id="范蠡经商十二则"><a href="#范蠡经商十二则" class="headerlink" title="范蠡经商十二则"></a>范蠡经商十二则</h3><p>一是能识人。知人善恶，账目不负。</p><p>二是能接纳。礼文相待，交往者众。</p><p>三是能安业。厌故喜新，商贾大病。</p><p>四是能整顿。货物整齐，夺人心目。</p><p>五是能敏捷。犹豫不决，终归无成。</p><p>六是能讨账。勤谨不怠，取行自多。</p><p>七是能用人。因才四用，任事有赖。</p><p>八是能辩论。生财有道，阐发愚蒙。</p><p>九是能办货。置货不苛，蚀本便经。</p><p>十是能知机。 售贮随时,可称名哲。</p><p>十一是能倡率。 躬行必律,亲感自生。</p><p>十二是能运数。 多寡宽紧,酌中而行。</p><h3 id="范蠡理财十二戒"><a href="#范蠡理财十二戒" class="headerlink" title="范蠡理财十二戒"></a>范蠡理财十二戒</h3><p>第一戒勿卑陋:应纳无文,交关不至:</p><p>第二戒勿亿柔:胸无果敢,经营不振;</p><p>第三戒勿虚华:用度无节,破败之端;</p><p>第四戒勿强辩:暴以待人,祸患难免;</p><p>第五戒勿懒惰:取讨不利,账目无有;</p><p>第六戒勿轻出:货物轻出,血本必亏;</p><p>第七戒勿争取:货重争趋,需防跌价;</p><p>第八戒勿昧时:依时贮发,各有常道;</p><p>第九戒勿固执: 拘执不通,便成枯木;</p><p>第十戒勿贪赊:贪赊多估,承卖莫续;</p><p>第十一戒勿薄蓄:货贱贮积,恢复必速;</p><p>第十二戒勿痴货:优劣不分,贻害匪浅。</p><h3 id="范蠡经商理财十二法"><a href="#范蠡经商理财十二法" class="headerlink" title="范蠡经商理财十二法"></a>范蠡经商理财十二法</h3><p>第一条生意要渤紧, 懒惰则百事废;</p><p>第二条接纳要温种, 躁暴则交易少;</p><p>第三条议价要订明,含糊则争执多;</p><p>第四条账目要稽查,懒怠则资本滞;</p><p>第五条货物要整理，散漫则必废残;</p><p>第六条出纳要谨慎,大意则错漏多;</p><p>第七条期银要约定,延迟则信用失;</p><p>第八条临事要责任,放弃则受害大;</p><p>第九条用度要节俭,奢侈则用途竭;</p><p>第十条买卖要随时,挨延则机宜失;</p><p>第十一条赊欠要识人，滥出则血本亏;</p><p>第十二条优劣要分清，苟且则必糊涂。</p><h2 id="思考感悟"><a href="#思考感悟" class="headerlink" title="思考感悟"></a>思考感悟</h2><h3 id="以治大国之法，治理金口小家"><a href="#以治大国之法，治理金口小家" class="headerlink" title="以治大国之法，治理金口小家"></a>以治大国之法，治理金口小家</h3><p>&emsp;&emsp;商圣让偏远的海滨金口繁荣起来靠的是什么？范蠡充分利用本地的优势资源盐和劳动力，充分发挥本地特色，让大家看不到价值的东西有了价值，当自己富有依旧不忘造福乡里，取之于民，用之于民，把金口的经济贸易充分调动了起来。</p><p><strong>名词解释</strong></p><ul><li>鸱(chi)夷子皮:范蠡给自己起的经商的名字。著名政治家、军事家、经济学家、道家代表作品：《计然篇》、《陶朱公生意经》《卢氏本草经》</li></ul><hr><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;能治国能安民，灭吴霸越，堪称一代名相。知进退懂经营，三致千金，不愧千秋商圣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;名言摘录&quot;&gt;&lt;a href=&quot;#名言摘录&quot; class=&quot;headerlink&quot; title=&quot;名言摘录&quot;&gt;&lt;/a&gt;名
      
    
    </summary>
    
      <category term="读书" scheme="https://lywlefan.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="历史" scheme="https://lywlefan.github.io/tags/%E5%8E%86%E5%8F%B2/"/>
    
      <category term="传记" scheme="https://lywlefan.github.io/tags/%E4%BC%A0%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数化万物-大数据重点战略实验室</title>
    <link href="https://lywlefan.github.io/2019/05/18/%E8%AF%BB%E4%B9%A6/%E6%95%B0%E5%8C%96%E4%B8%87%E7%89%A9-%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8D%E7%82%B9%E6%88%98%E7%95%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4/"/>
    <id>https://lywlefan.github.io/2019/05/18/读书/数化万物-大数据重点战略实验室/</id>
    <published>2019-05-17T16:00:00.000Z</published>
    <updated>2019-05-21T11:00:17.108Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>数化万物，智在融合。</p></blockquote><h3 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h3><h4 id="专业名词"><a href="#专业名词" class="headerlink" title="专业名词"></a>专业名词</h4><ul><li><p>数据采集</p></li><li><p>数据存储</p></li><li><p>数据分析</p></li><li><p>数据流通</p></li><li><p>大数据交易</p></li><li><p>工业大数据</p></li><li><p>云密码</p></li><li><p>量子保密通信：利用量子力学基本原理和”一次一密”加密体制来实现信息安全传递的一种全新的保密通信方法。</p></li></ul><h4 id="新学到的"><a href="#新学到的" class="headerlink" title="新学到的"></a>新学到的</h4><ul><li>澎湃社</li></ul><h3 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h3><h4 id="数化万物，智在融合"><a href="#数化万物，智在融合" class="headerlink" title="数化万物，智在融合"></a>数化万物，智在融合</h4><h5 id="国家发展和改革委员会副主任林念提出中国发展数字产业化的重点"><a href="#国家发展和改革委员会副主任林念提出中国发展数字产业化的重点" class="headerlink" title="国家发展和改革委员会副主任林念提出中国发展数字产业化的重点"></a>国家发展和改革委员会副主任林念提出中国发展数字产业化的重点</h5><ul><li><p>一是增强数字技术的创新能力。</p></li><li><p>二是加速数字产业化和产业数字化。</p></li><li><p>三是着力推进“互联网+政务服务”</p></li><li><p>四是着力拓展数字经济的国际合作空间。</p></li><li><p>五是着力强化数字经济法治体系建设。</p></li></ul><h5 id="中国科学院院士-梅宏提出构建大数据体系关键点"><a href="#中国科学院院士-梅宏提出构建大数据体系关键点" class="headerlink" title="中国科学院院士-梅宏提出构建大数据体系关键点"></a>中国科学院院士-梅宏提出构建大数据体系关键点</h5><ul><li><p>一是数据资产地位的确立</p></li><li><p>二是建立数据的管理体制和机制</p></li><li><p>三是促进数据的共享和开放</p></li><li><p>四是保障数据安全与隐私保护</p></li></ul><h5 id="如何使人工智能变成人工智能产业？-张䥽（po）"><a href="#如何使人工智能变成人工智能产业？-张䥽（po）" class="headerlink" title="如何使人工智能变成人工智能产业？- 张䥽（po）"></a>如何使人工智能变成人工智能产业？- 张䥽（po）</h5><ul><li><p>数据</p></li><li><p>人工智能算法</p></li><li><p>计算机资源</p></li><li><p>应用场景</p></li></ul><p>&emsp;&emsp;有了大数据不一定能创造价值，因为我们面临诸多的挑战：一是数据质量问题，二是数据处理理论和方法，三是计算速度慢能耗大等问题。</p><h5 id="加拿大新经济学家唐·塔普斯科特"><a href="#加拿大新经济学家唐·塔普斯科特" class="headerlink" title="加拿大新经济学家唐·塔普斯科特"></a>加拿大新经济学家唐·塔普斯科特</h5><p>&emsp;&emsp;代表互联网的第二个发展阶段的区块链、分布式账本技术在保障数据与网络安全方面发挥着重要的作用。任何有价资产都可以通过区块链以安全、私密的方式进行交易，区块链技术是经济的操作系统，也是一个平台，可以革新企业和公司的模式。经济要实现从高速增长走向高质量发展，依靠的将是区块链技术。</p><h4 id="加快大数据创新应用，推动经济社会高质量发展（王晨）"><a href="#加快大数据创新应用，推动经济社会高质量发展（王晨）" class="headerlink" title="加快大数据创新应用，推动经济社会高质量发展（王晨）"></a>加快大数据创新应用，推动经济社会高质量发展（王晨）</h4><h5 id="2017年12月习近平总书记指出"><a href="#2017年12月习近平总书记指出" class="headerlink" title="2017年12月习近平总书记指出"></a>2017年12月习近平总书记指出</h5><p>&emsp;&emsp;大数据是信息化发展的新阶段。随着信息技术和人类生产生活交汇和融合，互联网快速普及，全球数据呈现爆发增长、海量集聚的特点，对经济发展、社会治理、国家管理、人民生活都产生了重大影响。</p><p>&emsp;&emsp;审时度势、精心谋划、超前布局、力争主动，深入了解大数据发展现状和趋势及其对经济社会发展的影响，加快完善数字基础设施，推进数据资源整合和开发共享，构建以数据为关键要素，以创新为主要引领和支撑的数字经济。</p><h5 id="大数据核心"><a href="#大数据核心" class="headerlink" title="大数据核心"></a>大数据核心</h5><p>&emsp;&emsp;用数据说话，用数据决策，用数据管理，用数据创新。</p><p>&emsp;&emsp;让百姓少跑腿，数据多跑路。</p><h4 id="谱写新时代大数据融合发展的新篇章-孙志刚"><a href="#谱写新时代大数据融合发展的新篇章-孙志刚" class="headerlink" title="谱写新时代大数据融合发展的新篇章-孙志刚"></a>谱写新时代大数据融合发展的新篇章-孙志刚</h4><p>&emsp;&emsp;数据连接万物、变革万物，融合基于智慧、创造智慧。融合是新时代大数据发展的最大特征和价值所在，为发展理念落地生根提供了无限可能，必将打开人们认识世界、改造世界的新大门，对社会生产方式、生活方式和社会治理模式都将产生重大而深远的影响。</p><p>&emsp;&emsp;大力开展“千企引进”、“千企改造”，“万企融合”。</p><p>&emsp;&emsp;我们在实践中深刻体会到：第一，融合是大势所趋，只有融合才能让数据释放价值，爆发力量，只有融合才能实现以信息化培育新动能、用新动能推动新发展；第二，融合并非高不可攀，融合是方向、是出路，各地区、各部门，各行业、各企业都可以在与大数据融合中找到转型升级的路径、拓展创新发展空间；第三，融合是共同追求，需要大家各施所长、各尽所能，关键在政府引领，基础在企业参与，重点在软件开发应用，导向在解决问题，目的在惠及人民；第四，融合是科技进步的主题，万物皆可数字化，数字化为融合发展创造了无限的机会，融合是展示智慧的空间，融合过程将催生无限的创新。</p><h4 id="加快培育壮大数字经济，以新动能推动新发展-林念修"><a href="#加快培育壮大数字经济，以新动能推动新发展-林念修" class="headerlink" title="加快培育壮大数字经济，以新动能推动新发展-林念修"></a>加快培育壮大数字经济，以新动能推动新发展-林念修</h4><h5 id="5个着力"><a href="#5个着力" class="headerlink" title="5个着力"></a>5个着力</h5><ul><li><p>着力增强数字技术创新能力。</p></li><li><p>着力加速数字产业化和产业数字化。</p></li><li><p>三是着力推进“互联网+政务服务”。</p></li><li><p>四是着力推展数字经济国际合作空间。</p></li><li><p>五是着力强化数字经济法治体系建设。</p></li></ul><h4 id="扎实推进大数据战略，促进大数据产业繁荣发展-陈肇雄"><a href="#扎实推进大数据战略，促进大数据产业繁荣发展-陈肇雄" class="headerlink" title="扎实推进大数据战略，促进大数据产业繁荣发展- 陈肇雄"></a>扎实推进大数据战略，促进大数据产业繁荣发展- 陈肇雄</h4><p>&emsp;&emsp;数据已经成为继土地、劳动力、资本、技术之后最活跃的关键生产要素。</p><p>&emsp;&emsp;构筑软件定义、平台支撑、数据驱动、智能引领的发展新形态。</p><h5 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h5><ul><li><p>突破核心技术，增强创新能力。</p></li><li><p>深化融合应用，助力提质增效。</p></li><li><p>加强数据治理，确保有序安全。</p></li><li><p>坚持开放发展，实现合作共赢。</p></li></ul><h4 id="新量子革命-潘建伟"><a href="#新量子革命-潘建伟" class="headerlink" title="新量子革命-潘建伟"></a>新量子革命-潘建伟</h4><p>&emsp;&emsp;从某种意义上说，正是因为量子科学才催生了现代信息技术发展，比如说原子弹研究过程中，催生了现代意义上的电子计算机。在物理学家把数据传往全世界各地的时候，发展了互联网的概念。通过用原子钟来检验相对论，最后发展成为目前GPS导航技术。</p><h5 id="随着技术的发展我们目前遇到两个问题"><a href="#随着技术的发展我们目前遇到两个问题" class="headerlink" title="随着技术的发展我们目前遇到两个问题"></a>随着技术的发展我们目前遇到两个问题</h5><ul><li><p>第一，数据以及互联网的安全性是非常重要的。</p></li><li><p>第二，随着大数据和人工智能的发展，我们对计算能力的需求日益增加。</p></li></ul><p>&emsp;&emsp;AlphaGo跟人类下一盘围棋所用的电是十吨煤。</p><p>&emsp;&emsp;我们目前发展计算能力的传统手段就是把计算机集成度提高，生产更好的软件。但是，目前摩尔定律（单位面积集成电路上可容纳的半导体晶体管数目每18个月就会增加一倍）已经面临终结，不到10年左右的时间，这个规律就会停止，会达到原子的尺寸。</p><h5 id="量子科技"><a href="#量子科技" class="headerlink" title="量子科技"></a>量子科技</h5><ul><li><p>经典比特</p></li><li><p>量子比特</p></li><li><p>量子纠缠</p></li><li><p>量子通讯加密</p></li><li><p>爱因斯坦：诡异的互动</p></li><li><p>光量子计算</p></li></ul><h4 id="为了一个更美好的AI时代-李彦宏"><a href="#为了一个更美好的AI时代-李彦宏" class="headerlink" title="为了一个更美好的AI时代-李彦宏"></a>为了一个更美好的AI时代-李彦宏</h4><h5 id="简单搜索app"><a href="#简单搜索app" class="headerlink" title="简单搜索app"></a>简单搜索app</h5><ul><li><p>人工智能</p></li><li><p>永远无广告</p></li></ul><h5 id="AI产品所遵循的原则"><a href="#AI产品所遵循的原则" class="headerlink" title="AI产品所遵循的原则"></a>AI产品所遵循的原则</h5><ul><li><p>第一，AI的最高原则是安全可靠</p></li><li><p>第二，不仅要大公司具备AI能力，小公司也要具备AI能力。</p></li><li><p>第三，AI做出来的东西不是简单模仿人，人喜欢什么就给他什么。</p></li><li><p>第四，劳动不再成为谋生的手段，而是变成人的一种需求。</p></li></ul><p>&emsp;&emsp;AI的使命不是替代人，而是让技术忠诚于人类，服务于人类，让人类生活过的更美好。</p><h4 id="让人工智能创造价值-张䥽（po）"><a href="#让人工智能创造价值-张䥽（po）" class="headerlink" title="让人工智能创造价值-张䥽（po）"></a>让人工智能创造价值-张䥽（po）</h4><h5 id="关键词-1"><a href="#关键词-1" class="headerlink" title="关键词"></a>关键词</h5><ul><li>北京深醒科技有限公司</li></ul><h5 id="把人工智能变为产业、创造价值，取决于四个因素"><a href="#把人工智能变为产业、创造价值，取决于四个因素" class="headerlink" title="把人工智能变为产业、创造价值，取决于四个因素"></a>把人工智能变为产业、创造价值，取决于四个因素</h5><ul><li>数据</li><li>人工智能算法</li><li>计算资源</li><li>应用场景</li></ul><p>&emsp;&emsp;计算机对付不了突发事件</p><h4 id="贯彻落实健康中国战略，释放“大数据-大健康”发展红利-王世杰"><a href="#贯彻落实健康中国战略，释放“大数据-大健康”发展红利-王世杰" class="headerlink" title="贯彻落实健康中国战略，释放“大数据+大健康”发展红利-王世杰"></a>贯彻落实健康中国战略，释放“大数据+大健康”发展红利-王世杰</h4><h5 id="关键词-2"><a href="#关键词-2" class="headerlink" title="关键词"></a>关键词</h5><ul><li><p>大扶贫</p></li><li><p>大数据</p></li><li><p>大生态</p></li><li><p>要做身体健康的民族</p></li><li><p>云上贵州</p></li></ul><h4 id="从数据时代走向数权时代-连玉明"><a href="#从数据时代走向数权时代-连玉明" class="headerlink" title="从数据时代走向数权时代- 连玉明"></a>从数据时代走向数权时代- 连玉明</h4><p>&emsp;&emsp;我们把调整数权权属、数权权利、数据利用和数据保护的法律制度称之为数权法。</p><h4 id="物联网发展面临的诸多挑战-尹浩"><a href="#物联网发展面临的诸多挑战-尹浩" class="headerlink" title="物联网发展面临的诸多挑战- 尹浩"></a>物联网发展面临的诸多挑战- 尹浩</h4><h5 id="物联网面临的挑战"><a href="#物联网面临的挑战" class="headerlink" title="物联网面临的挑战"></a>物联网面临的挑战</h5><ul><li><p>万物互联的实现</p></li><li><p>物联网信息安全</p></li><li><p>物联网从万物互联走向万物智连</p></li></ul><h6 id="物联网接入挑战"><a href="#物联网接入挑战" class="headerlink" title="物联网接入挑战"></a>物联网接入挑战</h6><ul><li><p>广域接入（如wifi）</p></li><li><p>海基</p></li><li><p>空基</p></li><li><p>天基</p></li></ul><p>&emsp;&emsp;国际上通过一个互联网标准，在低功率、广连接上做了大量的工作，，60%的数据大小是100K以下，这块是全球的部署。</p><h5 id="我国物联网在产业发展上面临很多深层次的瓶颈问题"><a href="#我国物联网在产业发展上面临很多深层次的瓶颈问题" class="headerlink" title="我国物联网在产业发展上面临很多深层次的瓶颈问题"></a>我国物联网在产业发展上面临很多深层次的瓶颈问题</h5><ul><li><p>产业竞争力不强，芯片、传感器、操作系统等核心基础能力依然薄弱，高端产品研发能力较为低下；</p></li><li><p>产业链的协同能力不强缺少上下游的资源，鼓励打造引领物联网产业发展的龙头企业；</p></li><li><p>三是标准体系问题，刚才说NBRT很好，是因为其形成了国际的标准；</p></li><li><p>四是物联网的发展有待进一步深化，要把智慧服务产业、网络信息产业、智能制造业，在“物联网+”时代和物联网进入智联网时代当中，以体制改革推动它们形成协同创新体系，让环成链。</p></li></ul><h5 id="四大融合"><a href="#四大融合" class="headerlink" title="四大融合"></a>四大融合</h5><ul><li><p>网络融合</p></li><li><p>数据融合</p></li><li><p>服务融合</p></li><li><p>与我们拥抱信息能力融合</p></li></ul><h4 id="赋能万物，连接未来-贺东东（树根互联技术有限公司）"><a href="#赋能万物，连接未来-贺东东（树根互联技术有限公司）" class="headerlink" title="赋能万物，连接未来-贺东东（树根互联技术有限公司）"></a>赋能万物，连接未来-贺东东（树根互联技术有限公司）</h4><h5 id="关键词-3"><a href="#关键词-3" class="headerlink" title="关键词"></a>关键词</h5><ul><li><p>三一重工工业互联网实践</p></li><li><p>工业互联网</p></li></ul><h5 id="工业互联网解决基本问题"><a href="#工业互联网解决基本问题" class="headerlink" title="工业互联网解决基本问题"></a>工业互联网解决基本问题</h5><ul><li>解决万物互联的问题</li></ul><h5 id="中国需要什么样的工业互联网平台"><a href="#中国需要什么样的工业互联网平台" class="headerlink" title="中国需要什么样的工业互联网平台"></a>中国需要什么样的工业互联网平台</h5><ul><li>要工业和互联网深度融合。</li></ul><p>&emsp;&emsp;工业互联网在美国是由通用电气公司做的，德国是由西门子公司做的，也就是说有工业背景的公司加上互联网就形成了一个工业互联网先驱领跑姿态。</p><ul><li><p>一定要适合本土的需求。</p></li><li><p>现在是“变道超车”的时代。</p></li><li><p>一定要创造价值。</p></li></ul><h4 id="基于可信计算的区块链安全-沈昌祥"><a href="#基于可信计算的区块链安全-沈昌祥" class="headerlink" title="基于可信计算的区块链安全-沈昌祥"></a>基于可信计算的区块链安全-沈昌祥</h4><h4 id="区块链在养老产品登记领域的应用-姚余栋"><a href="#区块链在养老产品登记领域的应用-姚余栋" class="headerlink" title="区块链在养老产品登记领域的应用-姚余栋"></a>区块链在养老产品登记领域的应用-姚余栋</h4><p>&emsp;&emsp;生于互联网，死于区块链。</p><h3 id="读书感悟"><a href="#读书感悟" class="headerlink" title="读书感悟"></a>读书感悟</h3><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;数化万物，智在融合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;关键词&quot;&gt;&lt;a href=&quot;#关键词&quot; class=&quot;headerlink&quot; title=&quot;关键词&quot;&gt;&lt;/a&gt;关键词&lt;/h3&gt;&lt;h4 id=&quot;专业名词&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="读书" scheme="https://lywlefan.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="科技" scheme="https://lywlefan.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
      <category term="大数据" scheme="https://lywlefan.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>idea常用快捷键总结</title>
    <link href="https://lywlefan.github.io/2019/05/17/%E5%B7%A5%E5%85%B7/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/idea%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/05/17/工具/开发工具/idea常用快捷键总结/</id>
    <published>2019-05-16T16:00:00.000Z</published>
    <updated>2019-05-17T10:46:54.560Z</updated>
    
    <content type="html"><![CDATA[<h3 id="必需会的快捷键"><a href="#必需会的快捷键" class="headerlink" title="必需会的快捷键"></a>必需会的快捷键</h3><ul><li>提出选中内容为局部变量:Ctrl+Alt+V</li><li>选中代码的情况下,包裹代码(try):Ctrl+alt+T</li><li>删除类中无用的import包:Ctrl + Alt + O</li><li>格式化代码:Ctrl+Alt+L</li></ul><h3 id="界面相关快捷键"><a href="#界面相关快捷键" class="headerlink" title="界面相关快捷键"></a>界面相关快捷键</h3><ul><li>快速切换方案:Ctrl+~</li><li>展开/折叠项目侧边栏:Alt+1</li><li>打开设置界面:Ctrl + Alt + S</li><li>扩展成一个窗口：shift+ctrl+f12</li></ul><h3 id="代码提示相关快捷键"><a href="#代码提示相关快捷键" class="headerlink" title="代码提示相关快捷键"></a>代码提示相关快捷键</h3><ul><li>代码提示:Ctrl+空格</li><li>代码插入:Alt+enter</li></ul><h3 id="光标控制相关快捷键"><a href="#光标控制相关快捷键" class="headerlink" title="光标控制相关快捷键"></a>光标控制相关快捷键</h3><ul><li>光标定位到上个浏览处:Ctrl(shift)+alt+left</li><li>光标定位到下一个浏览出:Ctrl(shift)+Alt+right</li><li>光标移动到下一个方法开始处:alt+down</li><li>光标移动到上一个方法开始处:alt+up</li><li>光标移动到前一个单词处:Ctrl+left</li><li>光标移动到后一个单词处:Ctrl+right</li><li>光标在代码块之间移动:Ctrl+[/]</li><li>快速定位到下一个错误和警告处:F2(加Shift键，定位到上一个错误处)</li><li>光标跳出括号(单引号等其他的类似):shift+相应符号</li></ul><h3 id="选中相关的快捷键"><a href="#选中相关的快捷键" class="headerlink" title="选中相关的快捷键"></a>选中相关的快捷键</h3><ul><li>连续选中文件中相同的内容:Alt+j</li><li>按语法选中代码:Ctrl+W (连续按会有其他效果，加Shift键，产生反向选中效果)</li></ul><h3 id="新建相关快捷键"><a href="#新建相关快捷键" class="headerlink" title="新建相关快捷键"></a>新建相关快捷键</h3><ul><li>新建类文件:Alt+insert(光标放到文件夹)</li></ul><h3 id="文件切换"><a href="#文件切换" class="headerlink" title="文件切换"></a>文件切换</h3><ul><li>查看最近打开的文件:Ctrl+E</li><li>切换最近文件:Ctrl+Tab</li><li>编辑窗口的切换:Alt+left/right</li></ul><h3 id="查找相关快捷键"><a href="#查找相关快捷键" class="headerlink" title="查找相关快捷键"></a>查找相关快捷键</h3><ul><li>当前文件查找:Ctrl+F</li><li>当前文件替换:Ctrl+R</li><li>当前项目查找:Ctrl+shift+F</li><li>当前项目替换:Ctrl+Shift+R</li><li>查找文件:Ctrl+shift+N</li><li>查找类文件:ctrl+shift+alt+n</li><li>全局查找:shift+shift</li></ul><h3 id="删除和插入相关快捷键"><a href="#删除和插入相关快捷键" class="headerlink" title="删除和插入相关快捷键"></a>删除和插入相关快捷键</h3><ul><li>删除当前行:Ctrl+Y</li><li>按单个单词删除:Ctrl+Backspace</li><li>复制光标所在的行:Ctrl+D</li><li>向下插入一行:shift+enter</li><li>向上插入一行:alt+shift+enter</li><li>当前行向上移动:ctrl+shift+up/down</li></ul><h3 id="大小写转换快捷键"><a href="#大小写转换快捷键" class="headerlink" title="大小写转换快捷键"></a>大小写转换快捷键</h3><ul><li>大小写转换快捷键:Ctrl+shift+U</li></ul><h3 id="版本控制相关的快捷键"><a href="#版本控制相关的快捷键" class="headerlink" title="版本控制相关的快捷键"></a>版本控制相关的快捷键</h3><ul><li><p>提交到本地仓库备注的快捷键:Ctrl+k</p></li><li><p>提交到本地仓库:Ctrl+Alt+K</p></li><li><p>push的快捷键:Ctrl+shift+K（窗口处理的时候ctrl+enter可以快速提交）</p></li><li><p>pull的快捷键:Ctrl+T   </p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;必需会的快捷键&quot;&gt;&lt;a href=&quot;#必需会的快捷键&quot; class=&quot;headerlink&quot; title=&quot;必需会的快捷键&quot;&gt;&lt;/a&gt;必需会的快捷键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;提出选中内容为局部变量:Ctrl+Alt+V&lt;/li&gt;
&lt;li&gt;选中代码的情况下,包裹代
      
    
    </summary>
    
      <category term="开发工具" scheme="https://lywlefan.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="idea" scheme="https://lywlefan.github.io/tags/idea/"/>
    
      <category term="快捷键" scheme="https://lywlefan.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>JAR包如何取工程外部文件</title>
    <link href="https://lywlefan.github.io/2019/05/15/spring/spring-base/JAR%E5%8C%85%E5%A6%82%E4%BD%95%E5%8F%96%E5%B7%A5%E7%A8%8B%E5%A4%96%E9%83%A8%E6%96%87%E4%BB%B6/"/>
    <id>https://lywlefan.github.io/2019/05/15/spring/spring-base/JAR包如何取工程外部文件/</id>
    <published>2019-05-14T16:00:00.000Z</published>
    <updated>2019-05-15T06:29:45.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题起源"><a href="#问题起源" class="headerlink" title="问题起源"></a>问题起源</h3><p>&emsp;&emsp;在开发支付stater的过程中会用到证书，而证书我们一般配置在工程项目中，那么我们自己开发的stater如何才能取到工程项目中的证书文件那？？？</p><h3 id="问题深究"><a href="#问题深究" class="headerlink" title="问题深究"></a>问题深究</h3><h4 id="分解问题"><a href="#分解问题" class="headerlink" title="分解问题"></a>分解问题</h4><p>&emsp;&emsp;要想解决这个问题，我们要明确</p><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题起源&quot;&gt;&lt;a href=&quot;#问题起源&quot; class=&quot;headerlink&quot; title=&quot;问题起源&quot;&gt;&lt;/a&gt;问题起源&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在开发支付stater的过程中会用到证书，而证书我们一般配置在工程项目中，那么我们自己开发的stat
      
    
    </summary>
    
      <category term="spring" scheme="https://lywlefan.github.io/categories/spring/"/>
    
    
      <category term="spring" scheme="https://lywlefan.github.io/tags/spring/"/>
    
      <category term="疑难杂症" scheme="https://lywlefan.github.io/tags/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
  </entry>
  
  <entry>
    <title>RestTemplate常见问题的解决办法.md</title>
    <link href="https://lywlefan.github.io/2019/05/15/spring/spring-base/RestTemplate%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://lywlefan.github.io/2019/05/15/spring/spring-base/RestTemplate常见问题的解决办法/</id>
    <published>2019-05-14T16:00:00.000Z</published>
    <updated>2019-05-15T10:38:01.006Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h3><ul><li><p>用restTemplate请求域名或着ip一直报No instances available的错</p></li><li><p>restTemplate的post请求报415错</p></li></ul><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><h4 id="用restTemplate请求域名或着ip一直报No-instances-available的错"><a href="#用restTemplate请求域名或着ip一直报No-instances-available的错" class="headerlink" title="用restTemplate请求域名或着ip一直报No instances available的错"></a>用restTemplate请求域名或着ip一直报No instances available的错</h4><ul><li>错误描述</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalStateException: No instances available <span class="keyword">for</span> www.baidu.com</span><br><span class="line">at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.execute(RibbonLoadBalancerClient.java:<span class="number">79</span>) ~[spring-cloud-netflix-core-<span class="number">1.1</span>.0.RELEASE.jar:<span class="number">1.1</span>.0.RELEASE] at org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor.intercept(LoadBalancerInterceptor.java:<span class="number">46</span>) ~[spring-cloud-commons-<span class="number">1.1</span>.0.RELEASE.jar:<span class="number">1.1</span>.0.RELEASE] at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:<span class="number">86</span>) ~[spring-web-<span class="number">4.3</span>.10.RELEASE.jar:<span class="number">4.3</span>.10.RELEASE] at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:<span class="number">70</span>) ~[spring-web-<span class="number">4.3</span>.10.RELEASE.jar:<span class="number">4.3</span>.10.RELEASE] at </span><br><span class="line">.....</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;查看错误的跟踪链发现,自动注入的restTemplate中加入了cloud.netflix*包下面的interceptor,</p><p>&emsp;&emsp;所以默认会通过RibbonLoadBalancerClient去查找注册中心的instances,</p><p>&emsp;&emsp;如上面的代码，<a href="http://www.baidu.com肯定不存在，所以就报错了。" target="_blank" rel="noopener">www.baidu.com肯定不存在，所以就报错了。</a></p><ul><li>错误解决</li></ul><p>&emsp;&emsp;重新实例化一个RestTemplate。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">RestTemplate <span class="title">loadBalanced</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="restTemplate的post请求报415错"><a href="#restTemplate的post请求报415错" class="headerlink" title="restTemplate的post请求报415错"></a>restTemplate的post请求报415错</h5><ul><li>错误描述</li></ul><p>&emsp;&emsp;报错415</p><ul><li>问具体解决</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">MediaType type = MediaType.parseMediaType(<span class="string">"application/json;"</span>);</span><br><span class="line">headers.setContentType(type);</span><br><span class="line">headers.add(<span class="string">"Accept"</span>, MediaType.APPLICATION_JSON.toString());</span><br><span class="line">JSONObject jsonObj = JSON.parseObject(JSON.toJSONString(payParams));</span><br><span class="line">HttpEntity&lt;String&gt; formEntity = <span class="keyword">new</span> HttpEntity&lt;String&gt;(jsonObj.toString(), headers);</span><br><span class="line">restTemplate.postForObject(bestPayProperties.getBestPayUrl(),formEntity,String.class);</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题汇总&quot;&gt;&lt;a href=&quot;#问题汇总&quot; class=&quot;headerlink&quot; title=&quot;问题汇总&quot;&gt;&lt;/a&gt;问题汇总&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用restTemplate请求域名或着ip一直报No instances available的错&lt;/p&gt;

      
    
    </summary>
    
      <category term="spring" scheme="https://lywlefan.github.io/categories/spring/"/>
    
    
      <category term="spring" scheme="https://lywlefan.github.io/tags/spring/"/>
    
      <category term="RestTemplate" scheme="https://lywlefan.github.io/tags/RestTemplate/"/>
    
  </entry>
  
  <entry>
    <title>不用spring如何实例化一个bean</title>
    <link href="https://lywlefan.github.io/2019/05/14/spring/spring-base/%E4%B8%8D%E7%94%A8spring%E5%A6%82%E4%BD%95%E5%AE%9E%E4%BE%8B%E5%8C%96%E4%B8%80%E4%B8%AAbean/"/>
    <id>https://lywlefan.github.io/2019/05/14/spring/spring-base/不用spring如何实例化一个bean/</id>
    <published>2019-05-13T16:00:00.000Z</published>
    <updated>2019-05-14T05:39:45.284Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题源起"><a href="#问题源起" class="headerlink" title="问题源起"></a>问题源起</h3><p>&emsp;&emsp;为什么写这么一篇文章那？主要还是源自最近在写支付的starter的过程中遇到的一个问题，我们知道在支付的过程中需要去配置一些相关的参数，因为是starter我们一般是通过配置文件的方式进行配置，引用我们stater的工程会通过yml文件中配置的属性把这些值给我们。</p><p>&emsp;&emsp;那么我想在stater里面取到这些值该如何去做那？？我直接new一个配置类对象但是却取不到，因此我们就在思考spring到底是如何实例化bean的？？他对bean做了什么？？如果不用spring的注解我们又该如何去实例化我们的bean那？带着这些问题我开始了我的解惑之旅。。。</p><h3 id="问题深究"><a href="#问题深究" class="headerlink" title="问题深究"></a>问题深究</h3><h4 id="提出问题，分解问题"><a href="#提出问题，分解问题" class="headerlink" title="提出问题，分解问题"></a>提出问题，分解问题</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/v1/app/"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppController</span> <span class="keyword">extends</span> <span class="title">BaseController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AppBannerService appBannerService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"index"</span>, method = RequestMethod.POST)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">index</span><span class="params">(HttpServletRequest request,@RequestBody @Valid AppBannerAreaCode appBannerAreaCode)</span> </span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; appMessage=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        String appId=CommonUtils.getAppIdFromHeader(request);</span><br><span class="line">        List&lt;AppBanner&gt; banners=appBannerService.getBannersByAppIdAndCode(appId,appBannerAreaCode.getProvinceCode());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(banners);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面的controller是我用日常开发常用的，AppBannerService是我们定义的业务接口，接口有实现类，我们只需要简单的注解就可以直接调用接口的方法了。</p><h5 id="spring如何实例化bean？？"><a href="#spring如何实例化bean？？" class="headerlink" title="spring如何实例化bean？？"></a>spring如何实例化bean？？</h5><ul><li><p>spring实例化方式有那些？？</p></li><li><p>容器是如何实例化的？？</p></li></ul><h5 id="我们假如不用这个注解如何去调这个接口那？？"><a href="#我们假如不用这个注解如何去调这个接口那？？" class="headerlink" title="我们假如不用这个注解如何去调这个接口那？？"></a>我们假如不用这个注解如何去调这个接口那？？</h5><p>&emsp;&emsp;接下来我们就围绕以上两个问题进行展开。</p><h4 id="解决各个问题"><a href="#解决各个问题" class="headerlink" title="解决各个问题"></a>解决各个问题</h4><h5 id="spring实例化方式有那些？？"><a href="#spring实例化方式有那些？？" class="headerlink" title="spring实例化方式有那些？？"></a>spring实例化方式有那些？？</h5><p>&emsp;&emsp;软件开发到最后的最高境界就是制定标准，然后严格安装标准去开发和迭代。我个人认为spring也是如此，spring给自己定义了标准的四种实例化方式，我们在日常开发中就可以通过这四种实例化方式进行实例化，下面让我们一起细究一下这四种实例化方式：</p><h6 id="setter方法实例化"><a href="#setter方法实例化" class="headerlink" title="setter方法实例化"></a>setter方法实例化</h6><ul><li>主类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line">                <span class="function"><span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>;</span><br><span class="line">                <span class="function"><span class="keyword">void</span> <span class="title">delUser</span><span class="params">()</span></span>;</span><br><span class="line">                <span class="function"><span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span></span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"addUser方法被调用了"</span>);</span><br><span class="line">                &#125;        </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"delUser方法被调用了"</span>);</span><br><span class="line">                &#125;        </span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"updateUser方法被调用了"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">private</span> IUserDao dao; <span class="comment">//dao是一个依赖对象,要由springg进行管理,要生成 get set 方法</span></span><br><span class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>&#123;</span><br><span class="line">                            dao.addUser();</span><br><span class="line">                            dao.updateUser();</span><br><span class="line">                            dao.delUser();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//配置文件</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userAction_name"</span> <span class="attr">class</span>=<span class="string">"cat.action.UserAction"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dao"</span> <span class="attr">ref</span>=<span class="string">"userDao_name"</span> /&gt;</span>  //引用的是下面的名称</span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userDao_name"</span> <span class="attr">class</span>=<span class="string">"cat.dao.UserDaoImpl"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//测试</span></span><br><span class="line">ClassPathXmlApplicationContext ctx=<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">UserAction action=(UserAction)ctx.getBean(<span class="string">"userAction_name"</span>);</span><br><span class="line">action.execute();</span><br></pre></td></tr></table></figure><h6 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h6><ul><li>主类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> </span>&#123;</span><br><span class="line">       <span class="comment">//public UserAction()&#123;&#125; 可以保保留一个无参的构造函数</span></span><br><span class="line">                </span><br><span class="line">       <span class="comment">//这是几个依赖对象,不用生成get set方法了</span></span><br><span class="line">       <span class="keyword">private</span> UserInfo user;</span><br><span class="line">       <span class="keyword">private</span> String school;</span><br><span class="line">       <span class="keyword">private</span> IUserDao dao;     </span><br><span class="line">            </span><br><span class="line">       <span class="comment">//希望Spring 由构造函数注入依赖对象</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">UserAction</span><span class="params">(IUserDao dao,UserInfo user,String school)</span></span>&#123;</span><br><span class="line">              <span class="keyword">this</span>.dao=dao;</span><br><span class="line">              <span class="keyword">this</span>.school=school;</span><br><span class="line">              <span class="keyword">this</span>.user=user;</span><br><span class="line">              &#125;</span><br><span class="line">                </span><br><span class="line">            </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>&#123;</span><br><span class="line">              dao.addUser();</span><br><span class="line">              dao.updateUser();</span><br><span class="line">              dao.delUser();</span><br><span class="line">                    </span><br><span class="line">              System.out.println(user);</span><br><span class="line">              System.out.println(school);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//配置文件</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userInfo_name"</span> <span class="attr">class</span>=<span class="string">"cat.beans.UserInfo"</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span> <span class="attr">value</span>=<span class="string">"周周"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"note"</span> <span class="attr">value</span>=<span class="string">"这是备注"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                    </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userAction_name"</span> <span class="attr">class</span>=<span class="string">"cat.action.UserAction"</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"userDao_name"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"userInfo_name"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">"哈尔滨师范大学"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">/*</span><br><span class="line">也可以指定 索引和 type 属性 , 索引和type 都可以不指定</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userAction_name"</span> <span class="attr">class</span>=<span class="string">"cat.action.UserAction"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">ref</span>=<span class="string">"userDao_name"</span> <span class="attr">type</span>=<span class="string">"cat.dao.IUserDao"</span> /&gt;</span>  如果是接口,就不能指定是实现类的类型</span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"1"</span> <span class="attr">ref</span>=<span class="string">"userInfo_name"</span> <span class="attr">type</span>=<span class="string">"cat.beans.UserInfo"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"2"</span> <span class="attr">value</span>=<span class="string">"哈尔滨师范大学"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">*/</span><br><span class="line">                </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userDao_name"</span> <span class="attr">class</span>=<span class="string">"cat.dao.UserDaoImpl"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试</span></span><br><span class="line">ClassPathXmlApplicationContext ctx=<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">UserAction action=(UserAction)ctx.getBean(<span class="string">"userAction_name"</span>);</span><br><span class="line">action.execute();</span><br></pre></td></tr></table></figure><h6 id="静态工厂方式"><a href="#静态工厂方式" class="headerlink" title="静态工厂方式"></a>静态工厂方式</h6><ul><li>主类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂,用来生成dao的实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoFactory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IUserDao <span class="title">createUserDaoInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> UserDaoOracleImpl();</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">           </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> </span>&#123;</span><br><span class="line">       <span class="keyword">private</span> IUserDao dao;<span class="comment">//使用工厂方式注值,也要生成set方法</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>&#123;</span><br><span class="line">              dao.addUser();</span><br><span class="line">              dao.updateUser();</span><br><span class="line">              dao.delUser();</span><br><span class="line">&#125;</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDao</span><span class="params">(IUserDao dao)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.dao = dao;</span><br><span class="line">&#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//配置文件 </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userAction_name"</span> <span class="attr">class</span>=<span class="string">"cat.action.UserAction"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dao"</span>  <span class="attr">ref</span>=<span class="string">"userDao_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">              </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userDao_name"</span> <span class="attr">class</span>=<span class="string">"cat.dao.UserDaoFactory"</span> <span class="attr">factory-method</span>=<span class="string">"createUserDaoInstance"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试</span></span><br><span class="line">ClassPathXmlApplicationContext ctx=<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">UserAction action=(UserAction)ctx.getBean(<span class="string">"userAction_name"</span>);</span><br><span class="line">action.execute();</span><br></pre></td></tr></table></figure><h6 id="实例工厂"><a href="#实例工厂" class="headerlink" title="实例工厂"></a>实例工厂</h6><ul><li>主类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂 =&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoFactory</span> </span>&#123;</span><br><span class="line"><span class="comment">//这个方法不是静态的</span></span><br><span class="line"><span class="function"><span class="keyword">public</span>  IUserDao <span class="title">createUserDaoInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserDaoOracleImpl();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//配置文件 </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userAction_name"</span> <span class="attr">class</span>=<span class="string">"cat.action.UserAction"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dao"</span>  <span class="attr">ref</span>=<span class="string">"userDao_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">              </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span>  <span class="attr">name</span>=<span class="string">"userDaoFactory_name"</span> <span class="attr">class</span>=<span class="string">"cat.dao.UserDaoFactory"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"userDao_name"</span> <span class="attr">factory-bean</span>=<span class="string">"userDaoFactory_name"</span> <span class="attr">factory-method</span>=<span class="string">"createUserDaoInstance"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题源起&quot;&gt;&lt;a href=&quot;#问题源起&quot; class=&quot;headerlink&quot; title=&quot;问题源起&quot;&gt;&lt;/a&gt;问题源起&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;为什么写这么一篇文章那？主要还是源自最近在写支付的starter的过程中遇到的一个问题，我们知道在支
      
    
    </summary>
    
      <category term="spring" scheme="https://lywlefan.github.io/categories/spring/"/>
    
    
      <category term="spring" scheme="https://lywlefan.github.io/tags/spring/"/>
    
      <category term="spring-base" scheme="https://lywlefan.github.io/tags/spring-base/"/>
    
  </entry>
  
  <entry>
    <title>如何写一个stater</title>
    <link href="https://lywlefan.github.io/2019/05/13/spring/spring-boot/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AAstater/"/>
    <id>https://lywlefan.github.io/2019/05/13/spring/spring-boot/如何写一个stater/</id>
    <published>2019-05-12T16:00:00.000Z</published>
    <updated>2019-05-13T10:38:00.905Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目标刻在岩石上，方法写在沙滩上.</p></blockquote><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><p>&emsp;&emsp;不要使用spring-boot开头的，以避免将来spring-boot官方使用你的starter而重名。</p><ul><li><p>正例：xxxx-spring-boot-starter</p></li><li><p>反例：spring-boot-starter-xxxx</p></li></ul><h3 id="定功能"><a href="#定功能" class="headerlink" title="定功能"></a>定功能</h3><p>&emsp;&emsp;你所定义的starter需要有自己的独特功能，比如spring-boot-starter-web 提供的springmvc相关的自动装配，内嵌tomcat以及相关依赖，那们你自己定义的starter也是需要界定好自己的功能。举个列子，比如要写一个支付的stater：</p><ul><li>支付</li><li>支付通知</li><li>支付查询</li><li>退款</li><li>退款查询</li><li>退款通知</li></ul><h3 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h3><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;目标刻在岩石上，方法写在沙滩上.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;命名规范&quot;&gt;&lt;a href=&quot;#命名规范&quot; class=&quot;headerlink&quot; title=&quot;命名规范&quot;&gt;&lt;/a&gt;命名规范&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp
      
    
    </summary>
    
      <category term="spring" scheme="https://lywlefan.github.io/categories/spring/"/>
    
    
      <category term="spring" scheme="https://lywlefan.github.io/tags/spring/"/>
    
      <category term="spring-boot" scheme="https://lywlefan.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>spring的核心jar</title>
    <link href="https://lywlefan.github.io/2018/05/30/spring/spring%E7%9A%84%E6%A0%B8%E5%BF%83jar/"/>
    <id>https://lywlefan.github.io/2018/05/30/spring/spring的核心jar/</id>
    <published>2018-05-29T16:00:00.000Z</published>
    <updated>2019-05-13T05:51:20.837Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>&emsp;&emsp;实践一门技术的最好方式就是深入理解它的思想，然后造一个出来！</p></blockquote><ul><li>Spring AOP：Spring的面向切面编程，提供AOP（面向切面编程）的实现</li><li>Spring Aspects：Spring提供的对AspectJ框架的整合</li><li>Spring Beans：Spring IOC的基础实现，包含访问配置文件、创建和管理bean等。</li><li>Spring Context：在基础IOC功能上提供扩展服务，此外还提供许多企业级服务的支持，有邮件服务、任务调度、JNDI定位，EJB集成、远程访问、缓存以及多种视图层框架的支持。</li><li>Spring Context Support：Spring context的扩展支持，用于MVC方面。</li><li>Spring Core：Spring的核心工具包</li><li>Spring expression：Spring表达式语言</li><li>Spring Framework Bom：</li><li>Spring Instrument：Spring对服务器的代理接口</li><li>Spring Instrument Tomcat：Spring对tomcat连接池的集成</li><li>Spring JDBC：对JDBC 的简单封装</li><li>Spring JMS：为简化jms api的使用而做的简单封装</li><li>Spring Messaging：</li><li>Spring orm：整合第三方的orm实现，如hibernate，ibatis，jdo以及spring 的jpa实现</li><li>Spring oxm：Spring对于object/xml映射的支持，可以让JAVA与XML之间来回切换</li><li>Spring test：对JUNIT等测试框架的简单封装</li><li>Spring tx：为JDBC、Hibernate、JDO、JPA等提供的一致的声明式和编程式事务管理。</li><li>Spring web：包含Web应用开发时，用到Spring框架时所需的核心类，包括自动载入WebApplicationContext特性的类、Struts与JSF集成类、文件上传的支持类、Filter类和大量工具辅助类。</li><li>Spring webmvc：包含SpringMVC框架相关的所有类。包含国际化、标签、Theme、视图展现的FreeMarker、JasperReports、Tiles、Velocity、XSLT相关类。当然，如果你的应用使用了独立的MVC框架，则无需这个JAR文件里的任何类。</li><li>Spring webmvc portlet：Spring MVC的增强</li></ul><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a>﻿<br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a>﻿﻿</p></blockquote><p>—﻿</p><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong>﻿</p><p><img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt>﻿﻿</p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;实践一门技术的最好方式就是深入理解它的思想，然后造一个出来！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Spring AOP：Spring的面向切面编程，提供AOP（面向切面编程）的实现&lt;/li&gt;
&lt;li&gt;Spr
      
    
    </summary>
    
      <category term="spring" scheme="https://lywlefan.github.io/categories/spring/"/>
    
    
      <category term="spring源码" scheme="https://lywlefan.github.io/tags/spring%E6%BA%90%E7%A0%81/"/>
    
      <category term="总汇" scheme="https://lywlefan.github.io/tags/%E6%80%BB%E6%B1%87/"/>
    
  </entry>
  
  <entry>
    <title>我的网址收藏夹</title>
    <link href="https://lywlefan.github.io/2012/01/01/%E7%BD%91%E5%9D%80%E6%94%B6%E8%97%8F/"/>
    <id>https://lywlefan.github.io/2012/01/01/网址收藏/</id>
    <published>2011-12-31T16:00:00.000Z</published>
    <updated>2019-05-21T09:55:07.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目标刻在岩石上，方法写在沙滩上.</p></blockquote><h2 id="1-技术栈"><a href="#1-技术栈" class="headerlink" title="1.技术栈"></a>1.技术栈</h2><h3 id="1-1-WEB开发"><a href="#1-1-WEB开发" class="headerlink" title="1.1.WEB开发"></a>1.1.WEB开发</h3><h4 id="1-1-1-前端"><a href="#1-1-1-前端" class="headerlink" title="1.1.1.前端"></a>1.1.1.前端</h4><h4 id="1-1-2-后端"><a href="#1-1-2-后端" class="headerlink" title="1.1.2.后端"></a>1.1.2.后端</h4><ul><li><a href="http://blog.didispace.com/" target="_blank" rel="noopener">程序员DD</a></li><li><a href="http://itmuch.com/" target="_blank" rel="noopener">周立|Spring Cloud</a></li><li><a href="http://www.bysocket.com/" target="_blank" rel="noopener">泥瓦匠BYSocket的博客</a></li><li><a href="http://kailing.pub/" target="_blank" rel="noopener">KL博客</a></li><li><a href="http://edisonxu.org/" target="_blank" rel="noopener">Edison Xu’s Blog</a></li><li><a href="http://blog.720ui.com/" target="_blank" rel="noopener">梁桂钊的博客</a></li><li><a href="http://www.icnws.com/" target="_blank" rel="noopener">城南往事</a></li><li><a href="http://www.ictgu.cn/" target="_blank" rel="noopener">Any-Video</a></li><li><a href="http://blog.54im.com/" target="_blank" rel="noopener">钿畑的博客</a></li><li><a href="http://cmsblogs.com/" target="_blank" rel="noopener">chenssy</a></li><li><a href="https://www.cnkirito.moe/" target="_blank" rel="noopener">徐靖峰|个人博客</a></li><li><a href="http://cxytiandi.com/" target="_blank" rel="noopener">猿天地</a></li><li><a href="https://crossoverjie.top/" target="_blank" rel="noopener">crossoverjie</a></li><li><a href="http://www.iocoder.cn/" target="_blank" rel="noopener">芋道源码</a></li><li><a href="https://purewhite.io/" target="_blank" rel="noopener">Pure White</a></li></ul><h4 id="1-1-3-项目管理"><a href="#1-1-3-项目管理" class="headerlink" title="1.1.3.项目管理"></a>1.1.3.项目管理</h4><ul><li><a href="https://www.cnblogs.com/wayfarer/" target="_blank" rel="noopener">张逸的博客(ThoughtWorks架构师)</a></li></ul><h3 id="1-2-高级技术"><a href="#1-2-高级技术" class="headerlink" title="1.2.高级技术"></a>1.2.高级技术</h3><h4 id="1-2-1-深度学习"><a href="#1-2-1-深度学习" class="headerlink" title="1.2.1.深度学习"></a>1.2.1.深度学习</h4><ul><li><a href="https://nndl.github.io/" target="_blank" rel="noopener">神经网络与深度学习·邱锡鹏</a></li></ul><h2 id="2-运营"><a href="#2-运营" class="headerlink" title="2.运营"></a>2.运营</h2><h2 id="3-管理"><a href="#3-管理" class="headerlink" title="3.管理"></a>3.管理</h2><h2 id="4-日常浏览"><a href="#4-日常浏览" class="headerlink" title="4.日常浏览"></a>4.日常浏览</h2><h3 id="4-1-新闻咨询"><a href="#4-1-新闻咨询" class="headerlink" title="4.1.新闻咨询"></a>4.1.新闻咨询</h3><h4 id="4-1-1-本地新闻咨询"><a href="#4-1-1-本地新闻咨询" class="headerlink" title="4.1.1.本地新闻咨询"></a>4.1.1.本地新闻咨询</h4><ul><li><p><a href="http://www.hsw.cn/" target="_blank" rel="noopener">华商网</a></p></li><li><p><a href="http://epaper.xiancn.com/" target="_blank" rel="noopener">西安晚报</a></p></li><li><p><a href="http://epaper.sanqin.com/html/2019-05/21/node_1.htm?v=1" target="_blank" rel="noopener">三秦都市晚报</a></p></li></ul><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;目标刻在岩石上，方法写在沙滩上.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-技术栈&quot;&gt;&lt;a href=&quot;#1-技术栈&quot; class=&quot;headerlink&quot; title=&quot;1.技术栈&quot;&gt;&lt;/a&gt;1.技术栈&lt;/h2&gt;&lt;h3 id=&quot;1-
      
    
    </summary>
    
      <category term="收藏夹" scheme="https://lywlefan.github.io/categories/%E6%94%B6%E8%97%8F%E5%A4%B9/"/>
    
    
      <category term="收藏" scheme="https://lywlefan.github.io/tags/%E6%94%B6%E8%97%8F/"/>
    
      <category term="网址" scheme="https://lywlefan.github.io/tags/%E7%BD%91%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>如何快速寻找到一个问题的答案</title>
    <link href="https://lywlefan.github.io/2012/01/01/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%AF%BB%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/"/>
    <id>https://lywlefan.github.io/2012/01/01/如何快速寻找到一个问题的答案/</id>
    <published>2011-12-31T16:00:00.000Z</published>
    <updated>2019-05-14T09:57:54.504Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目标刻在岩石上，方法写在沙滩上。</p></blockquote><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;目标刻在岩石上，方法写在沙滩上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/u/354cc1548a33&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="收藏夹" scheme="https://lywlefan.github.io/categories/%E6%94%B6%E8%97%8F%E5%A4%B9/"/>
    
    
      <category term="收藏" scheme="https://lywlefan.github.io/tags/%E6%94%B6%E8%97%8F/"/>
    
      <category term="文章" scheme="https://lywlefan.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>我的文章收藏夹</title>
    <link href="https://lywlefan.github.io/2012/01/01/%E6%96%87%E7%AB%A0%E6%94%B6%E8%97%8F/"/>
    <id>https://lywlefan.github.io/2012/01/01/文章收藏/</id>
    <published>2011-12-31T16:00:00.000Z</published>
    <updated>2019-05-17T02:32:24.178Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>好记性不如烂笔头!</p></blockquote><h2 id="1-技术栈"><a href="#1-技术栈" class="headerlink" title="1.技术栈"></a>1.技术栈</h2><h3 id="WEB开发"><a href="#WEB开发" class="headerlink" title="WEB开发"></a>WEB开发</h3><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><h5 id="java"><a href="#java" class="headerlink" title="java"></a>java</h5><ul><li><p>基础</p></li><li><p>springboot</p><ul><li><p>监控</p><ul><li><a href="https://grafana.com" target="_blank" rel="noopener">grafana</a></li></ul></li></ul></li></ul><h5 id="python"><a href="#python" class="headerlink" title="python"></a>python</h5><ul><li><p>基础</p><ul><li><a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="noopener">Python - 100天从新手到大师·骆昊</a></li></ul></li></ul><h3 id="1-2-高级技术"><a href="#1-2-高级技术" class="headerlink" title="1.2.高级技术"></a>1.2.高级技术</h3><h4 id="1-2-1-深度学习"><a href="#1-2-1-深度学习" class="headerlink" title="1.2.1.深度学习"></a>1.2.1.深度学习</h4><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;好记性不如烂笔头!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-技术栈&quot;&gt;&lt;a href=&quot;#1-技术栈&quot; class=&quot;headerlink&quot; title=&quot;1.技术栈&quot;&gt;&lt;/a&gt;1.技术栈&lt;/h2&gt;&lt;h3 id=&quot;WEB开发&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="收藏夹" scheme="https://lywlefan.github.io/categories/%E6%94%B6%E8%97%8F%E5%A4%B9/"/>
    
    
      <category term="收藏" scheme="https://lywlefan.github.io/tags/%E6%94%B6%E8%97%8F/"/>
    
      <category term="文章" scheme="https://lywlefan.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
</feed>
