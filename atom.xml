<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>share猿</title>
  
  <subtitle>https://lywlefan.github.io/</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lywlefan.github.io/"/>
  <updated>2020-03-26T08:27:26.922Z</updated>
  <id>https://lywlefan.github.io/</id>
  
  <author>
    <name>share猿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vmware的安装</title>
    <link href="https://lywlefan.github.io/2020/03/25/%E5%90%8E%E7%AB%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E9%9B%86%E7%BE%A4/VMware%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    <id>https://lywlefan.github.io/2020/03/25/后端/大数据/集群/VMware的系统安装/</id>
    <published>2020-03-24T16:00:00.000Z</published>
    <updated>2020-03-26T08:27:26.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VMware的下载"><a href="#VMware的下载" class="headerlink" title="VMware的下载"></a>VMware的下载</h2><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="虚拟机创建"><a href="#虚拟机创建" class="headerlink" title="虚拟机创建"></a>虚拟机创建</h3><h4 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584933905477.png" alt="1584933905477" title>                </div>                <div class="image-caption">1584933905477</div>            </figure><p>打开VMware,然后点击创建虚拟机,如上图所示。</p><h4 id="点击“下一步”"><a href="#点击“下一步”" class="headerlink" title="点击“下一步”"></a>点击“下一步”</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584934082213.png" alt="1584934082213" title>                </div>                <div class="image-caption">1584934082213</div>            </figure><h4 id="选择“稍后安装操作系统”，然后点击下一步"><a href="#选择“稍后安装操作系统”，然后点击下一步" class="headerlink" title="选择“稍后安装操作系统”，然后点击下一步"></a>选择“稍后安装操作系统”，然后点击下一步</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584934095920.png" alt="1584934095920" title>                </div>                <div class="image-caption">1584934095920</div>            </figure><h4 id="选择“linux”点击下一步"><a href="#选择“linux”点击下一步" class="headerlink" title="选择“linux”点击下一步"></a>选择“linux”点击下一步</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584934187577.png" alt="1584934187577" title>                </div>                <div class="image-caption">1584934187577</div>            </figure><p><strong>注意</strong>:选择你要安装系统的版本!</p><h4 id="重命名虚拟机名称和安装位置"><a href="#重命名虚拟机名称和安装位置" class="headerlink" title="重命名虚拟机名称和安装位置"></a>重命名虚拟机名称和安装位置</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584934261798.png" alt="1584934261798" title>                </div>                <div class="image-caption">1584934261798</div>            </figure><p>给虚拟机进行命名,同时哪选择虚拟机的安装位置!</p><h4 id="选择处理器以及内存"><a href="#选择处理器以及内存" class="headerlink" title="选择处理器以及内存"></a>选择处理器以及内存</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584934387879.png" alt="1584934387879" title>                </div>                <div class="image-caption">1584934387879</div>            </figure><p>根据自己的机器的具体配置进行选择,如果机器的内存大于8g可以选择2g。</p><h4 id="选择网络类型"><a href="#选择网络类型" class="headerlink" title="选择网络类型"></a>选择网络类型</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584934770201.png" alt="1584934770201" title>                </div>                <div class="image-caption">1584934770201</div>            </figure><h4 id="配置磁盘"><a href="#配置磁盘" class="headerlink" title="配置磁盘"></a>配置磁盘</h4><p>根据自己所需配置磁盘的大小，一般配置20~30G就够用了！</p><h3 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h3><h4 id="点击CD-DVD然后选择ISO映射文件"><a href="#点击CD-DVD然后选择ISO映射文件" class="headerlink" title="点击CD/DVD然后选择ISO映射文件"></a>点击CD/DVD然后选择ISO映射文件</h4><p>选择iso的映射文件路径</p><h4 id="点击确认-然后打开-一步一步进行安装"><a href="#点击确认-然后打开-一步一步进行安装" class="headerlink" title="点击确认,然后打开,一步一步进行安装"></a>点击确认,然后打开,一步一步进行安装</h4><h4 id="配置网络信息-示例-ubuntu-18-4"><a href="#配置网络信息-示例-ubuntu-18-4" class="headerlink" title="配置网络信息(示例:ubuntu 18.4)"></a>配置网络信息(示例:ubuntu 18.4)</h4><h5 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo vim /etc/netplan/50-cloud-init.yaml</span><br></pre></td></tr></table></figure><p>修改配置文件为如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">        renderer: networkd</span><br><span class="line">        ethernets:</span><br><span class="line">                ens33:</span><br><span class="line">                        dhcp4: no</span><br><span class="line">                        addresses: [192.168.118.69/24]   #设置本机IP及掩码</span><br><span class="line">                        gateway4: 192.168.118.1   #设置网关</span><br><span class="line">                        nameservers:</span><br><span class="line">                                addresses: [114.114.114.114, 8.8.8.8]   #设置DNS</span><br><span class="line">        version: 2</span><br></pre></td></tr></table></figure><p>网络更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo netplan apply</span><br></pre></td></tr></table></figure><p>查看网络情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ifconfig -a</span><br></pre></td></tr></table></figure><h5 id="配置主机名称"><a href="#配置主机名称" class="headerlink" title="配置主机名称"></a>配置主机名称</h5><p>修改主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  /etc/hostname</span><br></pre></td></tr></table></figure><p>将preserve_hostname: false修改为true </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  /etc/cloud/cloud.cfg</span><br></pre></td></tr></table></figure><h3 id="克隆系统"><a href="#克隆系统" class="headerlink" title="克隆系统"></a>克隆系统</h3><h4 id="关机开始克隆"><a href="#关机开始克隆" class="headerlink" title="关机开始克隆"></a>关机开始克隆</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584954999237.png" alt="1584954999237" title>                </div>                <div class="image-caption">1584954999237</div>            </figure><h4 id="选择”完整克隆”"><a href="#选择”完整克隆”" class="headerlink" title="选择”完整克隆”"></a>选择”完整克隆”</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584955032417.png" alt="1584955032417" title>                </div>                <div class="image-caption">1584955032417</div>            </figure><h4 id="配置克隆机器网络"><a href="#配置克隆机器网络" class="headerlink" title="配置克隆机器网络"></a>配置克隆机器网络</h4><p>##### </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo vim /etc/netplan/50-cloud-init.yaml</span><br></pre></td></tr></table></figure><p>修改配置文件为如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">        renderer: networkd</span><br><span class="line">        ethernets:</span><br><span class="line">                ens33:</span><br><span class="line">                        dhcp4: no</span><br><span class="line">                        addresses: [192.168.118.70/24]   #设置本机IP及掩码</span><br><span class="line">                        gateway4: 192.168.118.1   #设置网关</span><br><span class="line">                        nameservers:</span><br><span class="line">                                addresses: [114.114.114.114, 8.8.8.8]   #设置DNS</span><br><span class="line">        version: 2</span><br></pre></td></tr></table></figure><p>网络更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo netplan apply</span><br></pre></td></tr></table></figure><p>查看网络情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ifconfig -a</span><br></pre></td></tr></table></figure><h5 id="配置主机名称-1"><a href="#配置主机名称-1" class="headerlink" title="配置主机名称"></a>配置主机名称</h5><p>修改主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  /etc/hostname</span><br></pre></td></tr></table></figure><p>将preserve_hostname: false修改为true </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  /etc/cloud/cloud.cfg</span><br></pre></td></tr></table></figure><p>修改主机名和ip映射名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/hostname</span><br></pre></td></tr></table></figure><p>查看主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看主机名</span><br><span class="line">uname -a</span><br><span class="line">#主机名实际存储在/proc/sys/kernel/hostname,但是不能修改</span><br><span class="line">cat /proc/sys/kernel/hostname</span><br></pre></td></tr></table></figure><h3 id="ssh免密登录配置"><a href="#ssh免密登录配置" class="headerlink" title="ssh免密登录配置"></a>ssh免密登录配置</h3><h4 id="创建密钥对"><a href="#创建密钥对" class="headerlink" title="创建密钥对"></a>创建密钥对</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><h4 id="复制公钥"><a href="#复制公钥" class="headerlink" title="复制公钥"></a>复制公钥</h4><p>把公钥复制到另一台机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$scp .ssh/id_rsa.pub chenlb@192.168.1.181:/home/chenlb/id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="在被复制的机器添加-authorzied-keys"><a href="#在被复制的机器添加-authorzied-keys" class="headerlink" title="在被复制的机器添加 authorzied_keys"></a>在被复制的机器添加 authorzied_keys</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cat id_rsa.pub &gt;&gt; .ssh/authorized_keys</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure><h4 id="免密连接"><a href="#免密连接" class="headerlink" title="免密连接"></a>免密连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ssh ip地址</span><br></pre></td></tr></table></figure><p>以上就是,机器之间免密的配置,其他机器之间雷同。</p><h3 id="关闭防火墙（ubuntu）"><a href="#关闭防火墙（ubuntu）" class="headerlink" title="关闭防火墙（ubuntu）"></a>关闭防火墙（ubuntu）</h3><h5 id="安装ufw"><a href="#安装ufw" class="headerlink" title="安装ufw"></a>安装ufw</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install ufw</span><br></pre></td></tr></table></figure><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ufw enable</span><br></pre></td></tr></table></figure><h3 id="jdk环境配置"><a href="#jdk环境配置" class="headerlink" title="jdk环境配置"></a>jdk环境配置</h3><h4 id="下载jdk压缩包"><a href="#下载jdk压缩包" class="headerlink" title="下载jdk压缩包"></a>下载jdk压缩包</h4><p>自行下载</p><h4 id="创建jdk目录"><a href="#创建jdk目录" class="headerlink" title="创建jdk目录"></a>创建jdk目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/lib/jvm</span><br></pre></td></tr></table></figure><h4 id="解压到上述目录"><a href="#解压到上述目录" class="headerlink" title="解压到上述目录"></a>解压到上述目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf jdk-7u60-linux-x64.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure><h4 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>文末追加以下内容</p><p><strong>小技巧</strong>:vi编辑按G跳到行尾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_212</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre  </span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib  </span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><h4 id="让环境变量生效"><a href="#让环境变量生效" class="headerlink" title="让环境变量生效"></a>让环境变量生效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="系统注册该sdk"><a href="#系统注册该sdk" class="headerlink" title="系统注册该sdk"></a>系统注册该sdk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.8.0_212/bin/java 300</span><br></pre></td></tr></table></figure><h4 id="查看sdk"><a href="#查看sdk" class="headerlink" title="查看sdk"></a>查看sdk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>注意:如果你安装了多个sdk版本可以,通过下面的命令进行切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives –config java</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1585020533406.png" alt="1585020533406" title>                </div>                <div class="image-caption">1585020533406</div>            </figure><h2 id="安装过程中遇到的问题"><a href="#安装过程中遇到的问题" class="headerlink" title="安装过程中遇到的问题"></a>安装过程中遇到的问题</h2><h3 id="处理器未设置虚拟化"><a href="#处理器未设置虚拟化" class="headerlink" title="处理器未设置虚拟化"></a>处理器未设置虚拟化</h3><h4 id="错误描述"><a href="#错误描述" class="headerlink" title="错误描述"></a>错误描述</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/1584943878165.png" alt="1584943878165" title>                </div>                <div class="image-caption">1584943878165</div>            </figure><p> 虚拟机使用的是<a href="http://www.jianhui.org/vmware-workstation-10-download.html" target="_blank" rel="noopener">VMware Workstation </a>，并且首次在虚拟机体验64 位系统。在新建好虚拟机，运行时候就出现了VMware Workstation 的提醒：此主机支持 Intel VT-x，但 Intel VT-x 处于禁用状态。 </p><h4 id="处理办法"><a href="#处理办法" class="headerlink" title="处理办法"></a>处理办法</h4><p>1、关机，然后进入bios（根据自己的主板查找进入bios的方式）</p><p>2、设置Intel VT-x的虚拟化，找到 Virtual  的选项，将其设置为可用即可。</p><blockquote><p><strong>参考文档</strong></p></blockquote><blockquote><p><a href="https://shardingsphere.apache.org" target="_blank" rel="noopener">官方文档</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;VMware的下载&quot;&gt;&lt;a href=&quot;#VMware的下载&quot; class=&quot;headerlink&quot; title=&quot;VMware的下载&quot;&gt;&lt;/a&gt;VMware的下载&lt;/h2&gt;&lt;h3 id=&quot;下载地址&quot;&gt;&lt;a href=&quot;#下载地址&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="大数据" scheme="https://lywlefan.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="集群" scheme="https://lywlefan.github.io/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hive的安装</title>
    <link href="https://lywlefan.github.io/2020/03/25/%E5%90%8E%E7%AB%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%AD%98%E5%82%A8/hive/Hive%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://lywlefan.github.io/2020/03/25/后端/大数据/存储/hive/Hive的安装/</id>
    <published>2020-03-24T16:00:00.000Z</published>
    <updated>2020-03-26T08:27:57.902Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hive下载安装"><a href="#Hive下载安装" class="headerlink" title="Hive下载安装"></a>Hive下载安装</h1><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://mirror.bit.edu.cn/apache/hive/" target="_blank" rel="noopener">下载地址</a></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="解压hive到指定文件夹"><a href="#解压hive到指定文件夹" class="headerlink" title="解压hive到指定文件夹"></a>解压hive到指定文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xzvf apache-hive-3.1.2-bin.tar.gz</span><br></pre></td></tr></table></figure><h3 id="在-conf文件夹下配置hive-site-xml"><a href="#在-conf文件夹下配置hive-site-xml" class="headerlink" title="在/conf文件夹下配置hive-site.xml"></a>在/conf文件夹下配置hive-site.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</span><br><span class="line">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;jdbc:mysql://192.168.118.8:23306/hive_test&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;root&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;123456&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hive.metastore.schema.verification&lt;/name&gt;</span><br><span class="line">                &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>如果没有该文件,直接新建即可!该配置文件主要配置了mysql 的连接地址!</p><h3 id="导入mysql驱动到lib文件夹"><a href="#导入mysql驱动到lib文件夹" class="headerlink" title="导入mysql驱动到lib文件夹"></a>导入mysql驱动到lib文件夹</h3><p>导入mysql-connector-java-5.1.20.jar到hive的lib文件夹下。</p><h3 id="初始化hive在mysql中的表"><a href="#初始化hive在mysql中的表" class="headerlink" title="初始化hive在mysql中的表"></a>初始化hive在mysql中的表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure><h3 id="启动hive"><a href="#启动hive" class="headerlink" title="启动hive"></a>启动hive</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hive</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="在hive中创建一个库"><a href="#在hive中创建一个库" class="headerlink" title="在hive中创建一个库"></a>在hive中创建一个库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 hive&gt; create database hive_1;</span><br><span class="line">2 OK</span><br><span class="line">3 Time taken: 1.432 seconds</span><br></pre></td></tr></table></figure><h4 id="查看hive中的库"><a href="#查看hive中的库" class="headerlink" title="查看hive中的库"></a>查看hive中的库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 hive&gt; create database hive_1;</span><br><span class="line">2 OK</span><br><span class="line">3 Time taken: 1.432 seconds</span><br></pre></td></tr></table></figure><h4 id="切换到创建的库上"><a href="#切换到创建的库上" class="headerlink" title="切换到创建的库上"></a>切换到创建的库上</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 hive&gt; create database hive_1;</span><br><span class="line">2 OK</span><br><span class="line">3 Time taken: 1.432 seconds</span><br></pre></td></tr></table></figure><h4 id="在当前库创建一张表"><a href="#在当前库创建一张表" class="headerlink" title="在当前库创建一张表"></a>在当前库创建一张表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 hive&gt; create database hive_1;</span><br><span class="line">2 OK</span><br><span class="line">3 Time taken: 1.432 seconds</span><br></pre></td></tr></table></figure><h4 id="查看当前库里面所有的表"><a href="#查看当前库里面所有的表" class="headerlink" title="查看当前库里面所有的表"></a>查看当前库里面所有的表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hive&gt; show tables;</span><br><span class="line">OK</span><br><span class="line">hive_01</span><br><span class="line">Time taken: 0.107 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure><h4 id="通过mysql查询创建的表"><a href="#通过mysql查询创建的表" class="headerlink" title="通过mysql查询创建的表"></a>通过mysql查询创建的表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from TBLS;</span><br></pre></td></tr></table></figure><h4 id="通过hsfs的web界面查看我们创建的表"><a href="#通过hsfs的web界面查看我们创建的表" class="headerlink" title="通过hsfs的web界面查看我们创建的表"></a>通过hsfs的web界面查看我们创建的表</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="D:\myworkspace\blog-build\source\_posts\img\1585207863239.png" alt="1585207863239" title>                </div>                <div class="image-caption">1585207863239</div>            </figure><p>以上就是hive 的安装步骤!!!</p><h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><h2 id="启动hive报错"><a href="#启动hive报错" class="headerlink" title="启动hive报错"></a>启动hive报错</h2><h3 id="报错详情"><a href="#报错详情" class="headerlink" title="报错详情"></a>报错详情</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/software/hive/apache-hive-3.1.2-bin/lib/log4j-slf4j-impl-2.10.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/software/hadoop/hadoop-3.1.3/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span><br><span class="line">SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]</span><br><span class="line">Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument(ZLjava/lang/String;Ljava/lang/Object;)V</span><br><span class="line">at org.apache.hadoop.conf.Configuration.set(Configuration.java:1357)</span><br><span class="line">at org.apache.hadoop.conf.Configuration.set(Configuration.java:1338)</span><br><span class="line">at org.apache.hadoop.mapred.JobConf.setJar(JobConf.java:518)</span><br><span class="line">at org.apache.hadoop.mapred.JobConf.setJarByClass(JobConf.java:536)</span><br><span class="line">at org.apache.hadoop.mapred.JobConf.&lt;init&gt;(JobConf.java:430)</span><br><span class="line">at org.apache.hadoop.hive.conf.HiveConf.initialize(HiveConf.java:5141)</span><br><span class="line">at org.apache.hadoop.hive.conf.HiveConf.&lt;init&gt;(HiveConf.java:5104)</span><br><span class="line">at org.apache.hive.beeline.HiveSchemaTool.&lt;init&gt;(HiveSchemaTool.java:96)</span><br><span class="line">at org.apache.hive.beeline.HiveSchemaTool.main(HiveSchemaTool.java:1473)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.apache.hadoop.util.RunJar.run(RunJar.java:318)</span><br><span class="line">at org.apache.hadoop.util.RunJar.main(RunJar.java:232)</span><br></pre></td></tr></table></figure><h3 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h3><p>guava版本太低造成的。</p><h3 id="错误解决"><a href="#错误解决" class="headerlink" title="错误解决"></a>错误解决</h3><p>提升版本，删除lib文件夹下的guava原jar包，然后去maven仓库下载最新jar包放入即可！</p><h2 id="创建库报错"><a href="#创建库报错" class="headerlink" title="创建库报错"></a>创建库报错</h2><h3 id="错误详情"><a href="#错误详情" class="headerlink" title="错误详情"></a>错误详情</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FAILED: HiveException java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span><br></pre></td></tr></table></figure><h3 id="错误原因-1"><a href="#错误原因-1" class="headerlink" title="错误原因"></a>错误原因</h3><h2 id="hive数据库格式化失败"><a href="#hive数据库格式化失败" class="headerlink" title="hive数据库格式化失败"></a>hive数据库格式化失败</h2><h3 id="错误详情-1"><a href="#错误详情-1" class="headerlink" title="错误详情"></a>错误详情</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/software/hive/apache-hive-3.1.2-bin/lib/log4j-slf4j-impl-2.10.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/software/hadoop/hadoop-3.1.3/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span><br><span class="line">SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]</span><br><span class="line">Metastore connection URL: jdbc:mysql://219.145.62.237:23306/hive_test</span><br><span class="line">Metastore Connection Driver : com.MySQL.jdbc.Driver</span><br><span class="line">Metastore connection User: root</span><br><span class="line">org.apache.hadoop.hive.metastore.HiveMetaException: Failed to load driver</span><br><span class="line">Underlying cause: java.lang.ClassNotFoundException : com.MySQL.jdbc.Driver</span><br><span class="line">Use --verbose for detailed stacktrace.</span><br><span class="line">*** schemaTool failed ***</span><br></pre></td></tr></table></figure><h3 id="错误原因-2"><a href="#错误原因-2" class="headerlink" title="错误原因"></a>错误原因</h3><p>hive/lib文件夹下面没有导入mysql 的驱动。</p><p>还有可能是配置文件错误了。</p><h3 id="错误解决-1"><a href="#错误解决-1" class="headerlink" title="错误解决"></a>错误解决</h3><p>导入mysql驱动，用官方的配置文件，不要在网上乱粘！！！</p><blockquote><p><strong>参考文档</strong></p></blockquote><blockquote><p><a href="https://shardingsphere.apache.org" target="_blank" rel="noopener">官方文档</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hive下载安装&quot;&gt;&lt;a href=&quot;#Hive下载安装&quot; class=&quot;headerlink&quot; title=&quot;Hive下载安装&quot;&gt;&lt;/a&gt;Hive下载安装&lt;/h1&gt;&lt;h2 id=&quot;下载地址&quot;&gt;&lt;a href=&quot;#下载地址&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="大数据" scheme="https://lywlefan.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hive" scheme="https://lywlefan.github.io/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>vue中是如何自定义组件的.</title>
    <link href="https://lywlefan.github.io/2019/12/06/%E5%89%8D%E7%AB%AF/vue/vue%E4%B8%AD%E6%98%AF%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E7%9A%84/"/>
    <id>https://lywlefan.github.io/2019/12/06/前端/vue/vue中是如何自定义组件的/</id>
    <published>2019-12-05T16:00:00.000Z</published>
    <updated>2019-12-06T02:11:56.010Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何自定义组件"><a href="#如何自定义组件" class="headerlink" title="如何自定义组件??"></a>如何自定义组件??</h3><h3 id="父子组件之间是如何交互的"><a href="#父子组件之间是如何交互的" class="headerlink" title="父子组件之间是如何交互的??"></a>父子组件之间是如何交互的??</h3><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;如何自定义组件&quot;&gt;&lt;a href=&quot;#如何自定义组件&quot; class=&quot;headerlink&quot; title=&quot;如何自定义组件??&quot;&gt;&lt;/a&gt;如何自定义组件??&lt;/h3&gt;&lt;h3 id=&quot;父子组件之间是如何交互的&quot;&gt;&lt;a href=&quot;#父子组件之间是如何交互的&quot; cla
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://lywlefan.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>java类初始化</title>
    <link href="https://lywlefan.github.io/2019/12/06/%E5%90%8E%E7%AB%AF/%E5%9F%BA%E7%A1%80%E5%B7%A9%E5%9B%BA/java/jvm/java%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <id>https://lywlefan.github.io/2019/12/06/后端/基础巩固/java/jvm/java类初始化/</id>
    <published>2019-12-05T16:00:00.000Z</published>
    <updated>2019-12-06T03:35:00.093Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/u/354cc1548a33&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;【1】简书主页·share猿&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://jueji
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="基础" scheme="https://lywlefan.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>初始Knative</title>
    <link href="https://lywlefan.github.io/2019/11/27/%E5%90%8E%E7%AB%AF/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86/Knative/%E5%88%9D%E5%A7%8BKnative/"/>
    <id>https://lywlefan.github.io/2019/11/27/后端/容器管理/Knative/初始Knative/</id>
    <published>2019-11-26T16:00:00.000Z</published>
    <updated>2019-11-27T08:10:41.334Z</updated>
    
    <content type="html"><![CDATA[<ul><li>函数即服务（FaaS） </li><li>平台即服务（PaaS） </li><li>无服务器架构（serverless） </li><li>路由（routing） </li><li>事件（eventing） </li><li><em>build（构建）</em> </li></ul><hr><h2 id="什么是Knative"><a href="#什么是Knative" class="headerlink" title="什么是Knative??"></a>什么是Knative??</h2><h3 id="Knative的目标"><a href="#Knative的目标" class="headerlink" title="Knative的目标"></a>Knative的目标</h3><p> Knative 的目标是在基于 Kubernetes 之上为整个开发生命周期提供帮助 。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><ul><li>作为开发人员能够以你<strong>想要的语言和以你想要的方式来编写代码</strong></li><li>其次帮助你<strong>构建和打包</strong>应用程序</li><li>最后帮助你<strong>运行和伸缩</strong>应用程序 </li></ul><h3 id="关键组件"><a href="#关键组件" class="headerlink" title="关键组件"></a>关键组件</h3><ul><li><em>build（构建）</em>你的应用程序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过灵活的插件化的构建系统将用户源代码构建成容器。目前已经支持多个构建系统，比如 Google 的 Kaniko，它无需运行 Docker daemon 就可以在 Kubernetes 集群上构建容器镜像。</span><br></pre></td></tr></table></figure><ul><li><em>serving（服务）</em>为其提供流量 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基于负载自动伸缩，包括在没有负载时缩减到零。允许你为多个修订版本（revision）应用创建流量策略，从而能够通过 URL 轻松路由到目标应用程序。</span><br></pre></td></tr></table></figure><ul><li><em>event（事件）</em>确保应用程序能够轻松地生产和消费。 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使得生产和消费事件变得容易。抽象出事件源，并允许操作人员使用自己选择的消息传递层。</span><br></pre></td></tr></table></figure><p><strong>综上所述</strong>:Knative是一个可以让Kubernetes<strong>更好用,扩展性更好的轮子</strong>。</p><h3 id="一些新的概念"><a href="#一些新的概念" class="headerlink" title="一些新的概念"></a>一些新的概念</h3><h4 id="无服务器架构-serverless"><a href="#无服务器架构-serverless" class="headerlink" title="无服务器架构(serverless)"></a>无服务器架构(serverless)</h4><h5 id="划重点"><a href="#划重点" class="headerlink" title="划重点"></a>划重点</h5><ul><li>以前需要编写大型/单一应用程序,现在<strong>只需要编写通过事件来调用小型/单一用途的函数即可</strong>。</li><li>对于托管服务来说,<strong>意味着只需要为活跃期间的计算付费</strong>,而不是一台7×24小时运行的虚拟机付费。</li><li>代码在需要时就运行,不需要时就停止。</li></ul><h5 id="Kubernetes遇到的问题"><a href="#Kubernetes遇到的问题" class="headerlink" title="Kubernetes遇到的问题"></a>Kubernetes遇到的问题</h5><ul><li>如何保证一致性</li><li>谁负责给所有东西打补丁</li><li>如何根据需求伸缩</li><li>如何实现零停机部署</li><li>如何管理多个事件类型一致性</li><li><p>如何定义事件源和目标</p><p>Knative 构建在 Kubernetes 的基础上，并<strong>为构建和部署无服务器架构（serverless）和基于事件驱动的应用程序提供了一致的标准模式</strong>。Knative 减少了这种新的软件开发方法所产生的开销，同时还<strong>把路由（routing）和事件（eventing）的复杂性抽象出来</strong>。 </p></li></ul><h2 id="Knative组件学习"><a href="#Knative组件学习" class="headerlink" title="Knative组件学习"></a>Knative组件学习</h2><h3 id="Serving（服务）"><a href="#Serving（服务）" class="headerlink" title="Serving（服务）"></a>Serving（服务）</h3><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a>﻿<br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a>﻿﻿</p><p><a href="https://www.servicemesher.com/getting-started-with-knative/" target="_blank" rel="noopener">【3】Knative入门——构建基于 Kubernetes 的现代化Serverless应用</a>﻿﻿</p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong>﻿</p><p><img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt>﻿﻿</p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;函数即服务（FaaS） &lt;/li&gt;
&lt;li&gt;平台即服务（PaaS） &lt;/li&gt;
&lt;li&gt;无服务器架构（serverless） &lt;/li&gt;
&lt;li&gt;路由（routing） &lt;/li&gt;
&lt;li&gt;事件（eventing） &lt;/li&gt;
&lt;li&gt;&lt;em&gt;build（构建）
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="容器管理" scheme="https://lywlefan.github.io/tags/%E5%AE%B9%E5%99%A8%E7%AE%A1%E7%90%86/"/>
    
      <category term="Knative" scheme="https://lywlefan.github.io/tags/Knative/"/>
    
  </entry>
  
  <entry>
    <title>jpa参数为空查询报错问题</title>
    <link href="https://lywlefan.github.io/2019/11/25/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/java/hibernate/jpa%E5%8F%82%E6%95%B0%E4%B8%BA%E7%A9%BA%E6%9F%A5%E8%AF%A2%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>https://lywlefan.github.io/2019/11/25/后端/框架/java/hibernate/jpa参数为空查询报错问题/</id>
    <published>2019-11-24T16:00:00.000Z</published>
    <updated>2019-11-25T09:45:33.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>在使用jpa的时候发现,通过@Query自定义的sql,参数不能传空,传空就报错:</p><p>在使用jpa的时候发现,通过@Query自定义的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select  new com.winstar.vo.OilCouponVo(t.oilId,s.phone,s.certNo,t.couponCode,t.orderNumber,t.couponAmt,t.couponName,t.useState,t.gasStationId,t.gasStationName,t.useDate,t.createdAt,t.updatedAt,t.status) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">            <span class="string">"where (t.createdAt between ?1 and ?2) and t.useDate = ?3 and t.couponCode like ?4 and t.orderNumber like ?5 and t.appId = ?6 and s.phone = ?7 and s.certNo = ?8"</span>,</span><br><span class="line">            countQuery = <span class="string">"select count(t.id) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">                    <span class="string">"where (t.createdAt between ?1  and ?2) and t.useDate = ?3 and t.couponCode like ?4 and t.orderNumber like ?5 and t.appId = ?6 and s.phone = ?7 and s.certNo = ?8"</span>)</span><br><span class="line">    <span class="function">Page&lt;OilCouponVo&gt; <span class="title">getOilPage</span><span class="params">(Date startTime,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 Date endTime,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String useState,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String couponCode,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String orderNumber,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String appId,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String phone,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 String certNo,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 Pageable pageable)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h4 id="原生sql解决办法如下"><a href="#原生sql解决办法如下" class="headerlink" title="原生sql解决办法如下:"></a>原生sql解决办法如下:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select * from xxx where if(?1 !='',x1=?1,1=1) and if(?2 !='',x2=?2,1=1)"</span> +</span><br><span class="line">            <span class="string">"and if(?3 !='',x3=?3,1=1)  "</span>,nativeQuery = <span class="keyword">true</span>)</span><br><span class="line">     <span class="function">List&lt;XXX&gt; <span class="title">find</span><span class="params">(String X1,String X2,String X3)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="非原生sql解决办法如下"><a href="#非原生sql解决办法如下" class="headerlink" title="非原生sql解决办法如下"></a>非原生sql解决办法如下</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query</span>(value = <span class="string">"select  new com.winstar.vo.OilCouponVo(t.oilId,s.phone,s.certNo,t.couponCode,t.orderNumber,t.couponAmt,t.couponName,t.useState,t.gasStationId,t.gasStationName,t.useDate,t.createdAt,t.updatedAt,t.status) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">           <span class="string">"where (t.createdAt between ?1 and ?2) and (?3 is null or ?3 = '' or t.useState = ?3) and (?4 is null or ?4 = '' or t.couponCode like ?4)"</span> +</span><br><span class="line">           <span class="string">" and (?5 is null or ?5 = '' or t.orderNumber = ?5) and (?6 is null or ?6 = '' or t.appId = ?6)"</span> +</span><br><span class="line">           <span class="string">" and (?7 is null or ?7 = '' or s.phone = ?7)  and (?8 is null or ?8 = '' or s.certNo like ?8)"</span>,</span><br><span class="line">           countQuery = <span class="string">"select count(t.id) from OilCoupon t left join Account s on t.userId = s.id "</span> +</span><br><span class="line">           <span class="string">"where (t.createdAt between ?1 and ?2) and (?3 is null or ?3 = '' or t.useState = ?3) and (?4 is null or ?4 = '' or t.couponCode like ?4)"</span> +</span><br><span class="line">            <span class="string">" and (?5 is null or ?5 = '' or t.orderNumber = ?5) and (?6 is null or ?6 = '' or t.appId = ?6)"</span> +</span><br><span class="line">            <span class="string">" and (?7 is null or ?7 = '' or s.phone = ?7)  and (?8 is null or ?8 = '' or s.certNo like ?8)"</span>)</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;遇到问题&quot;&gt;&lt;a href=&quot;#遇到问题&quot; class=&quot;headerlink&quot; title=&quot;遇到问题&quot;&gt;&lt;/a&gt;遇到问题&lt;/h2&gt;&lt;p&gt;在使用jpa的时候发现,通过@Query自定义的sql,参数不能传空,传空就报错:&lt;/p&gt;
&lt;p&gt;在使用jpa的时候发现,通
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="框架" scheme="https://lywlefan.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="hibernate" scheme="https://lywlefan.github.io/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>自定义枚举类型校验</title>
    <link href="https://lywlefan.github.io/2019/11/18/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/java/hibernate/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E6%A0%A1%E9%AA%8C/"/>
    <id>https://lywlefan.github.io/2019/11/18/后端/框架/java/hibernate/自定义枚举类型校验/</id>
    <published>2019-11-17T16:00:00.000Z</published>
    <updated>2019-11-25T09:13:51.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>自定义了如下枚举类型,需要对其vo进行校验:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ValidateEnum</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 证件类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="keyword">enum</span> CertTypeEnum implements ValidateEnum &#123;</span><br><span class="line">        CERT_TYPE(<span class="string">"身份证"</span>,<span class="string">"0"</span>),</span><br><span class="line">        PROTECTION_TYPE(<span class="string">"护照"</span>,<span class="string">"1"</span>),</span><br><span class="line">        OFFICER_TYPE(<span class="string">"军官证"</span>,<span class="string">"2"</span>),</span><br><span class="line">        SOLDIERS_TYPE(<span class="string">"士兵证"</span>,<span class="string">"3"</span>),</span><br><span class="line">        REENTRY_PERMIT_TYPE(<span class="string">"回乡证"</span>,<span class="string">"4"</span>),</span><br><span class="line">        INTERIM_IDENTITY_CARD_TYPE(<span class="string">"临时身份证"</span>,<span class="string">"5"</span>),</span><br><span class="line">        RESIDENCE_BOOKLET_TYPE(<span class="string">"户口簿"</span>,<span class="string">"6"</span>),</span><br><span class="line">        POLICE_OFFICER_TYPE(<span class="string">"警官证"</span>,<span class="string">"7"</span>),</span><br><span class="line">        TAIWAN_COMPATRIOTS_TYPE(<span class="string">"台胞证"</span>,<span class="string">"8"</span>),</span><br><span class="line">        BUSINESS_LICENSE_TYPE(<span class="string">"营业执照"</span>,<span class="string">"9"</span>),</span><br><span class="line">        OTHERS_TYPE(<span class="string">"其他证件"</span>,<span class="string">"10"</span>),</span><br><span class="line">        HONG_KONG_TYPE(<span class="string">"港澳台居民来往内地通行证"</span>,<span class="string">"11"</span>),</span><br><span class="line">        TAIWAN_TYPE(<span class="string">"台湾居民来往大陆通行证"</span>,<span class="string">"12"</span>);</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> String value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h4 id="自定义枚举校验注解"><a href="#自定义枚举校验注解" class="headerlink" title="自定义枚举校验注解"></a>自定义枚举校验注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Target</span>(&#123;ElementType.FIELD, ElementType.METHOD&#125;)</span><br><span class="line"><span class="meta">@Constraint</span>(validatedBy = EnumValidatorClass.class)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnumValidator &#123;</span><br><span class="line">    Class&lt;?&gt; value();</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> "入参值不在正确枚举中"</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? extends Payload&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="枚举注解处理类"><a href="#枚举注解处理类" class="headerlink" title="枚举注解处理类"></a>枚举注解处理类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnumValidatorClass</span> <span class="keyword">implements</span> <span class="title">ConstraintValidator</span>&lt;<span class="title">EnumValidator</span>, <span class="title">Object</span>&gt;, <span class="title">Annotation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger log = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; values = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(EnumValidator enumValidator)</span> </span>&#123;</span><br><span class="line">        Class&lt;?&gt; clz = enumValidator.value();</span><br><span class="line">        Object[] ojects = clz.getEnumConstants();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Method method = clz.getMethod(<span class="string">"getValue"</span>);</span><br><span class="line">            <span class="keyword">if</span> (Objects.isNull(method)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(String.format(<span class="string">"枚举对象&#123;&#125;缺少字段名为value的字段"</span>,</span><br><span class="line">                        clz.getName()));</span><br><span class="line">            &#125;</span><br><span class="line">            Object value = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">for</span> (Object obj : ojects) &#123;</span><br><span class="line">                value = method.invoke(obj);</span><br><span class="line">                values.add(value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"[处理枚举校验异常]"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;? extends Annotation&gt; annotationType() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(Object value, ConstraintValidatorContext constraintValidatorContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.isNull(value) || values.contains(value) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义枚举类型接口"><a href="#定义枚举类型接口" class="headerlink" title="定义枚举类型接口"></a>定义枚举类型接口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public interface ValidateEnum &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 证件类型</span><br><span class="line">     */</span><br><span class="line">    @Getter</span><br><span class="line">    @AllArgsConstructor</span><br><span class="line">    enum CertTypeEnum implements ValidateEnum &#123;</span><br><span class="line">        CERT_TYPE(&quot;身份证&quot;,&quot;0&quot;),</span><br><span class="line">        PROTECTION_TYPE(&quot;护照&quot;,&quot;1&quot;),</span><br><span class="line">        OFFICER_TYPE(&quot;军官证&quot;,&quot;2&quot;),</span><br><span class="line">        SOLDIERS_TYPE(&quot;士兵证&quot;,&quot;3&quot;),</span><br><span class="line">        REENTRY_PERMIT_TYPE(&quot;回乡证&quot;,&quot;4&quot;),</span><br><span class="line">        INTERIM_IDENTITY_CARD_TYPE(&quot;临时身份证&quot;,&quot;5&quot;),</span><br><span class="line">        RESIDENCE_BOOKLET_TYPE(&quot;户口簿&quot;,&quot;6&quot;),</span><br><span class="line">        POLICE_OFFICER_TYPE(&quot;警官证&quot;,&quot;7&quot;),</span><br><span class="line">        TAIWAN_COMPATRIOTS_TYPE(&quot;台胞证&quot;,&quot;8&quot;),</span><br><span class="line">        BUSINESS_LICENSE_TYPE(&quot;营业执照&quot;,&quot;9&quot;),</span><br><span class="line">        OTHERS_TYPE(&quot;其他证件&quot;,&quot;10&quot;),</span><br><span class="line">        HONG_KONG_TYPE(&quot;港澳台居民来往内地通行证&quot;,&quot;11&quot;),</span><br><span class="line">        TAIWAN_TYPE(&quot;台湾居民来往大陆通行证&quot;,&quot;12&quot;);</span><br><span class="line">        private String name;</span><br><span class="line">        private String value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用枚举校验注解"><a href="#使用枚举校验注解" class="headerlink" title="使用枚举校验注解"></a>使用枚举校验注解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 证件类型(0:身份证, 1:护照, 2:军官证, 3:士兵证, 4:回乡证, 5:临时身份证, 6:户口簿, 7:警官证, 8:台胞证, 9:营业执照, 10:其他证件, 11:港澳台居民来往内地通行证, 12:台湾居民来往大陆通行证)</span><br><span class="line"> */</span><br><span class="line">@EnumValidator(message = &quot;证件类型不在指定类型中&quot;, value = ValidateEnum.CertTypeEnum.class)</span><br><span class="line">private String certType;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;自定义了如下枚举类型,需要对其vo进行校验:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="框架" scheme="https://lywlefan.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="hibernate" scheme="https://lywlefan.github.io/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>去中心化应用</title>
    <link href="https://lywlefan.github.io/2019/11/05/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%BA%94%E7%94%A8/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/"/>
    <id>https://lywlefan.github.io/2019/11/05/前沿技术/区块链/应用/去中心化应用/</id>
    <published>2019-11-04T16:00:00.000Z</published>
    <updated>2019-11-05T05:54:58.638Z</updated>
    
    <content type="html"><![CDATA[<h2 id="去中心化应用"><a href="#去中心化应用" class="headerlink" title="去中心化应用"></a>去中心化应用</h2><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;去中心化应用&quot;&gt;&lt;a href=&quot;#去中心化应用&quot; class=&quot;headerlink&quot; title=&quot;去中心化应用&quot;&gt;&lt;/a&gt;去中心化应用&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure c
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="应用" scheme="https://lywlefan.github.io/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何和别人进行合作协调</title>
    <link href="https://lywlefan.github.io/2019/11/05/%E7%AE%A1%E7%90%86/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%A8%AA%E5%90%91%E9%A2%86%E5%AF%BC%E5%8A%9B/%E5%A6%82%E4%BD%95%E5%92%8C%E5%88%AB%E4%BA%BA%E8%BF%9B%E8%A1%8C%E5%90%88%E4%BD%9C%E5%8D%8F%E8%B0%83/"/>
    <id>https://lywlefan.github.io/2019/11/05/管理/读书笔记/横向领导力/如何和别人进行合作协调/</id>
    <published>2019-11-04T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.108Z</updated>
    
    <content type="html"><![CDATA[<h2 id="合作中常见的问题"><a href="#合作中常见的问题" class="headerlink" title="合作中常见的问题"></a>合作中常见的问题</h2><h3 id="合作不佳"><a href="#合作不佳" class="headerlink" title="合作不佳"></a>合作不佳</h3><h3 id="找不到一个人解决问题"><a href="#找不到一个人解决问题" class="headerlink" title="找不到一个人解决问题"></a>找不到一个人解决问题</h3><h2 id="改善团队表现需要解决的三个问题"><a href="#改善团队表现需要解决的三个问题" class="headerlink" title="改善团队表现需要解决的三个问题"></a>改善团队表现需要解决的三个问题</h2><h3 id="个人技能有限的问题"><a href="#个人技能有限的问题" class="headerlink" title="个人技能有限的问题"></a>个人技能有限的问题</h3><p>打铁还得自身硬，要想领导团队自身能力要硬，要有好的德行。要有解决解决复杂问题的能力和思维，要有带领团队克服困难的勇气，要积极向上，做好团队的能量石，也做好团队的敲打棒。</p><h3 id="对一个好的合作缺乏清晰的认识"><a href="#对一个好的合作缺乏清晰的认识" class="headerlink" title="对一个好的合作缺乏清晰的认识"></a>对一个好的合作缺乏清晰的认识</h3><p>要对好的团队有清晰的认识，团队要有清晰的目标，领导人要划分清晰的职责，及时处理团队的矛盾，团队成员共同成长，相互提升，把相互teview当做团队的一种文化，团队协作形成一些标准的规范。领导人要为团队争取更多的福利。</p><h3 id="大多数人都不知道怎么影响别人"><a href="#大多数人都不知道怎么影响别人" class="headerlink" title="大多数人都不知道怎么影响别人"></a>大多数人都不知道怎么影响别人</h3><ul><li>自我成长</li><li>德行</li><li>清晰目标</li><li>职责分配清晰</li><li>及时沟通，当面表扬，私下批评</li><li>积极争取福利</li></ul><h2 id="团队协作的方法"><a href="#团队协作的方法" class="headerlink" title="团队协作的方法"></a>团队协作的方法</h2><h3 id="培养、锻炼自己独立工作的"><a href="#培养、锻炼自己独立工作的" class="headerlink" title="培养、锻炼自己独立工作的"></a>培养、锻炼自己独立工作的</h3><p>自己独立工作的能力，有计划，有目标，有方向，有解决问题思维方式，有处理问题的策略。</p><h3 id="对共同工作的战略目标有清晰的认识"><a href="#对共同工作的战略目标有清晰的认识" class="headerlink" title="对共同工作的战略目标有清晰的认识"></a>对共同工作的战略目标有清晰的认识</h3><p>深刻理解目标，对目标有清晰的认识。</p><h3 id="学习一些领导方法"><a href="#学习一些领导方法" class="headerlink" title="学习一些领导方法"></a>学习一些领导方法</h3><h4 id="参与式领导方法"><a href="#参与式领导方法" class="headerlink" title="参与式领导方法"></a>参与式领导方法</h4><ul><li>提问</li><li>说出自己的想法邀请别人接受、运用或者修改想法</li><li>想法付诸实践，然后改进</li></ul><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;合作中常见的问题&quot;&gt;&lt;a href=&quot;#合作中常见的问题&quot; class=&quot;headerlink&quot; title=&quot;合作中常见的问题&quot;&gt;&lt;/a&gt;合作中常见的问题&lt;/h2&gt;&lt;h3 id=&quot;合作不佳&quot;&gt;&lt;a href=&quot;#合作不佳&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="管理" scheme="https://lywlefan.github.io/categories/%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="读书笔记" scheme="https://lywlefan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="横向领导力" scheme="https://lywlefan.github.io/tags/%E6%A8%AA%E5%90%91%E9%A2%86%E5%AF%BC%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>fabric架构</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/fabric/fabric%E6%9E%B6%E6%9E%84/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/fabric/fabric架构/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-04T01:41:11.198Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="fabric" scheme="https://lywlefan.github.io/tags/fabric/"/>
    
  </entry>
  
  <entry>
    <title>企业在落地区块链时要考虑的点</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/fabric/Hyperledger%20Composer%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/fabric/Hyperledger Composer学习总结/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.026Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="fabric" scheme="https://lywlefan.github.io/tags/fabric/"/>
    
  </entry>
  
  <entry>
    <title>企业在落地区块链时要考虑的点</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%BA%94%E7%94%A8/%E4%BC%81%E4%B8%9A%E5%9C%A8%E8%90%BD%E5%9C%B0%E5%8C%BA%E5%9D%97%E9%93%BE%E6%97%B6%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E7%82%B9/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/应用/企业在落地区块链时要考虑的点/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:32.105Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务"><a href="#业务" class="headerlink" title="业务"></a>业务</h2><h3 id="人才团队建设"><a href="#人才团队建设" class="headerlink" title="人才团队建设"></a>人才团队建设</h3><h3 id="业务场景选择"><a href="#业务场景选择" class="headerlink" title="业务场景选择"></a>业务场景选择</h3><h3 id="业务流程化"><a href="#业务流程化" class="headerlink" title="业务流程化"></a>业务流程化</h3><h3 id="应用开发模式"><a href="#应用开发模式" class="headerlink" title="应用开发模式"></a>应用开发模式</h3><h3 id="可视化与分析"><a href="#可视化与分析" class="headerlink" title="可视化与分析"></a>可视化与分析</h3><h3 id="数据模块管理"><a href="#数据模块管理" class="headerlink" title="数据模块管理"></a>数据模块管理</h3><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><h3 id="技术方案选型"><a href="#技术方案选型" class="headerlink" title="技术方案选型"></a>技术方案选型</h3><h3 id="平台设计实施"><a href="#平台设计实施" class="headerlink" title="平台设计实施"></a>平台设计实施</h3><h3 id="高可用与灾备"><a href="#高可用与灾备" class="headerlink" title="高可用与灾备"></a>高可用与灾备</h3><h3 id="安全合规治理"><a href="#安全合规治理" class="headerlink" title="安全合规治理"></a>安全合规治理</h3><h3 id="平台应用运维"><a href="#平台应用运维" class="headerlink" title="平台应用运维"></a>平台应用运维</h3><h2 id="运营"><a href="#运营" class="headerlink" title="运营"></a>运营</h2><h3 id="市场营销宣传"><a href="#市场营销宣传" class="headerlink" title="市场营销宣传"></a>市场营销宣传</h3><h3 id="生态系统参与"><a href="#生态系统参与" class="headerlink" title="生态系统参与"></a>生态系统参与</h3><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;业务&quot;&gt;&lt;a href=&quot;#业务&quot; class=&quot;headerlink&quot; title=&quot;业务&quot;&gt;&lt;/a&gt;业务&lt;/h2&gt;&lt;h3 id=&quot;人才团队建设&quot;&gt;&lt;a href=&quot;#人才团队建设&quot; class=&quot;headerlink&quot; title=&quot;人才团队建设&quot;&gt;&lt;/a&gt;人
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="应用" scheme="https://lywlefan.github.io/tags/%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>corda基础架构</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/corda/corda%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/corda/corda基础架构/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:32.994Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="corda" scheme="https://lywlefan.github.io/tags/corda/"/>
    
  </entry>
  
  <entry>
    <title>初始corda</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/corda/cord%E4%B8%AD%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/corda/cord中的基本概念总结/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.002Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是corda"><a href="#什么是corda" class="headerlink" title="什么是corda??"></a>什么是corda??</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么?"></a>是什么?</h3><p>corda是一个分布式账本平台。</p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="corda网络"><a href="#corda网络" class="headerlink" title="corda网络"></a>corda网络</h4><h4 id="账本"><a href="#账本" class="headerlink" title="账本"></a>账本</h4><p>每个节点验证过交易的集合,账本是各个节点自有的。</p><p>每个节点维护一个已知事实的分离数据库。</p><p>没有一个节点知道整个账本。</p><h4 id="身份"><a href="#身份" class="headerlink" title="身份"></a>身份</h4><p>身份有两种:组织的法律身份、网络服务身份。</p><p>法律身份用于交易的当事人,如:现金拥有者。</p><p>网络服务身份用于提供与交易相关的服务,如公证服务或oracle服务。服务身份基于混合KEY。</p><p>身份证明的X.509证书由看门人或其他众所周知的身份签发。身份是众所周知的还是机密的,取决于X.509证书是否公开。</p><h4 id="应用节点"><a href="#应用节点" class="headerlink" title="应用节点"></a>应用节点</h4><h4 id="看门人"><a href="#看门人" class="headerlink" title="看门人"></a>看门人</h4><p>看门人服务可以理解为一个身份准入管理服务加上一个业务许可管理服务,它要求节点提供必要的信息,以及在接受进入网络前必须进行的了解客户的过程。</p><p>要想加入corda网络,节点必须联系看门人并提供必要的信息。看门人许可通过,会颁发TLS许可证书。</p><h4 id="cordaDapps"><a href="#cordaDapps" class="headerlink" title="cordaDapps"></a>cordaDapps</h4><h4 id="AMPQ-1-0协议"><a href="#AMPQ-1-0协议" class="headerlink" title="AMPQ/1.0协议"></a>AMPQ/1.0协议</h4><h4 id="公证节点"><a href="#公证节点" class="headerlink" title="公证节点"></a>公证节点</h4><p>公证节点保证账本更新的唯一性、可行性、正确性。</p><p>每个公证服务可以运行在一个节点或一组节点上。</p><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><p>状态是表示账本上的事实,是一个不可变的对象,表示在特定时刻由一个或多个Corda节点所知的事实。</p><h4 id="状态序列"><a href="#状态序列" class="headerlink" title="状态序列"></a>状态序列</h4><p>状态的生命周期</p><h4 id="合约"><a href="#合约" class="headerlink" title="合约"></a>合约</h4><p>每个状态指向一个合约。</p><p>合约以交易作为输入,并根据合约的规则说明交易是否被认为有效。</p><p>交易只有在合约的每个输入和输出状态被确认为有效的情况下才有效。</p><p>合约代码可以用任意的JVM语言进行编写。</p><p>一个不被合约认可的交易不会作为更新账本的有效提案。</p><h4 id="合约沙箱"><a href="#合约沙箱" class="headerlink" title="合约沙箱"></a>合约沙箱</h4><h4 id="预言机"><a href="#预言机" class="headerlink" title="预言机"></a>预言机</h4><h4 id="女巫攻击"><a href="#女巫攻击" class="headerlink" title="女巫攻击"></a>女巫攻击</h4><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是corda&quot;&gt;&lt;a href=&quot;#什么是corda&quot; class=&quot;headerlink&quot; title=&quot;什么是corda??&quot;&gt;&lt;/a&gt;什么是corda??&lt;/h2&gt;&lt;h3 id=&quot;是什么&quot;&gt;&lt;a href=&quot;#是什么&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="corda" scheme="https://lywlefan.github.io/tags/corda/"/>
    
  </entry>
  
  <entry>
    <title>初始corda</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/%E5%8C%BA%E5%9D%97%E9%93%BE/corda/%E5%88%9D%E5%A7%8Bcorda/"/>
    <id>https://lywlefan.github.io/2019/10/30/前沿技术/区块链/corda/初始corda/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-05T01:42:33.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是corda"><a href="#什么是corda" class="headerlink" title="什么是corda??"></a>什么是corda??</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么?"></a>是什么?</h3><p>corda是一个分布式账本平台。</p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h4 id="corda网络"><a href="#corda网络" class="headerlink" title="corda网络"></a>corda网络</h4><h4 id="账本"><a href="#账本" class="headerlink" title="账本"></a>账本</h4><p>每个节点验证过交易的集合,账本是各个节点自有的。</p><p>每个节点维护一个已知事实的分离数据库。</p><p>没有一个节点知道整个账本。</p><h4 id="身份"><a href="#身份" class="headerlink" title="身份"></a>身份</h4><p>身份有两种:组织的法律身份、网络服务身份。</p><p>法律身份用于交易的当事人,如:现金拥有者。</p><p>网络服务身份用于提供与交易相关的服务,如公证服务或oracle服务。服务身份基于混合KEY。</p><p>身份证明的X.509证书由看门人或其他众所周知的身份签发。身份是众所周知的还是机密的,取决于X.509证书是否公开。</p><h4 id="应用节点"><a href="#应用节点" class="headerlink" title="应用节点"></a>应用节点</h4><h4 id="看门人"><a href="#看门人" class="headerlink" title="看门人"></a>看门人</h4><p>看门人服务可以理解为一个身份准入管理服务加上一个业务许可管理服务,它要求节点提供必要的信息,以及在接受进入网络前必须进行的了解客户的过程。</p><p>要想加入corda网络,节点必须联系看门人并提供必要的信息。看门人许可通过,会颁发TLS许可证书。</p><h4 id="cordaDapps"><a href="#cordaDapps" class="headerlink" title="cordaDapps"></a>cordaDapps</h4><h4 id="AMPQ-1-0协议"><a href="#AMPQ-1-0协议" class="headerlink" title="AMPQ/1.0协议"></a>AMPQ/1.0协议</h4><h4 id="公证节点"><a href="#公证节点" class="headerlink" title="公证节点"></a>公证节点</h4><p>公证节点保证账本更新的唯一性、可行性、正确性。</p><p>每个公证服务可以运行在一个节点或一组节点上。</p><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><p>状态是表示账本上的事实,是一个不可变的对象,表示在特定时刻由一个或多个Corda节点所知的事实。</p><h4 id="状态序列"><a href="#状态序列" class="headerlink" title="状态序列"></a>状态序列</h4><p>状态的生命周期</p><h4 id="合约"><a href="#合约" class="headerlink" title="合约"></a>合约</h4><p>每个状态指向一个合约。</p><p>合约以交易作为输入,并根据合约的规则说明交易是否被认为有效。</p><p>交易只有在合约的每个输入和输出状态被确认为有效的情况下才有效。</p><p>合约代码可以用任意的JVM语言进行编写。</p><p>一个不被合约认可的交易不会作为更新账本的有效提案。</p><h4 id="合约沙箱"><a href="#合约沙箱" class="headerlink" title="合约沙箱"></a>合约沙箱</h4><h4 id="预言机"><a href="#预言机" class="headerlink" title="预言机"></a>预言机</h4><h4 id="女巫攻击"><a href="#女巫攻击" class="headerlink" title="女巫攻击"></a>女巫攻击</h4><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是corda&quot;&gt;&lt;a href=&quot;#什么是corda&quot; class=&quot;headerlink&quot; title=&quot;什么是corda??&quot;&gt;&lt;/a&gt;什么是corda??&lt;/h2&gt;&lt;h3 id=&quot;是什么&quot;&gt;&lt;a href=&quot;#是什么&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="前沿技术" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="区块链" scheme="https://lywlefan.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="corda" scheme="https://lywlefan.github.io/tags/corda/"/>
    
  </entry>
  
  <entry>
    <title>redis基础总结</title>
    <link href="https://lywlefan.github.io/2019/10/30/%E5%90%8E%E7%AB%AF/%E7%BC%93%E5%AD%98/redis/redis%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    <id>https://lywlefan.github.io/2019/10/30/后端/缓存/redis/redis基础总结/</id>
    <published>2019-10-29T16:00:00.000Z</published>
    <updated>2019-11-25T11:23:40.994Z</updated>
    
    <content type="html"><![CDATA[<p>redis附加功能</p><p>“附加功能”部分介绍了Redis在数据结构的基础上为用户提供的额外功能，包括管理数据结构的数据库管理功能和自动过期功能，将数据结构持久化至硬盘从而避免数据丢失的持久化功能，提高多条命令执行效率的流水线功能，保证命令安全性的事务和Lua脚本功能，以及扩展服务器特性的模块功能等。</p><p>Redis的PING命令接受一条可选的消息作为参数，这个命令通常用于测试客户端和服务器之间的连接是否正常:</p><ul><li>连接正常的情况下，将向客户端返回PONG</li><li>如果服务器与客户端的连接不正常，那么客户端将返回一个错误</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 客户端未能连接服务器，返回一个连接错误</span><br><span class="line">        127.0.0.1:6379&gt; PING</span><br><span class="line">        Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br></pre></td></tr></table></figure><p>更换端口号:</p><p>Redis服务器默认使用6379作为端口号，但如果你想使用10086而不是6379作为端口号，那么可以在启动Redis服务器时通过设定port可选项来指定想要的端口号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server --port 10086</span><br></pre></td></tr></table></figure><p>第二种方法是在启动Redis服务器的时候为其提供配置文件，并将想要修改的配置选项写在配置文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server /path/to/your/file</span><br></pre></td></tr></table></figure><p>例如，为了将Redis服务器的端口号改为12345，我们可以在当前文件夹中创建配置文件myredis.conf，并在文件中包含以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port 12345</span><br></pre></td></tr></table></figure><p>然后在启动Redis服务器时向其提供该配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server myredis.conf</span><br></pre></td></tr></table></figure><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;redis附加功能&lt;/p&gt;
&lt;p&gt;“附加功能”部分介绍了Redis在数据结构的基础上为用户提供的额外功能，包括管理数据结构的数据库管理功能和自动过期功能，将数据结构持久化至硬盘从而避免数据丢失的持久化功能，提高多条命令执行效率的流水线功能，保证命令安全性的事务和Lua脚本功
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="redis" scheme="https://lywlefan.github.io/tags/redis/"/>
    
      <category term="缓存" scheme="https://lywlefan.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Vue基础</title>
    <link href="https://lywlefan.github.io/2019/10/24/%E5%89%8D%E7%AB%AF/vue/vue%E5%9F%BA%E7%A1%80/"/>
    <id>https://lywlefan.github.io/2019/10/24/前端/vue/vue基础/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-10-24T10:31:25.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><h4 id="什么是Vue？？"><a href="#什么是Vue？？" class="headerlink" title="什么是Vue？？"></a>什么是Vue？？</h4><p>开发web界面的前端库</p><h4 id="vue特性"><a href="#vue特性" class="headerlink" title="vue特性"></a>vue特性</h4><ul><li>具有<strong>响应式编程</strong>（保持状态和视图同步）</li><li>组件化</li><li>轻量级</li><li>易上手</li></ul><p><strong>MVC</strong>：MVC 模式代表 Model-View-Controller（模型-视图-控制器） 模式。</p><p><strong>MVP</strong>：MVP是Model-View-Presenter的简称，即模型-视图-表现层的缩写。MVP是由MVC模式进化而来的，MVP改进了MVC中的控制器过于臃肿的问题。</p><table><thead><tr><th></th><th>MVC</th><th></th><th>MVP</th></tr></thead><tbody><tr><td>Model</td><td>业务逻辑和实体模型</td><td>Model</td><td>业务逻辑和实体模型</td></tr><tr><td>View</td><td>对应布局文件</td><td>View</td><td>对应Activity，负责view的绘制与用户交互</td></tr><tr><td>Controller</td><td>对应Activity等</td><td>Presenter</td><td>负责完成view与model的交互，处理程序逻辑</td></tr></tbody></table><p><strong>MVVM</strong>：</p><p><strong>MVM</strong>：</p><h4 id="理念"><a href="#理念" class="headerlink" title="理念"></a>理念</h4><p>一切都是组件！</p><h4 id="为什么用vue"><a href="#为什么用vue" class="headerlink" title="为什么用vue"></a>为什么用vue</h4><ul><li>轻量，易上手</li><li>阿里支持，开源weex</li><li>抛弃IE8支持</li><li>Android支持到4.2+</li><li>ios支持到7+</li><li>适用前后端分离项目</li><li>压缩后仅有18KB，不依赖其他</li></ul><h3 id="前端框架基本逻辑"><a href="#前端框架基本逻辑" class="headerlink" title="前端框架基本逻辑"></a>前端框架基本逻辑</h3><ul><li>模板渲染</li><li>事件绑定</li><li>用户交互处理</li></ul><h3 id="实例及选项"><a href="#实例及选项" class="headerlink" title="实例及选项"></a>实例及选项</h3><p>一个Vue实例相当于一个MVVM模式中的ViewModel，实例化的时候传入一个<strong>选项对象</strong>（包括数据、模板、挂载元素、方法、生命周期钩子等）</p><h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><h5 id="el"><a href="#el" class="headerlink" title="el"></a>el</h5><p><strong>为实例提供挂载元素</strong>，类型为字符串。在初始化指定el，实例将立即进入编译过程。</p><h5 id="template"><a href="#template" class="headerlink" title="template"></a>template</h5><p>配置挂载 </p><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;h4 id
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://lywlefan.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu下安装webstorm</title>
    <link href="https://lywlefan.github.io/2019/10/24/%E5%89%8D%E7%AB%AF/idea/webstorm/%E5%9C%A8Ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85webstorm/"/>
    <id>https://lywlefan.github.io/2019/10/24/前端/idea/webstorm/在Ubuntu下安装webstorm/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:38.161Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="idea" scheme="https://lywlefan.github.io/tags/idea/"/>
    
      <category term="webstorm" scheme="https://lywlefan.github.io/tags/webstorm/"/>
    
  </entry>
  
  <entry>
    <title>抓包工具学习</title>
    <link href="https://lywlefan.github.io/2019/10/24/%E5%89%8D%E7%AB%AF/idea/fiddler/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/"/>
    <id>https://lywlefan.github.io/2019/10/24/前端/idea/fiddler/抓包工具学习/</id>
    <published>2019-10-23T16:00:00.000Z</published>
    <updated>2019-11-25T11:25:32.058Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;扫描以下公众号关注小猿↓↓↓↓↓↓↓↓&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                   
      
    
    </summary>
    
      <category term="前端" scheme="https://lywlefan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="idea" scheme="https://lywlefan.github.io/tags/idea/"/>
    
      <category term="fiddler" scheme="https://lywlefan.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>jpa原生sql分页</title>
    <link href="https://lywlefan.github.io/2019/10/18/%E5%90%8E%E7%AB%AF/%E6%A1%86%E6%9E%B6/java/hibernate/jpa%E5%8E%9F%E7%94%9Fsql%E5%88%86%E9%A1%B5/"/>
    <id>https://lywlefan.github.io/2019/10/18/后端/框架/java/hibernate/jpa原生sql分页/</id>
    <published>2019-10-17T16:00:00.000Z</published>
    <updated>2019-11-18T02:15:39.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>其实需求很简单,就是通过查询一个表得到数据列表,然后再对这个数据列表进行分页,自定义sql如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">t.order_number <span class="keyword">AS</span> orderNumber,</span><br><span class="line"><span class="keyword">sum</span>(t.coupon_amt) <span class="keyword">AS</span> <span class="keyword">sum</span>,</span><br><span class="line"><span class="keyword">sum</span>(</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> t.use_state = <span class="string">'NOT_USE'</span> <span class="keyword">THEN</span></span><br><span class="line">t.coupon_amt</span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">) <span class="keyword">AS</span> balance</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">open_oil_coupon t</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">t.user_id = ? <span class="number">1</span></span><br><span class="line"><span class="keyword">AND</span> t.app_id = ? <span class="number">2</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">t.order_id</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">balance = <span class="number">0</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">t.created_at <span class="keyword">DESC</span>,</span><br><span class="line">balance <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="方法一-通过jpa的原生sql分页查询"><a href="#方法一-通过jpa的原生sql分页查询" class="headerlink" title="方法一:通过jpa的原生sql分页查询"></a>方法一:通过jpa的原生sql分页查询</h3><h4 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OilCouponRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">OilCoupon</span>,<span class="title">Long</span>&gt;,<span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">OilCoupon</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Query</span>(value = <span class="string">"SELECT t.order_number AS orderNumber, sum(t.coupon_amt) AS sum, sum(CASE WHEN t.use_state = 'NOT_USE' THEN t.coupon_amt ELSE 0 END ) AS balance FROM open_oil_coupon t WHERE t.user_id = ?1 AND t.app_id = ?2 GROUP BY t.order_number HAVING balance &gt; 0"</span>,nativeQuery = <span class="keyword">true</span>,</span><br><span class="line">            countQuery = <span class="string">"SELECT count(*) FROM (SELECT t.order_number AS orderNumber, sum(t.coupon_amt) AS sum, sum(CASE WHEN t.use_state = 'NOT_USE' THEN t.coupon_amt ELSE 0 END ) AS balance FROM open_oil_coupon t WHERE t.user_id = ?1 AND t.app_id = ?2 GROUP BY t.order_number HAVING balance = 0) T"</span>)</span><br><span class="line"><span class="function">Page&lt;Map&gt; <span class="title">getAllCouponsUsed</span><span class="params">(Long userId, String appId, Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>:countQuery如果带有having等语句最好的办法是把@Query的sql复制一份把他查出来的结果当成表,然后对其进行count(*)查询。</p><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> OpenPage&lt;CouponsVo&gt; <span class="title">getCouponsByOrderId</span><span class="params">(String appId, Long userId, CouponPageVo couponPageVo)</span></span>&#123;</span><br><span class="line">       Pageable pageable = <span class="keyword">new</span> PageRequest(couponPageVo.getPageNum(), couponPageVo.getPageSize(), Sort.Direction.DESC, <span class="string">"order_number"</span>);</span><br><span class="line">       OpenPage&lt;CouponsVo&gt; pages = <span class="keyword">new</span> OpenPage();</span><br><span class="line">       Page page2 = oilCouponRepository.getAllCouponsUsed(userId,appId,pageable);</span><br><span class="line">       List&lt;CouponsVo&gt; couponsVos = JSON.parseArray(JSON.toJSONString(page2.getContent()),CouponsVo.class);</span><br><span class="line">       pages.setContent(couponsVos);</span><br><span class="line">       pages.setPageNum(page2.getNumber());</span><br><span class="line">       pages.setPageSize(page2.getSize());</span><br><span class="line">       pages.setTotalElements(page2.getTotalElements());</span><br><span class="line">       pages.setTotalPages(page2.getTotalPages());</span><br><span class="line">       <span class="keyword">return</span> pages;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>:排序的字段要用跟数据库里面一样的字段名称</p><h3 id="方法二-通过jdbc原生sql拼接的方法进行分页"><a href="#方法二-通过jdbc原生sql拼接的方法进行分页" class="headerlink" title="方法二:通过jdbc原生sql拼接的方法进行分页"></a>方法二:通过jdbc原生sql拼接的方法进行分页</h3><h4 id="抽象的jdbc分页类型"><a href="#抽象的jdbc分页类型" class="headerlink" title="抽象的jdbc分页类型"></a>抽象的jdbc分页类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.winstar.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.winstar.util.OpenPage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 包:com.winstar.manager.repository</span></span><br><span class="line"><span class="comment"> * 类描述: jdbc父Dao封装</span></span><br><span class="line"><span class="comment"> * 创建人:shareyuan</span></span><br><span class="line"><span class="comment"> * 创建时间:2018/12/26 11:52</span></span><br><span class="line"><span class="comment"> * 版本:v1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractServerRepository</span>&lt;<span class="title">T</span>, <span class="title">PK</span> <span class="keyword">extends</span> <span class="title">Serializable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EntityManager entityManager;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;T&gt; entityClass;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EMPYT_STR = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; fieldClassNames = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AbstractServerRepository</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.entityClass = (Class&lt;T&gt;) ((ParameterizedType) getClass()</span><br><span class="line">                .getGenericSuperclass()).getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">this</span>.initEntityFieldsClassNames();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initEntityFieldsClassNames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Field[] fields = <span class="keyword">this</span>.entityClass.getDeclaredFields();</span><br><span class="line">        <span class="keyword">this</span>.fieldClassNames = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            fieldClassNames.put(field.getName(), field.getType().getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 根据SQL查询数据并返回一个List&lt;Map&lt;String,Object&gt;&gt;,将其封装为 Page</span></span><br><span class="line"><span class="comment">    * Param: sql,pageNo,pageSize,values</span></span><br><span class="line"><span class="comment">    * return: Page</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OpenPage <span class="title">findPageBySqlForListMap</span><span class="params">(<span class="keyword">final</span> String sql, <span class="keyword">final</span> <span class="keyword">int</span> pageNo,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">final</span> <span class="keyword">int</span> pageSize, <span class="keyword">final</span> Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String countSql = <span class="string">"SELECT count(1) FROM ("</span>+ removeOrders(sql) + <span class="string">") T"</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">long</span> totalCount = <span class="keyword">this</span>.getCountBySql(countSql, values);</span><br><span class="line">        <span class="keyword">if</span> (totalCount &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> OpenPage();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> startIndex = OpenPage.getStartOfPage(pageNo, pageSize);</span><br><span class="line">            <span class="keyword">final</span> String querySql =getString( sql,<span class="string">" limit "</span>, startIndex,<span class="string">","</span>, pageSize);</span><br><span class="line">            List&lt;Map&lt;String,Object&gt;&gt; list = <span class="keyword">this</span>.jdbcTemplate.queryForList(querySql,values);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> OpenPage(pageNo,pageSize, list,Integer.parseInt(String.valueOf(totalCount)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 根据id获取唯一对象</span></span><br><span class="line"><span class="comment">    * Param: id</span></span><br><span class="line"><span class="comment">    * return: T</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">findOne</span><span class="params">(<span class="keyword">final</span> PK id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> entityManager.find(entityClass,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 根据sql查询数据总数</span></span><br><span class="line"><span class="comment">     * Param:  sql,values</span></span><br><span class="line"><span class="comment">     * return:  Long</span></span><br><span class="line"><span class="comment">     * Author: shareyuan</span></span><br><span class="line"><span class="comment">     * Date: 2018/12/26</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Long <span class="title">getCountBySql</span><span class="params">(<span class="keyword">final</span> String sql, <span class="keyword">final</span> Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForObject(sql, Long.class, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 组合传入字符串数组</span></span><br><span class="line"><span class="comment">    * Param: objs</span></span><br><span class="line"><span class="comment">    * return: String</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/26</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span>  String <span class="title">getString</span><span class="params">(Object... objs)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(objs != <span class="keyword">null</span> &amp;&amp; objs.length &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; objs.length; i++) &#123;</span><br><span class="line">                sb.append(objs[i] == <span class="keyword">null</span> ? EMPYT_STR : objs[i].toString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> EMPYT_STR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 去除sql的orderby 子句，用于分页查询</span></span><br><span class="line"><span class="comment">    * Param: sql</span></span><br><span class="line"><span class="comment">    * return: String</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">removeOrders</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        Pattern p = Pattern.compile(<span class="string">"order\\s*by[\\w|\\W|\\s|\\S]*"</span>,</span><br><span class="line">                Pattern.CASE_INSENSITIVE);</span><br><span class="line">        Matcher m = p.matcher(sql);</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">while</span> (m.find()) &#123;</span><br><span class="line">            m.appendReplacement(sb, <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        m.appendTail(sb);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Description: 去除sql的select 子句，未考虑union的情况</span></span><br><span class="line"><span class="comment">    * Param: sql</span></span><br><span class="line"><span class="comment">    * return: String</span></span><br><span class="line"><span class="comment">    * Author: shareyuan</span></span><br><span class="line"><span class="comment">    * Date: 2018/12/27</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">removeSelect</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> beginPos = sql.toLowerCase().indexOf(<span class="string">"from "</span>);</span><br><span class="line">        Assert.isTrue(beginPos != -<span class="number">1</span>, <span class="string">" hql : "</span> + sql</span><br><span class="line">                + <span class="string">" must has a keyword 'from'"</span>);</span><br><span class="line">        <span class="keyword">return</span> sql.substring(beginPos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Repository-1"><a href="#Repository-1" class="headerlink" title="Repository"></a>Repository</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span>(<span class="string">"oilCouponJdbcRepository"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OilCouponJdbcRepository</span> <span class="keyword">extends</span> <span class="title">AbstractServerRepository</span>&lt;<span class="title">OilCoupon</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> OpenPage&lt;Map&gt; <span class="title">getPage</span><span class="params">(String appId, Long userId, CouponPageVo couponPageVo)</span> </span>&#123;</span><br><span class="line">        StringBuffer sql = <span class="keyword">new</span> StringBuffer(<span class="string">"SELECT t.order_number AS orderNumber, sum(t.coupon_amt) AS sum, sum(CASE WHEN t.use_state = 'NOT_USE' THEN t.coupon_amt ELSE 0 END ) AS balance FROM open_oil_coupon t"</span>);</span><br><span class="line">        List params = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(appId))&#123;</span><br><span class="line">            sql.append(<span class="string">" WHERE t.user_id = ?  "</span>);</span><br><span class="line">            params.add(userId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(appId))&#123;</span><br><span class="line">            sql.append(<span class="string">" AND t.app_id = ? "</span>);</span><br><span class="line">            params.add(appId);</span><br><span class="line">        &#125;</span><br><span class="line">        sql.append(<span class="string">" GROUP BY t.order_number"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.equals(couponPageVo.getUseState(),CommonEnum.USED.getValue()))&#123;</span><br><span class="line">            sql.append(<span class="string">" HAVING balance = 0"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.equals(couponPageVo.getUseState(),CommonEnum.NOT_USE.getValue()))&#123;</span><br><span class="line">            sql.append(<span class="string">" HAVING balance &gt; 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sql.append(<span class="string">" ORDER BY t.created_at DESC,balance "</span>);</span><br><span class="line">        log.info(<span class="string">"分页sql为:&#123;&#125;,分页请求参数为:&#123;&#125;"</span>,sql,params.toArray());</span><br><span class="line">        <span class="keyword">return</span> oilCouponJdbcRepository.findPageBySqlForListMap(sql.toString(),couponPageVo.getPageNum(),couponPageVo.getPageSize(),params.toArray());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>说明</strong>:jdbc分页的好处就是可以多表进行联查自定义sql,相对来说比较灵活,对于复杂sql,我个人感觉可读性要比jpa的自定义sql要好一些。</p><blockquote><p><a href="https://www.jianshu.com/u/354cc1548a33" target="_blank" rel="noopener">【1】简书主页·share猿</a><br><a href="https://juejin.im/user/5a8e759851882524d842d174" target="_blank" rel="noopener">【2】掘金主页·share猿</a></p></blockquote><hr><p><strong>扫描以下公众号关注小猿↓↓↓↓↓↓↓↓</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/3084894-e6e9a10cf3e08bba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>更多资讯请在<strong>简书、微博、今日头条、掘金、CSDN</strong>都可以通过搜索<strong>“Share猿”</strong>找到小猿哦！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;其实需求很简单,就是通过查询一个表得到数据列表,然后再对这个数据列表进行分页,自定义sql如下:&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="后端" scheme="https://lywlefan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://lywlefan.github.io/tags/java/"/>
    
      <category term="框架" scheme="https://lywlefan.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="hibernate" scheme="https://lywlefan.github.io/tags/hibernate/"/>
    
  </entry>
  
</feed>
